{
  "name": "mbpp_420_cube_Sum",
  "language": "go_test.go",
  "prompt": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i%2 == 0 {\n            sum += i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i%2 == 0 {\n            sum += i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpjce73re9_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp_72xoimh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp_72xoimh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp_72xoimh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum = sum + i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq5mxjpdu_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq5mxjpdu_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq5mxjpdu_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 1) * (2*i + 1) * (2*i + 1)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpfwdzp3i4_test.go:32: expected '%!s(int=72)', got '%!s(int=28)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpfwdzp3i4_test.go:32: expected '%!s(int=288)', got '%!s(int=153)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpfwdzp3i4_test.go:32: expected '%!s(int=800)', got '%!s(int=496)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    return n*n*n\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpol261xtr_test.go:28: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpol261xtr_test.go:28: expected '%!s(int=288)', got '%!s(int=27)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpol261xtr_test.go:28: expected '%!s(int=800)', got '%!s(int=64)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum = sum + i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpcbyzyebz_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpcbyzyebz_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpcbyzyebz_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    return n * n * n\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpa6_l1u9o_test.go:28: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpa6_l1u9o_test.go:28: expected '%!s(int=288)', got '%!s(int=27)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpa6_l1u9o_test.go:28: expected '%!s(int=800)', got '%!s(int=64)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=288)', got '%!s(int=72)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=800)', got '%!s(int=288)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpoj9zm3cm_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmph8pa1o1w_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i%2 == 0 {\n            sum += i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp5_yfwnu7_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp5_yfwnu7_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp5_yfwnu7_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    // Write your code here\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmphznv3u7r_test.go:33: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmphznv3u7r_test.go:33: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmphznv3u7r_test.go:33: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpnpd0de_r_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpnpd0de_r_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpnpd0de_r_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum = sum + (i * i * i)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp4verazvf_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp4verazvf_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp4verazvf_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=288)', got '%!s(int=72)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpp0ze7qz7_test.go:32: expected '%!s(int=800)', got '%!s(int=288)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=288)', got '%!s(int=72)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=800)', got '%!s(int=288)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=288)', got '%!s(int=72)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=800)', got '%!s(int=288)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i:=1; i<=n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp4mxkgmre_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp4mxkgmre_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp4mxkgmre_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmphs6elh9t_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmphs6elh9t_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmphs6elh9t_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpq0ycmkfl_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 1) * (2*i + 1) * (2*i + 1)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpxzudvcc6_test.go:32: expected '%!s(int=72)', got '%!s(int=28)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpxzudvcc6_test.go:32: expected '%!s(int=288)', got '%!s(int=153)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpxzudvcc6_test.go:32: expected '%!s(int=800)', got '%!s(int=496)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptfok21rn_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp91pl2206_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=288)', got '%!s(int=72)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpye7bz1cm_test.go:32: expected '%!s(int=800)', got '%!s(int=288)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpogs2t7vi_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123748,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=72)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=288)', got '%!s(int=8)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmpvt8jj4v9_test.go:34: expected '%!s(int=800)', got '%!s(int=72)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmptv9hfyro_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp3cdpjqsh_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package cube_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the cube sum of first n even natural numbers.\nfunc cube_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n\nfunc TestCube_Sum(t *testing.T) {\n  candidate := cube_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 72 },\n     { actual: candidate(3), expected: 288 },\n     { actual: candidate(4), expected: 800 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510492,
      "stdout": "--- FAIL: TestCube_Sum (0.00s)\n    --- FAIL: TestCube_Sum/test_num__0 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=72)', got '%!s(int=9)'\n    --- FAIL: TestCube_Sum/test_num__1 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=288)', got '%!s(int=36)'\n    --- FAIL: TestCube_Sum/test_num__2 (0.00s)\n        tmp7fxo69qw_test.go:32: expected '%!s(int=800)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
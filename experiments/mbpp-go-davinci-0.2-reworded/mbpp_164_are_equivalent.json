{
  "name": "mbpp_164_are_equivalent",
  "language": "go_test.go",
  "prompt": "package are_equivalent_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to determine if the sum of the divisors of two integers are the same.\nfunc are_equivalent(num1 int, num2 int) bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "reworded",
  "tests": "func TestAre_Equivalent(t *testing.T) {\n  candidate := are_equivalent\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(36, 57), expected: false },\n     { actual: candidate(2, 4), expected: false },\n     { actual: candidate(23, 47), expected: true },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    // Write your code here\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1 int = 0\n    var sum2 int = 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    if num1 == num2 {\n        return true\n    }\n    if num1 < num2 {\n        return are_equivalent(num2, num1)\n    }\n    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    fmt.Println(divisors1)\n    fmt.Println(divisors2)\n    fmt.Println(sum1)\n    fmt.Println(sum2)\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    // Write your code here\n    return false\n}\n",
    "    divisors1 := divisors(num1)\n    divisors2 := divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    return sum(divisors1) == sum(divisors2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := 0\n    sum2 := 0\n    for _, divisor := range divisors1 {\n        sum1 += divisor\n    }\n    for _, divisor := range divisors2 {\n        sum2 += divisor\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum_divisors(divisors1)\n    sum2 := sum_divisors(divisors2)\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    divisors1 := make([]int, 0)\n    divisors2 := make([]int, 0)\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, v := range divisors1 {\n        sum1 += v\n    }\n    for _, v := range divisors2 {\n        sum2 += v\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1 int = 0\n    var sum2 int = 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    if num1 == num2 {\n        return true\n    }\n    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n\n    sum1 := 0\n    for _, divisor := range divisors1 {\n        sum1 += divisor\n    }\n\n    sum2 := 0\n    for _, divisor := range divisors2 {\n        sum2 += divisor\n    }\n\n    return sum1 == sum2\n}\n",
    "    // TODO - Add your code here\n    return false\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int = 0, 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    var sum1 int\n    var sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    if num1 == num2 {\n        return true\n    }\n    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    return sum(divisors1) == sum(divisors2)\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum_int_slice(divisors1)\n    sum2 := sum_int_slice(divisors2)\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var divisors1 []int\n    var divisors2 []int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    var sum1 int\n    var sum2 int\n    for _, value := range divisors1 {\n        sum1 += value\n    }\n    for _, value := range divisors2 {\n        sum2 += value\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    divisors1 := make([]int, 0)\n    divisors2 := make([]int, 0)\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, v := range divisors1 {\n        sum1 += v\n    }\n    for _, v := range divisors2 {\n        sum2 += v\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    // Write your code here\n    return false\n}\n",
    "    divisors1 := []int{}\n    divisors2 := []int{}\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, v := range divisors1 {\n        sum1 += v\n    }\n    for _, v := range divisors2 {\n        sum2 += v\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1 int = 0\n    var sum2 int = 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum_divisors(divisors1)\n    sum2 := sum_divisors(divisors2)\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    return sum(divisors1) == sum(divisors2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    if num1 == num2 {\n        return true\n    }\n    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    // Your code goes here\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i <= num1 / 2; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2 / 2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := []int{}\n    divisors2 := []int{}\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, num := range divisors1 {\n        sum1 += num\n    }\n    for _, num := range divisors2 {\n        sum2 += num\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    var sum1, sum2 int\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    divisors1 := []int{}\n    divisors2 := []int{}\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, value := range divisors1 {\n        sum1 += value\n    }\n    for _, value := range divisors2 {\n        sum2 += value\n    }\n    if sum1 == sum2 {\n        return true\n    }\n    return false\n}\n",
    "    if num1 == num2 {\n        return true\n    }\n\n    if num1 < num2 {\n        return are_equivalent(num2, num1)\n    }\n\n    sum1 := 0\n    sum2 := 0\n\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := divisors(num1)\n    divisors2 := divisors(num2)\n    return sum(divisors1) == sum(divisors2)\n}\n",
    "    divisors1 := get_divisors(num1)\n    divisors2 := get_divisors(num2)\n    sum1 := sum(divisors1)\n    sum2 := sum(divisors2)\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n",
    "    var sum1 int = 0\n    var sum2 int = 0\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    divisors1 := []int{}\n    divisors2 := []int{}\n    for i := 1; i < num1; i++ {\n        if num1 % i == 0 {\n            divisors1 = append(divisors1, i)\n        }\n    }\n    for i := 1; i < num2; i++ {\n        if num2 % i == 0 {\n            divisors2 = append(divisors2, i)\n        }\n    }\n    sum1 := 0\n    sum2 := 0\n    for _, v := range divisors1 {\n        sum1 += v\n    }\n    for _, v := range divisors2 {\n        sum2 += v\n    }\n    return sum1 == sum2\n}\n",
    "    sum1 := 0\n    sum2 := 0\n    for i := 1; i <= num1; i++ {\n        if num1 % i == 0 {\n            sum1 += i\n        }\n    }\n    for i := 1; i <= num2; i++ {\n        if num2 % i == 0 {\n            sum2 += i\n        }\n    }\n    return sum1 == sum2\n}\n",
    "    return sum_divisors(num1) == sum_divisors(num2)\n}\n"
  ]
}
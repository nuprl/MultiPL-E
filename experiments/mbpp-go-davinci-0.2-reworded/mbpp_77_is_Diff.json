{
  "name": "mbpp_77_is_Diff",
  "language": "go_test.go",
  "prompt": "package is_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find whether a number is divisible by 11.\nfunc is_Diff(n int) bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "func TestIs_Diff(t *testing.T) {\n  candidate := is_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(12345), expected: false },\n     { actual: candidate(1212112), expected: true },\n     { actual: candidate(1212), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return is_Diff(even - odd)\n}\n",
    "    if n < 10 {\n        return false\n    }\n    var odd, even int\n    for n > 0 {\n        odd += n % 10\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return odd - even == 0 || odd - even == 11 || odd - even == -11\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n = n / 10\n        even += n % 10\n        n = n / 10\n    }\n    return is_Diff(even - odd)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd_sum := 0\n    even_sum := 0\n    for n > 0 {\n        odd_sum += n % 10\n        n /= 10\n        even_sum += n % 10\n        n /= 10\n    }\n    return odd_sum - even_sum == 0 || odd_sum - even_sum == 11 || odd_sum - even_sum == -11\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n /= 10\n        even += n % 10\n        n /= 10\n        odd += n % 10\n    }\n    return is_Diff(even - odd)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd, even := 0, 0\n    for n > 0 {\n        odd += n % 10\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return odd - even == 0 || odd - even == 11 || odd - even == -11\n}\n",
    "    if n == 0 {\n        return false\n    }\n    if n == 11 {\n        return true\n    }\n    if n < 0 {\n        n = -n\n    }\n    if n < 11 {\n        return false\n    }\n    return is_Diff(n - 11)\n}\n",
    "    if n == 0 {\n        return false\n    }\n    if n == 11 {\n        return true\n    }\n    if n < 0 {\n        return is_Diff(-n)\n    }\n    return is_Diff(n - 11)\n}\n",
    "    if n == 0 {\n        return true\n    }\n    if n < 10 {\n        return false\n    }\n    odd := 0\n    even := 0\n    for n > 0 {\n        odd += n % 10\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return is_Diff(odd - even)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n = n / 10\n        even += n % 10\n        n = n / 10\n    }\n    return is_Diff(odd - even)\n}\n",
    "    if n == 0 {\n        return false\n    }\n    var sum int\n    for n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum % 11 == 0\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd_sum := 0\n    even_sum := 0\n    for n > 0 {\n        odd_sum += n % 10\n        n /= 10\n        even_sum += n % 10\n        n /= 10\n    }\n    return odd_sum - even_sum == 0 || odd_sum - even_sum == 11 || odd_sum - even_sum == -11\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return is_Diff(odd - even)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n = n / 10\n        even += n % 10\n        n = n / 10\n    }\n    return is_Diff(odd - even)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n /= 10\n        odd -= n % 10\n        n /= 10\n        even += n % 10\n    }\n    return odd == 0 || even == 0\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n /= 10\n        odd -= n % 10\n        n /= 10\n        even += n % 10\n    }\n    return odd == 0 || even == 0\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd_sum := 0\n    even_sum := 0\n    for n > 0 {\n        odd_sum += n % 10\n        n /= 10\n        even_sum += n % 10\n        n /= 10\n    }\n    return odd_sum - even_sum == 0 || odd_sum - even_sum == 11 || odd_sum - even_sum == -11\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n = n / 10\n        even += n % 10\n        n = n / 10\n    }\n    return is_Diff(odd - even)\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := 0\n    even := 0\n    for n > 0 {\n        odd += n % 10\n        n /= 10\n        even += n % 10\n        n /= 10\n    }\n    return odd - even == 0 || odd - even == 11 || odd - even == -11\n}\n",
    "    if n < 0 {\n        n = -n\n    }\n    if n < 10 {\n        return false\n    }\n    odd := n % 10\n    even := 0\n    for n > 0 {\n        n = n / 10\n        even += n % 10\n        n = n / 10\n    }\n    return is_Diff(odd - even)\n}\n"
  ]
}
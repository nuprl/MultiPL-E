{
  "name": "mbpp_271_even_Power_Sum",
  "language": "go_test.go",
  "prompt": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_271_even_Power_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp4c6bwl6f_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var i, sum int\n    for i = 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpa7ozrbyk_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpa7ozrbyk_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpa7ozrbyk_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpoqqr6ip5_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpoqqr6ip5_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpoqqr6ip5_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i)**5\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_8so8irj_test.go:12:22: invalid indirect of 5 (type untyped int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    var i int = 0\n    for i = 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp4gqe4tfc_test.go:35: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp4gqe4tfc_test.go:35: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp4gqe4tfc_test.go:35: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i%2 == 0 {\n            sum += i*i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmphjle6uzv_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmphjle6uzv_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmphjle6uzv_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    result := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            result += i * i * i * i * i\n        }\n    }\n    return result\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpg_3eil48_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpg_3eil48_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpg_3eil48_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i*i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i*i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmplmomszad_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=8832)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpbketz5wa_test.go:29: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp4ru02tpp_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2*i)**5\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122719,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnzomf3tg_test.go:12:22: invalid indirect of 5 (type untyped int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp1ojxwe3t_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=1056)', got '%!s(int=0)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmp03q6s28g_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpccspb557_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmppqx5eumf_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package even_Power_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\nfunc even_Power_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestEven_Power_Sum(t *testing.T) {\n  candidate := even_Power_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 1056 },\n     { actual: candidate(3), expected: 8832 },\n     { actual: candidate(1), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509734,
      "stdout": "--- FAIL: TestEven_Power_Sum (0.00s)\n    --- FAIL: TestEven_Power_Sum/test_num__0 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=1056)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__1 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=8832)', got '%!s(int=32)'\n    --- FAIL: TestEven_Power_Sum/test_num__2 (0.00s)\n        tmpctr3nn2j_test.go:34: expected '%!s(int=32)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
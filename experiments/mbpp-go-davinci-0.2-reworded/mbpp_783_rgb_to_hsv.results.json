{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "go_test.go",
  "prompt": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "reworded",
  "tests": "func TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h float64\n    var s float64\n    var v float64\n    var max float64\n    var min float64\n    var diff float64\n    var r_f float64\n    var g_f float64\n    var b_f float64\n\n    r_f = float64(r)\n    g_f = float64(g)\n    b_f = float64(b)\n\n    max = r_f\n    if g_f > max {\n        max = g_f\n    }\n    if b_f > max {\n        max = b_f\n    }\n\n    min = r_f\n    if g_f < min {\n        min = g_f\n    }\n    if b_f < min {\n        min = b_f\n    }\n\n    diff = max - min\n\n    if max == min {\n        h = 0\n    } else if max == r_f {\n        h = 60 * ((g_f - b_f) / diff)\n    } else if max == g_f {\n        h = 60 * ((b_f - r_f) / diff) + 120\n    } else if max == b_f {\n        h = 60 * ((r_f - g_f) / diff) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    v = max\n\n    return map[string]interface{}{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpt8kr4l0m_test.go:82: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'map[h:%!s(float64=0) s:%!s(float64=0) v:%!s(float64=255)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpt8kr4l0m_test.go:82: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=120) s:%!s(float64=1) v:%!s(float64=215)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpt8kr4l0m_test.go:82: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=149.2682926829268) s:%!s(float64=0.9534883720930233) v:%!s(float64=215)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h int\n    var s int\n    var v int\n    var min int\n    var max int\n    var delta int\n\n    min = min(min(r, g), b)\n    max = max(max(r, g), b)\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_bggaly_test.go:17:18: cannot call non-function min (type int)\n/tmp/tmp1_bggaly_test.go:18:18: cannot call non-function max (type int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    min := min(r, g, b)\n    max := max(r, g, b)\n    delta := max - min\n    if delta == 0 {\n        h = 0\n    } else if max == r {\n        h = 60 * ((g - b) / delta % 6)\n    } else if max == g {\n        h = 60 * ((b - r) / delta + 2)\n    } else if max == b {\n        h = 60 * ((r - g) / delta + 4)\n    }\n    if max == 0 {\n        s = 0\n    } else {\n        s = delta / max * 100\n    }\n    v = max / 255 * 100\n    return fmt.Sprintf(\"(%d, %d, %d)\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7b0q4mrn_test.go:11:12: undefined: min\n/tmp/tmp7b0q4mrn_test.go:12:12: undefined: max\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h int\n    var s int\n    var v int\n\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta) % 360\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    v = cmax\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5n9awop_test.go:14:13: undefined: max\n/tmp/tmpc5n9awop_test.go:15:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return []int{h, s, v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return []int{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2(0x5230c0, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000001380)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x5230c0, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa1a0)\n\t/tmp/tmpm78jvct3_test.go:36 +0x22f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000001380)\n\t/tmp/tmpm78jvct3_test.go:55 +0x59\ntesting.tRunner(0xc000001380, 0x54f240)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var min, max, delta float64\n\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n\n    v = max\n\n    delta = max - min\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", int(h), int(s), int(v))\n    }\n\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", int(h), int(s), int(v))\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmplt6jz03d_test.go:71: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '-9223372036854775808, 0, 255'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmplt6jz03d_test.go:71: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '120, 1, 215'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmplt6jz03d_test.go:71: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '149, 0, 215'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Write your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement this function\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var max, min int\n    var delta int\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    delta = max - min\n\n    if delta == 0 {\n        h = 0\n    } else if max == r {\n        h = 60 * ((g - b) / delta)\n    } else if max == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if max == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = delta / max\n    }\n\n    v = max\n\n    return fmt.Sprintf(\"%d %d %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpank15ob1_test.go:68: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '0 0 255'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpank15ob1_test.go:68: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '120 1 215'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpank15ob1_test.go:68: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '120 0 215'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h int\n    var s int\n    var v int\n\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta % 6)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta + 2)\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta + 4)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax * 100\n    }\n\n    v = cmax / 255 * 100\n\n    return []int{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyfaq43m0_test.go:14:13: undefined: max\n/tmp/tmpyfaq43m0_test.go:15:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement this function\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmps8hqlv1h_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var min, max, delta int\n    min = min(r, min(g, b))\n    max = max(r, max(g, b))\n    delta = max - min\n    v = float64(max) / 255.0\n    if max != 0 {\n        s = float64(delta) / float64(max)\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n    }\n    if r == max {\n        h = float64(g - b) / float64(delta)\n    } else if g == max {\n        h = 2 + float64(b - r) / float64(delta)\n    } else {\n        h = 4 + float64(r - g) / float64(delta)\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptzdn7fmg_test.go:12:21: cannot call non-function min (type int)\n/tmp/tmptzdn7fmg_test.go:13:21: cannot call non-function max (type int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa1a0)\n\t/tmp/tmpvylng46i_test.go:40 +0x358\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpvylng46i_test.go:61 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e8)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h float64\n    var s float64\n    var v float64\n    var cmax float64\n    var cmin float64\n    var diff float64\n    var rf float64\n    var gf float64\n    var bf float64\n\n    rf = float64(r) / 255.0\n    gf = float64(g) / 255.0\n    bf = float64(b) / 255.0\n\n    cmax = rf\n    if gf > cmax {\n        cmax = gf\n    }\n    if bf > cmax {\n        cmax = bf\n    }\n\n    cmin = rf\n    if gf < cmin {\n        cmin = gf\n    }\n    if bf < cmin {\n        cmin = bf\n    }\n\n    diff = cmax - cmin\n\n    if cmax == cmin {\n        h = 0\n    } else if cmax == rf {\n        h = 60 * ((gf - bf) / diff)\n    } else if cmax == gf {\n        h = 60 * ((bf - rf) / diff) + 120\n    } else if cmax == bf {\n        h = 60 * ((rf - gf) / diff) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = diff / cmax\n    }\n\n    v = cmax\n\n    return [3]float64{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpwxxnbo14_test.go:82: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '[%!s(float64=0) %!s(float64=0) %!s(float64=1)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpwxxnbo14_test.go:82: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '[%!s(float64=120) %!s(float64=1) %!s(float64=0.8431372549019608)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpwxxnbo14_test.go:82: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '[%!s(float64=149.26829268292684) %!s(float64=0.9534883720930233) %!s(float64=0.8431372549019608)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.011s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min float64\n    var diff float64\n\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n\n    diff = max - min\n\n    v = max\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    if s == 0 {\n        h = 0\n    } else {\n        if r == int(max) {\n            h = (float64(g) - float64(b)) / diff\n        } else if g == int(max) {\n            h = 2 + (float64(b) - float64(r)) / diff\n        } else {\n            h = 4 + (float64(r) - float64(g)) / diff\n        }\n        h *= 60\n        if h < 0 {\n            h += 360\n        }\n    }\n\n    return fmt.Sprintf(\"h: %f, s: %f, v: %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpgpsubis0_test.go:74: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'h: 0.000000, s: 0.000000, v: 255.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpgpsubis0_test.go:74: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'h: 120.000000, s: 1.000000, v: 215.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpgpsubis0_test.go:74: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'h: 149.268293, s: 0.953488, v: 215.000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min, diff float64\n    max = float64(r)\n    if max < float64(g) {\n        max = float64(g)\n    }\n    if max < float64(b) {\n        max = float64(b)\n    }\n    min = float64(r)\n    if min > float64(g) {\n        min = float64(g)\n    }\n    if min > float64(b) {\n        min = float64(b)\n    }\n    diff = max - min\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n    if s == 0 {\n        h = 0\n    } else {\n        if r == int(max) {\n            h = float64(g - b) / diff\n        } else if g == int(max) {\n            h = 2 + float64(b - r) / diff\n        } else {\n            h = 4 + float64(r - g) / diff\n        }\n        h *= 60\n        if h < 0 {\n            h += 360\n        }\n    }\n    v = max / 255\n    return []float64{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmppuf5e5tm_test.go:66: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '[%!s(float64=0) %!s(float64=0) %!s(float64=1)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmppuf5e5tm_test.go:66: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '[%!s(float64=120) %!s(float64=1) %!s(float64=0.8431372549019608)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmppuf5e5tm_test.go:66: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '[%!s(float64=149.26829268292684) %!s(float64=0.9534883720930233) %!s(float64=0.8431372549019608)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Write - Your - Code\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmplyg3gbuo_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmplyg3gbuo_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmplyg3gbuo_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa160)\n\t/tmp/tmpcg6jv3gc_test.go:42 +0x30f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpcg6jv3gc_test.go:63 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Write your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    min = min(r, min(g, b))\n    max = max(r, max(g, b))\n    delta = max - min\n\n    v = max\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbt2qe9hf_test.go:13:21: cannot call non-function min (type int)\n/tmp/tmpbt2qe9hf_test.go:14:21: cannot call non-function max (type int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var max, min int\n    var delta int\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    delta = max - min\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = delta * 100 / max\n    }\n\n    if delta == 0 {\n        h = 0\n    } else if r == max {\n        h = 60 * (g - b) / delta\n    } else if g == max {\n        h = 120 + 60 * (b - r) / delta\n    } else if b == max {\n        h = 240 + 60 * (r - g) / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    v = max * 100 / 255\n\n    return map[string]int{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp99_er_5x_test.go:76: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'map[h:%!s(int=0) s:%!s(int=0) v:%!s(int=100)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp99_er_5x_test.go:76: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'map[h:%!s(int=120) s:%!s(int=100) v:%!s(int=84)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp99_er_5x_test.go:76: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'map[h:%!s(int=149) s:%!s(int=95) v:%!s(int=84)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n    }\n    if delta == 0 {\n        h = 0\n    } else if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else if b == max {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp8xk08mfr_test.go:63: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '0, 0, 255'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp8xk08mfr_test.go:63: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '120, 100, 215'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp8xk08mfr_test.go:63: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '149, 95, 215'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h float64 = 0\n    var s float64 = 0\n    var v float64 = 0\n    var min float64 = 0\n    var max float64 = 0\n    var delta float64 = 0\n\n    r_float := float64(r)\n    g_float := float64(g)\n    b_float := float64(b)\n\n    min = r_float\n    if g_float < min {\n        min = g_float\n    }\n    if b_float < min {\n        min = b_float\n    }\n\n    max = r_float\n    if g_float > max {\n        max = g_float\n    }\n    if b_float > max {\n        max = b_float\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]interface{}{\n            \"h\": h,\n            \"s\": s,\n            \"v\": v,\n        }\n    }\n\n    if r_float == max {\n        h = (g_float - b_float) / delta\n    } else if g_float == max {\n        h = 2 + (b_float - r_float) / delta\n    } else {\n        h = 4 + (r_float - g_float) / delta\n    }\n\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]interface{}{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpi9h26fa5_test.go:88: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'map[h:%!s(float64=NaN) s:%!s(float64=0) v:%!s(float64=255)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpi9h26fa5_test.go:88: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=120) s:%!s(float64=1) v:%!s(float64=215)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpi9h26fa5_test.go:88: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=149.26829268292684) s:%!s(float64=0.9534883720930233) v:%!s(float64=215)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    r = r / 255\n    g = g / 255\n    b = b / 255\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return fmt.Sprintf(\"h: %.2f, s: %.2f, v: %.2f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmm5k9r0a_test.go:14:13: undefined: max\n/tmp/tmpmm5k9r0a_test.go:15:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    rf, gf, bf := float64(r), float64(g), float64(b)\n    cmax := max(rf, gf, bf)\n    cmin := min(rf, gf, bf)\n    delta := cmax - cmin\n\n    // Hue\n    if delta == 0 {\n        h = 0\n    } else if cmax == rf {\n        h = 60 * ((gf - bf) / delta)\n    } else if cmax == gf {\n        h = 60 * ((bf - rf) / delta + 2)\n    } else if cmax == bf {\n        h = 60 * ((rf - gf) / delta + 4)\n    }\n\n    // Saturation\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    // Value\n    v = cmax\n\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppcixxcts_test.go:12:13: undefined: max\n/tmp/tmppcixxcts_test.go:13:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h float64\n    var s float64\n    var v float64\n    var min float64\n    var max float64\n    var delta float64\n\n    r = r / 255\n    g = g / 255\n    b = b / 255\n\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%f %f %f\", h, s, v)\n    }\n\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n\n    h = h * 60\n    if h < 0 {\n        h = h + 360\n    }\n\n    return fmt.Sprintf(\"%f %f %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp0b6n6pb7_test.go:80: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'NaN 0.000000 1.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp0b6n6pb7_test.go:80: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '-1.000000 0.000000 0.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp0b6n6pb7_test.go:80: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '-1.000000 0.000000 0.000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var min, max, delta float64\n    var rf, gf, bf float64\n\n    rf = float64(r)\n    gf = float64(g)\n    bf = float64(b)\n\n    min = rf\n    if gf < min {\n        min = gf\n    }\n    if bf < min {\n        min = bf\n    }\n\n    max = rf\n    if gf > max {\n        max = gf\n    }\n    if bf > max {\n        max = bf\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]float64{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if rf == max {\n        h = (gf - bf) / delta\n    } else if gf == max {\n        h = 2 + (bf - rf) / delta\n    } else {\n        h = 4 + (rf - gf) / delta\n    }\n\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]float64{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp8s187i2v_test.go:77: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'map[h:%!s(float64=NaN) s:%!s(float64=0) v:%!s(float64=255)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp8s187i2v_test.go:77: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=120) s:%!s(float64=1) v:%!s(float64=215)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp8s187i2v_test.go:77: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'map[h:%!s(float64=149.26829268292684) s:%!s(float64=0.9534883720930233) v:%!s(float64=215)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var min, max, delta float64\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return []float64{h, s, v}\n    }\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return []float64{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp03syqb12_test.go:64: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '[%!s(float64=NaN) %!s(float64=0) %!s(float64=255)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp03syqb12_test.go:64: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '[%!s(float64=120) %!s(float64=1) %!s(float64=215)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp03syqb12_test.go:64: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '[%!s(float64=149.26829268292684) %!s(float64=0.9534883720930233) %!s(float64=215)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa1a0)\n\t/tmp/tmpvylng46i_test.go:40 +0x358\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpvylng46i_test.go:61 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e8)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement me\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpb3dh0ox6_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpb3dh0ox6_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpb3dh0ox6_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa160)\n\t/tmp/tmpcg6jv3gc_test.go:42 +0x30f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpcg6jv3gc_test.go:63 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa160)\n\t/tmp/tmpcg6jv3gc_test.go:42 +0x30f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpcg6jv3gc_test.go:63 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min int\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n    if b > max {\n        max = b\n    }\n    if b < min {\n        min = b\n    }\n    v = float64(max) / 255.0\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(max - min) / float64(max)\n    }\n    if max == min {\n        h = 0\n    } else {\n        switch max {\n        case r:\n            h = 60 * (float64(g - b) / float64(max - min))\n            if h < 0 {\n                h += 360\n            }\n        case g:\n            h = 60 * (2 + float64(b - r) / float64(max - min))\n        case b:\n            h = 60 * (4 + float64(r - g) / float64(max - min))\n        }\n    }\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpa0zpvfdx_test.go:64: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '0.000000, 0.000000, 1.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpa0zpvfdx_test.go:64: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '120.000000, 1.000000, 0.843137'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpa0zpvfdx_test.go:64: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '149.268293, 0.953488, 0.843137'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min, diff float64\n    max = float64(r)\n    if g > max {\n        max = float64(g)\n    }\n    if b > max {\n        max = float64(b)\n    }\n    min = float64(r)\n    if g < min {\n        min = float64(g)\n    }\n    if b < min {\n        min = float64(b)\n    }\n    diff = max - min\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n    if s == 0 {\n        h = 0\n    } else {\n        if r == max {\n            h = (float64(g) - float64(b)) / diff\n        } else if g == max {\n            h = 2 + (float64(b) - float64(r)) / diff\n        } else {\n            h = 4 + (float64(r) - float64(g)) / diff\n        }\n        h *= 60\n        if h < 0 {\n            h += 360\n        }\n    }\n    v = max\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0y7kh9_c_test.go:13:10: invalid operation: g > max (mismatched types int and float64)\n/tmp/tmp0y7kh9_c_test.go:16:10: invalid operation: b > max (mismatched types int and float64)\n/tmp/tmp0y7kh9_c_test.go:20:10: invalid operation: g < min (mismatched types int and float64)\n/tmp/tmp0y7kh9_c_test.go:23:10: invalid operation: b < min (mismatched types int and float64)\n/tmp/tmp0y7kh9_c_test.go:35:14: invalid operation: r == max (mismatched types int and float64)\n/tmp/tmp0y7kh9_c_test.go:37:21: invalid operation: g == max (mismatched types int and float64)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here.\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpc858t7ze_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpc858t7ze_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpc858t7ze_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa160)\n\t/tmp/tmpb5grexca_test.go:36 +0x30f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpb5grexca_test.go:55 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h int\n    var s int\n    var v int\n    var min int\n    var max int\n    var delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return []int{h, s, v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return []int{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x5230c0, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x5230c0, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa1c0)\n\t/tmp/tmpw7y_i1xv_test.go:44 +0x254\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpw7y_i1xv_test.go:65 +0x59\ntesting.tRunner(0xc000102600, 0x54f240)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    r = r / 255\n    g = g / 255\n    b = b / 255\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return fmt.Sprintf(\"(%f, %f, %f)\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp97jn463s_test.go:14:13: undefined: max\n/tmp/tmp97jn463s_test.go:15:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min int\n    var diff int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    diff = max - min\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(diff) / float64(max)\n    }\n\n    if s == 0 {\n        h = 0\n    } else {\n        switch max {\n        case r:\n            h = float64(g - b) / float64(diff)\n            if h < 0 {\n                h += 6\n            }\n        case g:\n            h = float64(b - r) / float64(diff) + 2\n        case b:\n            h = float64(r - g) / float64(diff) + 4\n        }\n        h /= 6\n    }\n    v = float64(max) / 255\n\n    return fmt.Sprintf(\"h: %f, s: %f, v: %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpglsezvrg_test.go:72: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'h: 0.000000, s: 0.000000, v: 1.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpglsezvrg_test.go:72: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'h: 0.333333, s: 1.000000, v: 0.843137'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpglsezvrg_test.go:72: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'h: 0.414634, s: 0.953488, v: 0.843137'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpehpgk_7c_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h float64\n    var s float64\n    var v float64\n    var min float64\n    var max float64\n    var delta float64\n\n    if r > g {\n        if r > b {\n            max = float64(r)\n        } else {\n            max = float64(b)\n        }\n    } else {\n        if g > b {\n            max = float64(g)\n        } else {\n            max = float64(b)\n        }\n    }\n\n    if r < g {\n        if r < b {\n            min = float64(r)\n        } else {\n            min = float64(b)\n        }\n    } else {\n        if g < b {\n            min = float64(g)\n        } else {\n            min = float64(b)\n        }\n    }\n\n    delta = max - min\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = delta / max\n    }\n\n    if delta == 0 {\n        h = 0\n    } else if r == max {\n        h = 60 * ((float64(g) - float64(b)) / delta)\n    } else if g == max {\n        h = 60 * (2 + (float64(b) - float64(r)) / delta)\n    } else if b == max {\n        h = 60 * (4 + (float64(r) - float64(g)) / delta)\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    v = max / 255\n\n    return map[string]interface{}{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprkkqitnd_test.go:55:17: invalid operation: r == max (mismatched types int and float64)\n/tmp/tmprkkqitnd_test.go:57:17: invalid operation: g == max (mismatched types int and float64)\n/tmp/tmprkkqitnd_test.go:59:17: invalid operation: b == max (mismatched types int and float64)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000001380)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa180)\n\t/tmp/tmpmo7b4xom_test.go:40 +0x34f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000001380)\n\t/tmp/tmpmo7b4xom_test.go:61 +0x59\ntesting.tRunner(0xc000001380, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta % 6)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta + 2)\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta + 4)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax * 100\n    }\n\n    v = cmax / 255 * 100\n\n    return fmt.Sprintf(\"H: %d, S: %d, V: %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp79a7d60j_test.go:11:13: undefined: max\n/tmp/tmp79a7d60j_test.go:12:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp3bt746qk_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    rf := float64(r)\n    gf := float64(g)\n    bf := float64(b)\n    max := rf\n    if gf > max {\n        max = gf\n    }\n    if bf > max {\n        max = bf\n    }\n    min := rf\n    if gf < min {\n        min = gf\n    }\n    if bf < min {\n        min = bf\n    }\n    v = max\n    if max == 0 {\n        s = 0\n    } else {\n        s = (max - min) / max\n    }\n    if max == min {\n        h = 0\n    } else {\n        if max == rf {\n            h = 60 * (gf - bf) / (max - min)\n        } else if max == gf {\n            h = 60 * (bf - rf) / (max - min) + 120\n        } else {\n            h = 60 * (rf - gf) / (max - min) + 240\n        }\n        if h < 0 {\n            h += 360\n        }\n    }\n    return []float64{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp0g4jisw6_test.go:66: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '[%!s(float64=0) %!s(float64=0) %!s(float64=255)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp0g4jisw6_test.go:66: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '[%!s(float64=120) %!s(float64=1) %!s(float64=215)]'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp0g4jisw6_test.go:66: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '[%!s(float64=149.26829268292684) %!s(float64=0.9534883720930233) %!s(float64=215)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpooxs0p9d_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpooxs0p9d_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpooxs0p9d_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min float64\n    if r > g {\n        max = float64(r)\n        min = float64(g)\n    } else {\n        max = float64(g)\n        min = float64(r)\n    }\n    if b > max {\n        max = float64(b)\n    } else if b < min {\n        min = float64(b)\n    }\n    v = max\n    if max == 0 {\n        s = 0\n    } else {\n        s = (max - min) / max\n    }\n    if max == min {\n        h = 0\n    } else {\n        if max == float64(r) {\n            h = 60 * ((float64(g) - float64(b)) / (max - min))\n        } else if max == float64(g) {\n            h = 60 * (2 + (float64(b) - float64(r)) / (max - min))\n        } else {\n            h = 60 * (4 + (float64(r) - float64(g)) / (max - min))\n        }\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpef0twkee_test.go:19:10: invalid operation: b > max (mismatched types int and float64)\n/tmp/tmpef0twkee_test.go:21:17: invalid operation: b < min (mismatched types int and float64)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000102600)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa160)\n\t/tmp/tmpb5grexca_test.go:36 +0x30f\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000102600)\n\t/tmp/tmpb5grexca_test.go:55 +0x59\ntesting.tRunner(0xc000102600, 0x54f1e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n\n    min = min(r, min(g, b))\n    max = max(r, max(g, b))\n    delta = max - min\n\n    v = max\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123487,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbt2qe9hf_test.go:13:21: cannot call non-function min (type int)\n/tmp/tmpbt2qe9hf_test.go:14:21: cannot call non-function max (type int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\npanic: runtime error: integer divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1143 +0x332\ntesting.tRunner.func1(0xc000001380)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1146 +0x4b6\npanic(0x523060, 0x616a20)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:965 +0x1b9\ncommand-line-arguments_test.rgb_to_hsv(0xff, 0xff, 0xff, 0x4cd164, 0x5fa180)\n\t/tmp/tmp93jx8_zj_test.go:36 +0x332\ncommand-line-arguments_test.TestRgb_To_Hsv(0xc000001380)\n\t/tmp/tmp93jx8_zj_test.go:55 +0x59\ntesting.tRunner(0xc000001380, 0x54f1e8)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1193 +0xef\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1238 +0x2b3\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Your code goes here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmphecyt2jq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO: Implement\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpll70m2m7_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var max, min int\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    v = float64(max) / 255\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(max - min) / float64(max)\n    }\n    if max == min {\n        h = 0\n    } else {\n        switch max {\n        case r:\n            h = 60 * (float64(g - b) / float64(max - min))\n            if g < b {\n                h += 360\n            }\n        case g:\n            h = 60 * (float64(b - r) / float64(max - min)) + 120\n        case b:\n            h = 60 * (float64(r - g) / float64(max - min)) + 240\n        }\n    }\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpgk8tei31_test.go:65: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '0.000000, 0.000000, 1.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpgk8tei31_test.go:65: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '120.000000, 1.000000, 0.843137'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpgk8tei31_test.go:65: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '149.268293, 0.953488, 0.843137'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // Write your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpeyupcdyq_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    var min, max, delta float64\n\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"h: %f, s: %f, v: %f\", h, s, v)\n    }\n\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"h: %f, s: %f, v: %f\", h, s, v)\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpsi2alhlv_test.go:72: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got 'h: NaN, s: 0.000000, v: 255.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpsi2alhlv_test.go:72: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got 'h: 120.000000, s: 1.000000, v: 215.000000'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpsi2alhlv_test.go:72: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got 'h: 149.268293, s: 0.953488, v: 215.000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    var h, s, v float64\n    r = r / 255\n    g = g / 255\n    b = b / 255\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return []float64{h, s, v}\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123489,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphgmxt0n__test.go:14:13: undefined: max\n/tmp/tmphgmxt0n__test.go:15:13: undefined: min\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    // TODO - Add your code here\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123488,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmpihwnjqcb_test.go:29: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n    return nil\n}\n\nfunc TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510552,
      "stdout": "--- FAIL: TestRgb_To_Hsv (0.00s)\n    --- FAIL: TestRgb_To_Hsv/test_num__0 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(int=0) %!s(float64=0) %!s(float64=100)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__1 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=120) %!s(float64=100) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\n    --- FAIL: TestRgb_To_Hsv/test_num__2 (0.00s)\n        tmp08kle8d1_test.go:28: expected '[%!s(float64=149.26829268292684) %!s(float64=95.34883720930233) %!s(float64=84.31372549019608)]', got '%!s(<nil>)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
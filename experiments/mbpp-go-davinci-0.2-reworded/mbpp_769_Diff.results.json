{
  "name": "mbpp_769_Diff",
  "language": "go_test.go",
  "prompt": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "func TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz7df3ki2_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz7df3ki2_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz7df3ki2_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpy3b450cv_test.go:12:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // Create a map to store the value of the second list.\n    m := make(map[int]bool)\n    for _, v := range li2 {\n        m[v] = true\n    }\n    // Create a slice to store the result.\n    li := make([]int, 0)\n    for _, v := range li1 {\n        // If the value of the first list is not in the map,\n        // then append it to the result slice.\n        if _, ok := m[v]; !ok {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp7_st9ojn_test.go:42: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp7_st9ojn_test.go:42: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp7_st9ojn_test.go:42: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp43t62acw_test.go:12:13: undefined: In\n/tmp/tmp43t62acw_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li := []int{}\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3f6843dr_test.go:12:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8w333s8n_test.go:12:13: undefined: In\n/tmp/tmp8w333s8n_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpz70y1rsg_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp43t62acw_test.go:12:13: undefined: In\n/tmp/tmp43t62acw_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        if !In(v1, li2) {\n            li3 = append(li3, v1)\n        }\n    }\n    for _, v2 := range li2 {\n        if !In(v2, li1) {\n            li3 = append(li3, v2)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmputbgln2n_test.go:12:13: undefined: In\n/tmp/tmputbgln2n_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            res = append(res, v)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr11x7txe_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpguiwsq9p_test.go:12:13: undefined: In\n/tmp/tmpguiwsq9p_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                goto next\n            }\n        }\n        li3 = append(li3, v1)\n    next:\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            res = append(res, v1)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp6fza40ei_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp6fza40ei_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp6fza40ei_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var flag bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                flag = true\n                break\n            }\n        }\n        if !flag {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpl0l6vhrm_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpl0l6vhrm_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpl0l6vhrm_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_kv3azki_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v := range li1 {\n        if !InList(v, li2) {\n            res = append(res, v)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppyage61f_test.go:12:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpidw8jvge_test.go:12:13: undefined: In\n/tmp/tmpidw8jvge_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                res = append(res, v1)\n            }\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp02bd2j1i_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp02bd2j1i_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp02bd2j1i_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpguiwsq9p_test.go:12:13: undefined: In\n/tmp/tmpguiwsq9p_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        if !In(v1, li2) {\n            li = append(li, v1)\n        }\n    }\n    for _, v2 := range li2 {\n        if !In(v2, li1) {\n            li = append(li, v2)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvtgqfb1b_test.go:12:13: undefined: In\n/tmp/tmpvtgqfb1b_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpz70y1rsg_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // Create a map to store the values of li2\n    m := make(map[int]bool)\n    for _, v := range li2 {\n        m[v] = true\n    }\n\n    // Create a new list to store the difference\n    var diff []int\n\n    // Iterate over li1 and check if each value is in the map\n    for _, v := range li1 {\n        if _, ok := m[v]; !ok {\n            diff = append(diff, v)\n        }\n    }\n\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp98kcl3uo_test.go:44: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp98kcl3uo_test.go:44: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp98kcl3uo_test.go:44: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            res = append(res, v)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr11x7txe_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li := []int{}\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpj1mce32__test.go:12:13: undefined: In\n/tmp/tmpj1mce32__test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var ret []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            ret = append(ret, v1)\n        }\n    }\n    return ret\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpbeujrn0k_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpbeujrn0k_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpbeujrn0k_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !Contains(li1, i) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmm0tt_6f_test.go:12:13: undefined: Contains\n/tmp/tmpmm0tt_6f_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptae_0zla_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpwpawh3so_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptae_0zla_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgo3_tqlc_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpidw8jvge_test.go:12:13: undefined: In\n/tmp/tmpidw8jvge_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !InList(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmr9d5ct9_test.go:12:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpguiwsq9p_test.go:12:13: undefined: In\n/tmp/tmpguiwsq9p_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !InList(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmr9d5ct9_test.go:12:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_gvmg7l_test.go:12:13: undefined: In\n/tmp/tmp1_gvmg7l_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmppqld4t2g_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8gmhaa7_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_kv3azki_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // Create a map to store the values of li1\n    m := make(map[int]bool)\n    for _, v := range li1 {\n        m[v] = true\n    }\n\n    // Create a slice to store the result\n    var result []int\n    for _, v := range li2 {\n        if _, ok := m[v]; !ok {\n            result = append(result, v)\n        }\n    }\n\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp3a1ag1oa_test.go:42: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp3a1ag1oa_test.go:42: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=6) %!s(int=7)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp3a1ag1oa_test.go:42: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=6) %!s(int=7)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpczqmau06_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpczqmau06_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpczqmau06_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvdyamvrm_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                goto next\n            }\n        }\n        li3 = append(li3, v1)\n    next:\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp2zdjyzli_test.go:38: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // Create a map of the second list.\n    m := make(map[int]int)\n    for _, v := range li2 {\n        m[v] = 1\n    }\n\n    // Create a new list to store the difference.\n    li := make([]int, 0)\n\n    // Iterate through the first list and check if the value is in the map.\n    for _, v := range li1 {\n        if _, ok := m[v]; !ok {\n            li = append(li, v)\n        }\n    }\n\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpbq63by9j_test.go:44: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpbq63by9j_test.go:44: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpbq63by9j_test.go:44: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // Make a map of all the items in list 1.\n    m := make(map[int]bool)\n    for _, item := range li1 {\n        m[item] = true\n    }\n    // Make a second map of all the items in list 2 that aren't in the first map.\n    n := make(map[int]bool)\n    for _, item := range li2 {\n        if _, ok := m[item]; !ok {\n            n[item] = true\n        }\n    }\n    // Make a list of the items in the second map.\n    var diff []int\n    for k := range n {\n        diff = append(diff, k)\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp9ojv1ux2_test.go:45: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp9ojv1ux2_test.go:45: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=6) %!s(int=7)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp9ojv1ux2_test.go:45: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=6) %!s(int=7)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp43t62acw_test.go:12:13: undefined: In\n/tmp/tmp43t62acw_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4y2cby6t_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_kv3azki_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        if !In(v1, li2) {\n            li3 = append(li3, v1)\n        }\n    }\n    for _, v2 := range li2 {\n        if !In(v2, li1) {\n            li3 = append(li3, v2)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmputbgln2n_test.go:12:13: undefined: In\n/tmp/tmputbgln2n_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var exist bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                exist = true\n                break\n            }\n        }\n        if !exist {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123081,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp5uwmo9ch_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp5uwmo9ch_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp5uwmo9ch_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprfj19hmy_test.go:12:13: undefined: In\n/tmp/tmprfj19hmy_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123079,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpidw8jvge_test.go:12:13: undefined: In\n/tmp/tmpidw8jvge_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123080,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpgdeki_ey_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpqulnucyj_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpug1wx9ko_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510194,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpjt51yvow_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
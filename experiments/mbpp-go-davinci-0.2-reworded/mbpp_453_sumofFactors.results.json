{
  "name": "mbpp_453_sumofFactors",
  "language": "go_test.go",
  "prompt": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_453_sumofFactors.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmp56zsxs9b_test.go:34: expected '%!s(int=26)', got '%!s(int=20)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmp56zsxs9b_test.go:34: expected '%!s(int=48)', got '%!s(int=41)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmp56zsxs9b_test.go:34: expected '%!s(int=8)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmppz47lirp_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmp127uetbz_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmp127uetbz_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmp127uetbz_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmp4y95de9d_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            if i%2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "--- FAIL: TestSumoffactors (0.00s)\n    --- FAIL: TestSumoffactors/test_num__0 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=26)', got '%!s(int=38)'\n    --- FAIL: TestSumoffactors/test_num__1 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=48)', got '%!s(int=71)'\n    --- FAIL: TestSumoffactors/test_num__2 (0.00s)\n        tmpcwqljyz6_test.go:34: expected '%!s(int=8)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124262,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            if i % 2 == 0 {\n                sum += i\n            }\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n%i == 0 && i%2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sumofFactors_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of even factors of a number.\nfunc sumofFactors(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if n % i == 0 && i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSumoffactors(t *testing.T) {\n  candidate := sumofFactors\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(18), expected: 26 },\n     { actual: candidate(30), expected: 48 },\n     { actual: candidate(6), expected: 8 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509949,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_776_count_vowels",
  "language": "go_test.go",
  "prompt": "package count_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to count those characters which have vowels as their neighbors in the given string.\nfunc count_vowels(test_str string) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "func TestCount_Vowels(t *testing.T) {\n  candidate := count_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"bestinstareels\"), expected: 7 },\n     { actual: candidate(\"partofthejourneyistheend\"), expected: 12 },\n     { actual: candidate(\"amazonprime\"), expected: 5 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    count := 0\n    for i, _ := range test_str {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if i == len(test_str) - 1 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' ||",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if v == string(test_str[i+1]) {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if v == string(test_str[i-1]) {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if v == string(test_str[i-1]) || v == string(test_str[i+1]) {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len int = len(test_str)\n    for i := 0; i < str_len; i++ {\n        var char string = string(test_str[i])\n        if i == 0 {\n            if string_in_slice(char, vowels) {\n                if string_in_slice(string(test_str[i+1]), vowels) {\n                    count++\n                }\n            }\n        } else if i == str_len - 1 {\n            if string_in_slice(char, vowels) {\n                if string_in_slice(string(test_str[i-1]), vowels) {\n                    count++\n                }\n            }\n        } else {\n            if string_in_slice(char, vowels) {\n                if string_in_slice(string(test_str[i-1]), vowels) || string_in_slice(string(test_str[i+1]), vowels) {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i]) {\n            count++\n        } else if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i+1:i+2] == v {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v || test_str[i+1:i+2] == v {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len int = len(test_str)\n    for i := 0; i < str_len; i++ {\n        var ch string = string(test_str[i])\n        if i == 0 {\n            if string_in_slice(string(test_str[i+1]), vowels) {\n                count++\n            }\n        } else if i == str_len - 1 {\n            if string_in_slice(string(test_str[i-1]), vowels) {\n                count++\n            }\n        } else {\n            if string_in_slice(string(test_str[i-1]), vowels) || string_in_slice(string(test_str[i+1]), vowels) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n            if i == 0 {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            } else {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' ||\n                    test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        var char string = string(test_str[i])\n        if i == 0 {\n            if string(test_str[i+1]) == char {\n                count++\n            }\n            continue\n        }\n        if i == len(test_str) - 1 {\n            if string(test_str[i-1]) == char {\n                count++\n            }\n            continue\n        }\n        if string(test_str[i-1]) == char || string(test_str[i+1]) == char {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    var str_len = len(test_str)\n    for i := 0; i < str_len; i++ {\n        if i == 0 {\n            if vowels[string(test_str[i + 1])] {\n                count++\n            }\n        } else if i == str_len - 1 {\n            if vowels[string(test_str[i - 1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i - 1])] || vowels[string(test_str[i + 1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]int{\"a\":1, \"e\":1, \"i\":1, \"o\":1, \"u\":1}\n    for i := 0; i < len(test_str); i++ {\n        if _, ok := vowels[string(test_str[i])]; ok {\n            if i > 0 && i < len(test_str) - 1 {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            } else if i == 0 {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' || test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    var vowels = map[string]bool {\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i+1]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels map[string]bool = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if i == len(test_str) - 1 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') && (test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i + 1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i - 1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i + 1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i - 1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len int = len(test_str)\n    for i := 0; i < str_len; i++ {\n        var curr_char string = string(test_str[i])\n        if i == 0 {\n            if contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        } else if i == str_len-1 {\n            if contains(vowels, string(test_str[i-1])) {\n                count++\n            }\n        } else {\n            if contains(vowels, string(test_str[i-1])) || contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int = 0\n    var vowels = map[string]bool {\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i+1:i+2] == v {\n                    count++\n                    break\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v {\n                    count++\n                    break\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v || test_str[i+1:i+2] == v {\n                    count++\n                    break\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if contains(vowels, string(test_str[i-1])) {\n                count++\n            }\n        } else {\n            if contains(vowels, string(test_str[i-1])) || contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    var prev_char string = \"\"\n    var curr_char string = \"\"\n    var next_char string = \"\"\n    for i, char := range test_str {\n        curr_char = string(char)\n        if i > 0 {\n            prev_char = string(test_str[i-1])\n        }\n        if i < len(test_str) - 1 {\n            next_char = string(test_str[i+1])\n        }\n        if vowels[prev_char] || vowels[next_char] {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' || test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == '",
    "    var count int = 0\n    var vowels = map[rune]bool{'a': true, 'e': true, 'i': true, 'o': true, 'u': true}\n    for i, r := range test_str {\n        if i == 0 {\n            if vowels[rune(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[rune(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[rune(test_str[i-1])] || vowels[rune(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n            if i == 0 {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            } else {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' ||\n                    test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && string(test_str[i+1]) == v {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && string(test_str[i-1]) == v {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && (string(test_str[i+1]) == v || string(test_str[i-1]) == v) {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i+1]) || is_vowel(test_str[i-1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    var count int = 0\n    var vowels = map[string]bool {\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]int{\"a\":1, \"e\":1, \"i\":1, \"o\":1, \"u\":1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' ||",
    "    var count int = 0\n    var vowels_map map[string]bool = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels_map[string(test_str[i])] && vowels_map[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels_map[string(test_str[i])] && vowels_map[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels_map[string(test_str[i])] && vowels_map[string(test_str[i-1])] && vowels_map[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool {\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                    break\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if test_str[i-1] == v[0] || test_str[i] == v[0] {\n                    count++\n                    break\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i-1] == v[0] || test_str[i] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                    break\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' {\n                    count++\n                }\n                if test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i+1:i+2] == v {\n                    count++\n                    break\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v {\n                    count++\n                    break\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v || test_str[i+1:i+2] == v {\n                    count++\n                    break\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[rune]bool{'a': true, 'e': true, 'i': true, 'o': true, 'u': true}\n    for i, c := range test_str {\n        if i == 0 {\n            if vowels[c] && vowels[rune(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[c] && vowels[rune(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[c] && vowels[rune(test_str[i-1])] && vowels[rune(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i]) {\n            count++\n        } else if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if (i == 0 && is_vowel(test_str[i+1])) || (i == len(test_str)-1 && is_vowel(test_str[i-1])) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i]) && (is_vowel(test_str[i - 1]) || is_vowel(test_str[i + 1])) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    var prev_char string = \"\"\n    var curr_char string = \"\"\n    for _, char := range test_str {\n        curr_char = string(char)\n        if _, ok := vowels[curr_char]; ok {\n            if _, ok := vowels[prev_char]; ok {\n                count++\n            }\n        }\n        prev_char = curr_char\n    }\n    return count\n}\n",
    "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if string(test_str[i]) == \"a\" || string(test_str[i]) == \"e\" || string(test_str[i]) == \"i\" || string(test_str[i]) == \"o\" || string(test_str[i]) == \"u\" {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if string(test_str[i]) == \"a\" || string(test_str[i]) == \"e\" || string(test_str[i]) == \"i\" || string(test_str[i]) == \"o\" || string(test_str[i]) == \"u\" {\n                count++\n            }\n        } else {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && (string(test_str[i-1]) == \"a\" || string(test_str[i-1]) == \"e\" || string(test_str[i-1]) == \"i\" || string(test_str[i-1]) == \"o\" || string(test_str[i-1]) == \"u\") {\n                    count++\n                }\n                if string(test_str[i]) == v && (string(test_str[i+1]) == \"a\" || string(test_str[i+1]) == \"e\" || string(test_str[i+1]) == \"i\" || string(test_str[i+1]) == \"o\" || string(test_str[i+1]) == \"u\") {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[rune]bool{'a': true, 'e': true, 'i': true, 'o': true, 'u': true}\n    for i, c := range test_str {\n        if i > 0 && i < len(test_str) - 1 {\n            if vowels[c] && vowels[rune(test_str[i - 1])] && vowels[rune(test_str[i + 1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\":true, \"e\":true, \"i\":true, \"o\":true, \"u\":true}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && vowels[string(test_str[i])] {\n            count++\n        } else if i == len(test_str)-1 && vowels[string(test_str[i])] {\n            count++\n        } else if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' || test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] ==",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var test_str_runes = []rune(test_str)\n    var test_str_len = len(test_str_runes)\n\n    for i := 0; i < test_str_len; i++ {\n        var current_char = string(test_str_runes[i])\n        var next_char = \"\"\n        var prev_char = \"\"\n\n        if i < test_str_len - 1 {\n            next_char = string(test_str_runes[i + 1])\n        }\n\n        if i > 0 {\n            prev_char = string(test_str_runes[i - 1])\n        }\n\n        for _, v := range vowels {\n            if current_char == v {\n                continue\n            }\n\n            if next_char == v || prev_char == v {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[rune]bool{'a': true, 'e': true, 'i': true, 'o': true, 'u': true}\n    for i, c := range test_str {\n        if i > 0 && i < len(test_str) - 1 {\n            if vowels[c] && (vowels[rune(test_str[i-1])] || vowels[rune(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len int = len(test_str)\n    for i := 0; i < str_len; i++ {\n        if i == 0 {\n            if contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        } else if i == str_len - 1 {\n            if contains(vowels, string(test_str[i-1])) {\n                count++\n            }\n        } else {\n            if contains(vowels, string(test_str[i-1])) || contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if (i == 0 && is_vowel(test_str[i+1])) || (i == len(test_str)-1 && is_vowel(test_str[i-1])) {\n            count++\n        } else if is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        for _, v := range vowels {\n            if i == 0 && test_str[i] == v[0] {\n                count++\n            } else if i == len(test_str) - 1 && test_str[i] == v[0] {\n                count++\n            } else if test_str[i] == v[0] && (test_str[i-1] == v[0] || test_str[i+1] == v[0]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len = len(test_str)\n\n    for i := 0; i < str_len; i++ {\n        if i == 0 {\n            if string_in_array(test_str[i:i+1], vowels) && string_in_array(test_str[i+1:i+2], vowels) {\n                count++\n            }\n        } else if i == str_len - 1 {\n            if string_in_array(test_str[i:i+1], vowels) && string_in_array(test_str[i-1:i], vowels) {\n                count++\n            }\n        } else {\n            if string_in_array(test_str[i:i+1], vowels) && (string_in_array(test_str[i+1:i+2], vowels) || string_in_array(test_str[i-1:i], vowels)) {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if i == len(test_str) - 1 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n            count++\n        } else if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && vowels[string(test_str[i+1])] {\n            count++\n        } else if i == len(test_str) - 1 && vowels[string(test_str[i-1])] {\n            count++\n        } else if vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])] {\n            count++\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) || i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i+1]) && is_vowel(test_str[i-1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i + 1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i - 1]) {\n            count++\n        } else if is_vowel(test_str[i - 1]) && is_vowel(test_str[i + 1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n            if i == 0 {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            } else {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' || test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                count++\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i+1]) || is_vowel(test_str[i-1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i + 1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i - 1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && (vowels[string(test_str[i - 1])] || vowels[string(test_str[i + 1])]) {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if v == string(test_str[i+1]) {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if v == string(test_str[i-1]) {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if v == string(test_str[i-1]) || v == string(test_str[i+1]) {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]int{\"a\": 1, \"e\": 1, \"i\": 1, \"o\": 1, \"u\": 1}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && string(test_str[i+1]) == v {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && string(test_str[i-1]) == v {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if string(test_str[i]) == v && (string(test_str[i-1]) == v || string(test_str[i+1]) == v) {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        for _, v := range vowels {\n            if i == 0 && test_str[i] == v[0] {\n                count++\n            } else if i == len(test_str) - 1 && test_str[i] == v[0] {\n                count++\n            } else if test_str[i] == v[0] && (test_str[i - 1] == v[0] || test_str[i + 1] == v[0]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if contains(vowels, string(test_str[i-1])) {\n                count++\n            }\n        } else {\n            if contains(vowels, string(test_str[i-1])) || contains(vowels, string(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' ||",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' ||",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                    break\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if test_str[i] == v[0] || test_str[i-1] == v[0] {\n                    count++\n                    break\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i] == v[0] || test_str[i-1] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                    break\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    vowels := \"aeiou\"\n    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[test_str[i+1]] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[test_str[i-1]] {\n                count++\n            }\n        } else {\n            if vowels[test_str[i-1]] || vowels[test_str[i+1]] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str)-1 {\n            if vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i-1])] || vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' || test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] ==",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i+1]) || is_vowel(test_str[i-1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i+1]) || is_vowel(test_str[i-1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i != 0 && i != len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    var prev_char string\n    for _, char := range test_str {\n        if vowels[prev_char] && vowels[string(char)] {\n            count++\n        }\n        prev_char = string(char)\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels map[string]int = map[string]int{\n        \"a\": 1,\n        \"e\": 1,\n        \"i\": 1,\n        \"o\": 1,\n        \"u\": 1,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if string(test_str[i]) == \"a\" || string(test_str[i]) == \"e\" || string(test_str[i]) == \"i\" || string(test_str[i]) == \"o\" || string(test_str[i]) == \"u\" {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if string(test_str[i]) == \"a\" || string(test_str[i]) == \"e\" || string(test_str[i]) == \"i\" || string(test_str[i]) == \"o\" || string(test_str[i]) == \"u\" {\n                count++\n            }\n        } else {\n            if string(test_str[i]) == \"a\" || string(test_str[i]) == \"e\" || string(test_str[i]) == \"i\" || string(test_str[i]) == \"o\" || string(test_str[i]) == \"u\" {\n                if string(test_str[i-1]) == \"a\" || string(test_str[i-1]) == \"e\" || string(test_str[i-1]) == \"i\" || string(test_str[i-1]) == \"o\" || string(test_str[i-1]) == \"u\" {\n                    count++\n                }\n                if string(test_str[i+1]) == \"a\" || string(test_str[i+1]) == \"e\" || string(test_str[i+1]) == \"i\" || string(test_str[i+1]) == \"o\" || string(test_str[i+1]) == \"u\" {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, _ := range test_str {\n        if i == 0 {\n            if is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i+1]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' {\n                    count++\n                }\n                if test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if test_str[i+1:i+2] == v {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v {\n                    count++\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if test_str[i-1:i] == v || test_str[i+1:i+2] == v {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n    for i := 0; i < len(test_str); i++ {\n        if vowels[string(test_str[i])] {\n            if i > 0 && vowels[string(test_str[i-1])] {\n                count++\n            }\n            if i < len(test_str)-1 && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i+1]) || is_vowel(test_str[i-1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        for _, v := range vowels {\n            if i == 0 {\n                if test_str[i] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if test_str[i] == v[0] || test_str[i-1] == v[0] {\n                    count++\n                }\n            } else {\n                if test_str[i] == v[0] || test_str[i-1] == v[0] || test_str[i+1] == v[0] {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] {\n                count++\n            }\n        } else {\n            if vowels[string(test_str[i])] && vowels[string(test_str[i-1])] && vowels[string(test_str[i+1])] {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_",
    "    var count int = 0\n    var vowels = map[string]bool{\"a\": true, \"e\": true, \"i\": true, \"o\": true, \"u\": true}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n            }\n        } else {\n            if _, ok := vowels[string(test_str[i])]; ok {\n                if _, ok := vowels[string(test_str[i-1])]; ok {\n                    count++\n                }\n                if _, ok := vowels[string(test_str[i+1])]; ok {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' ||",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v {\n                    if string(test_str[i+1]) == v {\n                        count++\n                    }\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            for _, v := range vowels {\n                if string(test_str[i]) == v {\n                    if string(test_str[i-1]) == v {\n                        count++\n                    }\n                }\n            }\n        } else {\n            for _, v := range vowels {\n                if string(test_str[i]) == v {\n                    if string(test_str[i-1]) == v || string(test_str[i+1]) == v {\n                        count++\n                    }\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n            if i == 0 {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            } else if i == len(test_str) - 1 {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            } else {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' ||\n                    test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o'",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i]) {\n            count++\n        } else if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels = map[string]bool{\n        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"o\": true,\n        \"u\": true,\n    }\n\n    for i := 0; i < len(test_str); i++ {\n        var curr_char string = string(test_str[i])\n        var prev_char string = \"\"\n        var next_char string = \"\"\n\n        if i > 0 {\n            prev_char = string(test_str[i-1])\n        }\n\n        if i < len(test_str) - 1 {\n            next_char = string(test_str[i+1])\n        }\n\n        if vowels[curr_char] || vowels[prev_char] || vowels[next_char] {\n            count++\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    var str_len int = len(test_str)\n    for i := 0; i < str_len; i++ {\n        var char string = string(test_str[i])\n        if i == 0 {\n            if string_in_slice(char, vowels) && string_in_slice(string(test_str[i + 1]), vowels) {\n                count++\n            }\n        } else if i == str_len - 1 {\n            if string_in_slice(char, vowels) && string_in_slice(string(test_str[i - 1]), vowels) {\n                count++\n            }\n        } else {\n            if string_in_slice(char, vowels) && string_in_slice(string(test_str[i - 1]), vowels) && string_in_slice(string(test_str[i + 1]), vowels) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) && is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) && (is_vowel(test_str[i-1]) || is_vowel(test_str[i+1])) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var vowels string = \"aeiou\"\n    var prev_char rune = ' '\n    var curr_char rune = ' '\n    var next_char rune = ' '\n\n    for i, c := range test_str {\n        if i == 0 {\n            prev_char = ' '\n        } else {\n            prev_char = rune(test_str[i - 1])\n        }\n\n        curr_char = c\n        if i == len(test_str) - 1 {\n            next_char = ' '\n        } else {\n            next_char = rune(test_str[i + 1])\n        }\n\n        if strings.Contains(vowels, string(curr_char)) && (strings.Contains(vowels, string(prev_char)) || strings.Contains(vowels, string(next_char))) {\n            count++\n        }\n    }\n\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str) - 1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o'",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str) - 1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str) - 1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if is_vowel(test_str[i+1]) && is_vowel(test_str[i-1]) {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        } else if i == len(test_str) - 1 {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) {\n                count++\n            }\n        } else {\n            if is_vowel(test_str[i]) || is_vowel(test_str[i-1]) || is_vowel(test_str[i+1]) {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' ||",
    "    var count int\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_str[i+1] == 'u' {\n                    count++\n                }\n            }\n        } else if i == len(test_str)-1 {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n            }\n        } else {\n            if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n                if test_str[i-1] == 'a' || test_str[i-1] == 'e' || test_str[i-1] == 'i' || test_str[i-1] == 'o' || test_str[i-1] == 'u' {\n                    count++\n                }\n                if test_str[i+1] == 'a' || test_str[i+1] == 'e' || test_str[i+1] == 'i' || test_str[i+1] == 'o' || test_",
    "    count := 0\n    for i := 0; i < len(test_str); i++ {\n        if i == 0 && is_vowel(test_str[i+1]) {\n            count++\n        } else if i == len(test_str)-1 && is_vowel(test_str[i-1]) {\n            count++\n        } else if i > 0 && i < len(test_str)-1 && is_vowel(test_str[i-1]) && is_vowel(test_str[i+1]) {\n            count++\n        }\n    }\n    return count\n}\n"
  ]
}
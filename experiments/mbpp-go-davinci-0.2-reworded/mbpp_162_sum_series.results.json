{
  "name": "mbpp_162_sum_series",
  "language": "go_test.go",
  "prompt": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n + sum_series(n - 2)\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n + sum_series(n-2)\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__0 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestSum_Series/test_num__1 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=30)', got '%!s(int=10)'\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=25)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__0 (0.00s)\n        tmprobc5hbl_test.go:35: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestSum_Series/test_num__1 (0.00s)\n        tmprobc5hbl_test.go:35: expected '%!s(int=30)', got '%!s(int=10)'\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmprobc5hbl_test.go:35: expected '%!s(int=25)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmp3tsx62cq_test.go:35: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__0 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestSum_Series/test_num__1 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=30)', got '%!s(int=10)'\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=25)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; n - 2*i > 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__0 (0.00s)\n        tmpuc9fhksl_test.go:32: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestSum_Series/test_num__1 (0.00s)\n        tmpuc9fhksl_test.go:32: expected '%!s(int=30)', got '%!s(int=10)'\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpuc9fhksl_test.go:32: expected '%!s(int=25)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n + sum_series(n-2)\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n + sum_series(n-2)\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123990,
      "stdout": "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0200f0380 stack=[0xc0200f0000, 0xc0400f0000]\nfatal error: stack overflow\n\nruntime stack:\nruntime.throw(0x54622c, 0xe)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:1117 +0x72\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1069 +0x7ed\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:458 +0x8f\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.sum_series(0xfffffffffe000056, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:9 +0x69 fp=0xc0200f0390 sp=0xc0200f0388 pc=0x50a669\ncommand-line-arguments_test.sum_series(0xfffffffffe000058, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f03b0 sp=0xc0200f0390 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe00005a, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f03d0 sp=0xc0200f03b0 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe00005c, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f03f0 sp=0xc0200f03d0 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe00005e, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f0410 sp=0xc0200f03f0 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe000060, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f0430 sp=0xc0200f0410 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe000062, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f0450 sp=0xc0200f0430 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe000064, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f0470 sp=0xc0200f0450 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe000066, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f0490 sp=0xc0200f0470 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe000068, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f04b0 sp=0xc0200f0490 pc=0x50a648\ncommand-line-arguments_test.sum_series(0xfffffffffe00006a, 0x0)\n\t/tmp/tmpz9o8f7ms_test.go:13 +0x48 fp=0xc0200f04d0 sp=0xc0200f04b0 pc=0x50a648\ncommand-line",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - (2 * i)\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - (2 * i)\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; n - 2*i >= 0; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmpzlf0v2fj_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmptct_ov6d_test.go:32: expected '%!s(int=25)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510630,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n\nfunc TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123988,
      "stdout": "--- FAIL: TestSum_Series (0.00s)\n    --- FAIL: TestSum_Series/test_num__0 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestSum_Series/test_num__1 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=30)', got '%!s(int=10)'\n    --- FAIL: TestSum_Series/test_num__2 (0.00s)\n        tmp5kjzbste_test.go:32: expected '%!s(int=25)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_589_perfect_squares",
  "language": "go_test.go",
  "prompt": "package perfect_squares_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find perfect squares between two given numbers.\nfunc perfect_squares(a int, b int) []int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "reworded",
  "tests": "func TestPerfect_Squares(t *testing.T) {\n  candidate := perfect_squares\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1, 30), expected: []int{1, 4, 9, 16, 25} },\n     { actual: candidate(50, 100), expected: []int{64, 81, 100} },\n     { actual: candidate(100, 200), expected: []int{100, 121, 144, 169, 196} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j <= i / 2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, 1)\n        } else {\n            for j := 1; j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, 1)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        for j := 1; j <= i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var res []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            res = append(res, i)\n        }\n    }\n    return res\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            result = append(result, i * i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if i == j * j {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j < i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j*j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 2; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 || i == 4 || i == 9 || i == 16 || i == 25 || i == 36 || i == 49 || i == 64 || i == 81 || i == 100 {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            var j int\n            for j = 1; j * j <= i; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else if i == 4 {\n            squares = append(squares, i)\n        } else if i == 9 {\n            squares = append(squares, i)\n        } else if i == 16 {\n            squares = append(squares, i)\n        } else if i == 25 {\n            squares = append(squares, i)\n        } else if i == 36 {\n            squares = append(squares, i)\n        } else if i == 49 {\n            squares = append(squares, i)\n        } else if i == 64 {\n            squares = append(squares, i)\n        } else if i == 81 {\n            squares = append(squares, i)\n        } else if i == 100 {\n            squares = append(squares, i)\n        } else if i == 121 {\n            squares = append(squares, i)\n        } else if i == 144 {\n            squares = append(squares, i)\n        } else if i == 169 {\n            squares = append(squares, i)\n        } else if i == 196 {\n            squares = append(squares, i)\n        } else if i == 225 {\n            squares = append(squares, i)\n        } else if i == 256 {\n            squares = append(squares, i)\n        } else if i == 289 {\n            squares = append(squares, i)\n        } else if i == 324 {\n            squares = append(squares, i)\n        } else if i == 361 {\n            squares = append(squares, i)\n        } else if i == 400 {\n            squares = append(squares, i)\n        } else if i == 441 {\n            squares = append(squares, i)\n        } else if i == 484 {\n            squares = append(squares, i)\n        } else if i == 529 {\n            squares = append(squares, i)\n        } else if i == 576 {\n            squares = append(squares, i)\n        } else if i == 625 {\n           ",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            var square int\n            for j := 1; j <= i; j++ {\n                square += j\n                if square == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            var j int\n            for j = 1; j * j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            var j int\n            for j = 2; j < i; j++ {\n                if i == j * j {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var ps []int\n    for i := a; i <= b; i++ {\n        for j := 1; j <= i; j++ {\n            if j * j == i {\n                ps = append(ps, i)\n                break\n            }\n        }\n    }\n    return ps\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        if i == 4 {\n            result = append(result, i)\n            continue\n        }\n        if i == 9 {\n            result = append(result, i)\n            continue\n        }\n        if i == 16 {\n            result = append(result, i)\n            continue\n        }\n        if i == 25 {\n            result = append(result, i)\n            continue\n        }\n        if i == 36 {\n            result = append(result, i)\n            continue\n        }\n        if i == 49 {\n            result = append(result, i)\n            continue\n        }\n        if i == 64 {\n            result = append(result, i)\n            continue\n        }\n        if i == 81 {\n            result = append(result, i)\n            continue\n        }\n        if i == 100 {\n            result = append(result, i)\n            continue\n        }\n        if i == 121 {\n            result = append(result, i)\n            continue\n        }\n        if i == 144 {\n            result = append(result, i)\n            continue\n        }\n        if i == 169 {\n            result = append(result, i)\n            continue\n        }\n        if i == 196 {\n            result = append(result, i)\n            continue\n        }\n        if i == 225 {\n            result = append(result, i)\n            continue\n        }\n        if i == 256 {\n            result = append(result, i)\n            continue\n        }\n        if i == 289 {\n            result = append(result, i)\n            continue\n        }\n        if i == 324 {\n            result = append(result, i)\n            continue\n        }\n        if i == 361 {\n            result = append(result, i)\n            continue\n        }\n        if i == 400 {\n            result = append(result, i)\n            continue\n        }\n        if i == 441 {\n            result = append(result, i)\n            continue\n        }\n        if i == 484 {",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        var j int = 1\n        for j * j < i {\n            j++\n        }\n        if j * j == i {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if i == j * j {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var res []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            res = append(res, i)\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 0 || i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if j * j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if i == j*j {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            result = append(result, i * i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            var j int\n            for j = 1; j < i; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 2; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            result = append(result, i * i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            result = append(result, i * i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else if i == 4 {\n            squares = append(squares, i)\n        } else if i == 9 {\n            squares = append(squares, i)\n        } else if i == 16 {\n            squares = append(squares, i)\n        } else if i == 25 {\n            squares = append(squares, i)\n        } else if i == 36 {\n            squares = append(squares, i)\n        } else if i == 49 {\n            squares = append(squares, i)\n        } else if i == 64 {\n            squares = append(squares, i)\n        } else if i == 81 {\n            squares = append(squares, i)\n        } else if i == 100 {\n            squares = append(squares, i)\n        } else if i == 121 {\n            squares = append(squares, i)\n        } else if i == 144 {\n            squares = append(squares, i)\n        } else if i == 169 {\n            squares = append(squares, i)\n        } else if i == 196 {\n            squares = append(squares, i)\n        } else if i == 225 {\n            squares = append(squares, i)\n        } else if i == 256 {\n            squares = append(squares, i)\n        } else if i == 289 {\n            squares = append(squares, i)\n        } else if i == 324 {\n            squares = append(squares, i)\n        } else if i == 361 {\n            squares = append(squares, i)\n        } else if i == 400 {\n            squares = append(squares, i)\n        } else if i == 441 {\n            squares = append(squares, i)\n        } else if i == 484 {\n            squares = append(squares, i)\n        } else if i == 529 {\n            squares = append(squares, i)\n        } else if i == 576 {\n            squares = append(squares, i)\n        } else if i == 625 {\n           ",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        j := 1\n        for j * j <= i {\n            if j * j == i {\n                squares = append(squares, i)\n            }\n            j++\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i / 2; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 2; j < i; j++ {\n            if i == j * j {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            var j int = 1\n            for j * j < i {\n                j++\n            }\n            if j * j == i {\n                result = append(result, i)\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            squares = append(squares, i * i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j*j == i {\n                squares = append(squares, i)\n                break\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i / 2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i / 2; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        for j := 1; j <= i/2; j++ {\n            if j * j == i {\n                result = append(result, i)\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j*j == i {\n                    result = append(result, i)\n                    break\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    result = append(result, i)\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i / 2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, 1)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            squares = append(squares, i)\n        }\n    }\n    return squares\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 1; j <= i/2; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                    break\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, i)\n            continue\n        }\n        var flag bool = true\n        for j := 2; j < i; j++ {\n            if i % j == 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if is_perfect_square(i) {\n            result = append(result, i)\n        }\n    }\n    return result\n}\n",
    "    var squares []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            squares = append(squares, i)\n        } else {\n            for j := 2; j < i; j++ {\n                if j * j == i {\n                    squares = append(squares, i)\n                }\n            }\n        }\n    }\n    return squares\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i * i >= a && i * i <= b {\n            result = append(result, i * i)\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := a; i <= b; i++ {\n        if i == 1 {\n            result = append(result, 1)\n        } else {\n            for j := 2; j < i; j++ {\n                if i == j * j {\n                    result = append(result, i)\n                }\n            }\n        }\n    }\n    return result\n}\n"
  ]
}
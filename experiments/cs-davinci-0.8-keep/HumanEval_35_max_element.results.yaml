language: cs
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long res = long.MinValue;\n        foreach (long e in l)\n            if (e\
    \ > res)\n                res = e;\n        return res;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long m = long.MinValue;\n        foreach (long x in l) {\n            if (x\
    \ > m) {\n                m = x;\n            }\n        }\n        return m;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long r = l[0];\n        for (int i = 1; i < l.Count; i++) r = Math.Max(r,\
    \ l[i]);\n        return r;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long n in l) {\n            if\
    \ (n > max) max = n;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   if (l.Count == 0) return -99999999;\n        long maxElement = l[0];\n   \
    \     for (int i = 1; i < l.Count; i++) {\n            if (l[i] > maxElement)\
    \ maxElement = l[i];\n        }\n        return maxElement;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long m = long.MinValue;\n        foreach (long x in l)\n            if (x\
    \ > m)\n                m = x;\n        return m;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   // Insert your code here.\n        return 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3255e0551284198bcbb6fbd3542f03d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3255e0551284198bcbb6fbd3542f03d>:0 \n"
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   // START\n        return l.Max();\n        // END\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) max = l[i];\n        }\n        return max;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max_element = long.MinValue;\n        foreach (long i in l) {\n     \
    \       if (i > max_element) {\n                max_element = i;\n           \
    \ }\n        }\n        return max_element;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = Int64.MinValue;\n        foreach (long element in l) {\n      \
    \      if (element > max) {\n                max = element;\n            }\n \
    \       }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   return l.Max();\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239

name: HumanEval_60_sum_to_n
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n    //\
  \ >>> sum_to_n(30)\n    // 465\n    // >>> sum_to_n(100)\n    // 5050\n    // >>>\
  \ sum_to_n(5)\n    // 15\n    // >>> sum_to_n(10)\n    // 55\n    // >>> sum_to_n(1)\n\
  \    // 1\n    public static long SumToN(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumToN((1L))\
  \ == (1L));\n    Debug.Assert(SumToN((6L)) == (21L));\n    Debug.Assert(SumToN((11L))\
  \ == (66L));\n    Debug.Assert(SumToN((30L)) == (465L));\n    Debug.Assert(SumToN((100L))\
  \ == (5050L));\n    }\n\n}\n"
completions: ["        // This is the formula to sum the numbers\n        // from\
    \ 1 to n.\n        return n * (n + 1) / 2;", "        long sum = 0;\n        for\
    \ (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        return\
    \ sum;", "        // YOUR CODE HERE\n        return (n * (n + 1)) / 2;", '        return
    (n * (n + 1)) / 2;', "        // YOUR CODE HERE\n        return n * (n + 1) /\
    \ 2;", '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;", '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;', "        long result = 0;\n        // start at one, continue\
    \ adding all the numbers until you reach n, and then return\n        for (long\
    \ i = 1; i <= n; i++) {\n            result += i;\n        }\n        return result;",
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', "        long result = 0;\n        for (long i = 1; i <=\
    \ n; i++) {\n            result += i;\n        }\n        return result;", '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', "        // return the\
    \ sum of numbers from 1 to n\n        // implement this by yourself\n        long\
    \ sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n \
    \       }\n        return sum;", '        return n * (n + 1) / 2;', '        return
    n * (n + 1) / 2;']
stop_tokens:
- "\n    }\n"

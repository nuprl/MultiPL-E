name: HumanEval_150_x_or_y
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // A simple program which should return the value of x if n is\
  \ \n    // a prime number and should return the value of y otherwise.\n    // Examples:\n\
  \    // for x_or_y(7, 34, 12) == 34\n    // for x_or_y(15, 8, 5) == 5\n    public\
  \ static long XOrY(long n, long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(XOrY((7L),\
  \ (34L), (12L)) == (34L));\n    Debug.Assert(XOrY((15L), (8L), (5L)) == (5L));\n\
  \    Debug.Assert(XOrY((3L), (33L), (5212L)) == (33L));\n    Debug.Assert(XOrY((1259L),\
  \ (3L), (52L)) == (3L));\n    Debug.Assert(XOrY((7919L), (-1L), (12L)) == (-1L));\n\
  \    Debug.Assert(XOrY((3609L), (1245L), (583L)) == (583L));\n    Debug.Assert(XOrY((91L),\
  \ (56L), (129L)) == (129L));\n    Debug.Assert(XOrY((6L), (34L), (1234L)) == (1234L));\n\
  \    Debug.Assert(XOrY((1L), (2L), (0L)) == (0L));\n    Debug.Assert(XOrY((2L),\
  \ (2L), (0L)) == (2L));\n    }\n\n}\n"
completions: ["        if (IsPrime(n)) {\n            return x;\n        } else {\n\
    \            return y;\n        }", "        // enter your code below\n      \
    \  return ((n % 2) == 0) ? y : x;", "        if (IsPrime(n))\n            return\
    \ x;\n        else\n            return y;", "        if (n % 2 == 0) {\n     \
    \       return y;\n        } else {\n            return x;\n        }", "    \
    \    if (Prime(n))\n            return x;\n        else\n            return y;",
  "        if (IsPrime(n))\n            return x;\n        else\n            return\
    \ y;", "        if (n == 1) {\n            return y;\n        }\n        for (long\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                return\
    \ y;\n            }\n        }\n        return x;", "        if (isPrime(n)) {\n\
    \            return x;\n        } else {\n            return y;\n        }", " \
    \       // TODO: Implementation\n        throw new NotImplementedException();",
  "        if (IsPrime(n)) {\n            return x;\n        } else {\n          \
    \  return y;\n        }", "        if (isPrime(n)) {\n            return x;\n\
    \        } else {\n            return y;\n        }", "        if (IsPrime(n))\
    \ {\n            return x;\n        } else {\n            return y;\n        }",
  "        // Insert your code here\n        if (IsPrime(n))\n            return x;\n\
    \        else\n            return y;", "        if (IsPrime(n)) {\n          \
    \  return x;\n        } else {\n            return y;\n        }", "        if\
    \ (IsPrime(n))\n            return x;\n        else\n            return y;", '        return
    n % 2 == 0 ? y : x;', '        return Factor(n) ? x : y;', "        bool isPrime\
    \ = IsPrime(n);\n        if (isPrime)\n            return x;\n        else\n \
    \           return y;", "        if (IsPrime(n))\n            return x;\n    \
    \    else\n            return y;", "        if (IsPrime(n)) {\n            return\
    \ x;\n        } else {\n            return y;\n        }"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_12_longest
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        // TODO: Implement\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c7486d9a5e444f080d5f12ed72cf72e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c7486d9a5e444f080d5f12ed72cf72e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string max = \"\";\n \
    \       foreach (string s in strings) {\n            if (s.Length > max.Length)\
    \ {\n                max = s;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <8670a61813ae493895601ac45410c311>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8670a61813ae493895601ac45410c311>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length)\n                longest = strings[i];\n        }\n      \
    \  return longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <07d97f08ad824f32893c92ea9fc72f0f>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <07d97f08ad824f32893c92ea9fc72f0f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        // Implement the method\n\
    \        int max = 0;\n        string str = \"\";\n        foreach (string s in\
    \ strings) {\n            if (s.Length > max) {\n                max = s.Length;\n\
    \                str = s;\n            }\n        }\n        return str;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <a4b1b325fc834063b35ae11d4f710d19>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a4b1b325fc834063b35ae11d4f710d19>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n\n        var rv = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > rv.Length) {\n                rv = strings[i];\n            }\n        }\n\
    \        return rv;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <84f0a2a8b2274f1ab18b0bad6293cb76>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <84f0a2a8b2274f1ab18b0bad6293cb76>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <ffb7681965f3474ab0e827d53b6f01a2>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ffb7681965f3474ab0e827d53b6f01a2>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        return \"\"\
    ;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2d3ab8def340d29d0ee0f1c9e27745>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2d3ab8def340d29d0ee0f1c9e27745>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string max_string = strings[0];\n\
    \        int max_length = max_string.Length;\n        for (int i = 1; i < strings.Count;\
    \ i++) {\n            if (strings[i].Length > max_length) {\n                max_string\
    \ = strings[i];\n                max_length = max_string.Length;\n           \
    \ }\n        }\n        return max_string;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <90cc83c989c341ec817b1b617d6f8220>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <90cc83c989c341ec817b1b617d6f8220>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings) {\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        }\n        return longest;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <14a19eabd0434fd5bcf4be9f673b05d5>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14a19eabd0434fd5bcf4be9f673b05d5>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count()\
    \ == 0) {\n            return null;\n        }\n        string ret = \"\";\n \
    \       foreach (string s in strings) {\n            if (s.Length > ret.Length)\
    \ {\n                ret = s;\n            }\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <80160dfc59754d38bdd548cb79e77afa>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <80160dfc59754d38bdd548cb79e77afa>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n\n        int maxLength = -1;\n\
    \        string maxString = null;\n        foreach (string currentString in strings)\
    \ {\n            if (currentString.Length > maxLength) {\n                maxLength\
    \ = currentString.Length;\n                maxString = currentString;\n      \
    \      }\n        }\n        return maxString;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <4b1aa87bd8ff4c0fb320772c6124259c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4b1aa87bd8ff4c0fb320772c6124259c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        string maxString\
    \ = \"\";\n        int maxStringLen = 0;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxStringLen) {\n                maxString = s;\n\
    \                maxStringLen = s.Length;\n            }\n        }\n        return\
    \ maxString;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d864d85ce6e444a3b5702749ae9cd2e0>:0 \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        int maxLen\
    \ = 0;\n        string longest = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLen) {\n                maxLen = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <bcb982d36abd408382573ec906c54adc>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bcb982d36abd408382573ec906c54adc>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        int longest = strings[0].Length;\n\
    \        int longestString = 0;\n        for (int i = 1; i < strings.Count; i++)\
    \ {\n            if (strings[i].Length > longest) {\n                longest =\
    \ strings[i].Length;\n                longestString = i;\n            }\n    \
    \    }\n        return strings[longestString];\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <94828d4dcc294595a9d93069e2987ebe>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <94828d4dcc294595a9d93069e2987ebe>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int maxLength = 0;\n \
    \       string maxString = \"\";\n        foreach (string s in strings) {\n  \
    \          if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                maxString = s;\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <a9887afb12974516b7dcd92b0692524b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a9887afb12974516b7dcd92b0692524b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        // Fill in\
    \ this function.\n        if (strings.Count == 0) {\n            return \"\";\n\
    \        }\n        else {\n            var maxLength = strings.Max(x => x.Length);\n\
    \            return strings.Find(x => x.Length == maxLength);\n        }\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8da0be0c484bd8891886e0e0d0e467>:0 \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        string longest\
    \ = \"\";\n        foreach (string s in strings) {\n            if (s.Length >\
    \ longest.Length) {\n                longest = s;\n            }\n        }\n\
    \        return longest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Longest((new List<string>())).Equals(null));\n    Debug.Assert(Longest((new\
    \ List<string>(new string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"\
    x\")));\n    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\"\
    , (string)\"yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"\
    abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcdc99672ca54ff99647a960b357f49d>:0 \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int max_length = 0;\n\
    \        string longest = null;\n        foreach (string s in strings) {\n   \
    \         if (s.Length > max_length) {\n                max_length = s.Length;\n\
    \                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <5e4baa64134c429bae9bf12cf83b5d43>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5e4baa64134c429bae9bf12cf83b5d43>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        // *** INSERT\
    \ CODE HERE ***\n        return strings.OrderByDescending(x => x.Length).FirstOrDefault();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <cb5ebc796352482394283b4356149f52>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cb5ebc796352482394283b4356149f52>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824387
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ None in case the input list is empty.\n    // >>> longest([])\n    // >>> longest(['a',\
    \ 'b', 'c'])\n    // 'a'\n    // >>> longest(['a', 'bb', 'ccc'])\n    // 'ccc'\n\
    \    public static string Longest(List<string> strings) {\n        return strings.Aggregate((x,\
    \ y) => x.Length > y.Length ? x : y);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <5934f2f4fefc49d6821643fe114f1fd4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <5934f2f4fefc49d6821643fe114f1fd4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.InvalidOperationException: Sequence contains no elements\n\
    \  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.Longest (System.Collections.Generic.List`1[T] strings) [0x00001]\
    \ in <5934f2f4fefc49d6821643fe114f1fd4>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00006] in <5934f2f4fefc49d6821643fe114f1fd4>:0 \n"
  stdout: ''
  timestamp: 1659824387

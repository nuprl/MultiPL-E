name: HumanEval_70_strange_sort_list
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given list of integers, return list in strange order.\n    //\
  \ Strange sorting, is when you start with the minimum value,\n    // then maximum\
  \ of the remaining integers, then minimum and so on.\n    // Examples:\n    // strange_sort_list([1,\
  \ 2, 3, 4]) == [1, 4, 2, 3]\n    // strange_sort_list([5, 5, 5, 5]) == [5, 5, 5,\
  \ 5]\n    // strange_sort_list([]) == []\n    public static List<long> StrangeSortList(List<long>\
  \ lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(StrangeSortList((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)4L, (long)2L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new\
  \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals((new\
  \ List<long>(new long[]{(long)5L, (long)9L, (long)6L, (long)8L, (long)7L}))));\n\
  \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L,\
  \ (long)2L, (long)4L, (long)3L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
  \ long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)1L}))).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)9L, (long)5L, (long)8L, (long)6L, (long)7L}))));\n\
  \    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)5L, (long)5L,\
  \ (long)5L, (long)5L}))).Equals((new List<long>(new long[]{(long)5L, (long)5L, (long)5L,\
  \ (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>())).Equals((new\
  \ List<long>())));\n    Debug.Assert(StrangeSortList((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L}))).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)8L, (long)2L, (long)7L, (long)3L, (long)6L,\
  \ (long)4L, (long)5L}))));\n    Debug.Assert(StrangeSortList((new List<long>(new\
  \ long[]{(long)0L, (long)2L, (long)2L, (long)2L, (long)5L, (long)5L, (long)-5L,\
  \ (long)-5L}))).Equals((new List<long>(new long[]{(long)-5L, (long)5L, (long)-5L,\
  \ (long)5L, (long)0L, (long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(StrangeSortList((new\
  \ List<long>(new long[]{(long)111111L}))).Equals((new List<long>(new long[]{(long)111111L}))));\n\
  \    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

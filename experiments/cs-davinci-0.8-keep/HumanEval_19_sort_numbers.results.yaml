language: cs
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        char[]
    result = new char[numbers.Length];\n        int[] nums = new int[10];\n        int
    cur = 0;\n        for (int i = 0; i < numbers.Length; i++) {\n            if (numbers[i]
    == ' ') {\n                nums[cur]++;\n                cur = 0;\n            }
    else {\n                cur *= 10;\n                cur += numbers[i] - '0';\n
    \           }\n        }\n        nums[cur]++;\n        int pos = 0;\n        for
    (int i = 0; i < 10; i++) {\n            for (int j = 0; j < nums[i]; j++) {\n
    \               result[pos++] = (char)('0' + i);\n                result[pos++]
    = ' ';\n            }\n        }\n        result[pos-1] = '\\0';\n        return
    new string(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.SortNumbers (System.String numbers) [0x00087]
    in <770b5347343e49f3bb8ee7c649542238>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <770b5347343e49f3bb8ee7c649542238>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.SortNumbers (System.String numbers) [0x00087] in <770b5347343e49f3bb8ee7c649542238>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <770b5347343e49f3bb8ee7c649542238>:0
    \n"
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ec13fa4b14f45418a0317ca636c8f00>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ec13fa4b14f45418a0317ca636c8f00>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        var
    nums = numbers.Split().Select(NumberFromString).ToList();\n        nums.Sort();\n
    \       return string.Join(\" \", nums.Select(NumberToString));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo9jefb_a.cs(15,43): error CS0103: The name ''NumberFromString'' does not
    exist in the current context

    /tmp/tmpo9jefb_a.cs(17,45): error CS0103: The name ''NumberToString'' does not
    exist in the current context

    '
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        var
    nums = numbers.Split(' ');\n        Array.Sort(nums);\n        return string.Join(\"
    \", nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae3f16e4288e467abaceae525fd0d972>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae3f16e4288e467abaceae525fd0d972>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        //
    write code here\n        var sorted = numbers.Split(' ').OrderBy(word => int.Parse(word));\n
    \       return string.Join(\" \", sorted);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String word) [0x00000] in <b9c272852f54460aa13e7aa0c2f31928>:0
    \n  at System.Linq.EnumerableSorter`2[TElement,TKey].ComputeKeys (TElement[] elements,
    System.Int32 count) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.EnumerableSorter`1[TElement].ComputeMap
    (TElement[] elements, System.Int32 count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.EnumerableSorter`1[TElement].Sort (TElement[] elements, System.Int32
    count) [0x00000] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.OrderedEnumerable`1[TElement].SortedMap
    (System.Linq.Buffer`1[TElement] buffer) [0x00006] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext
    () [0x0003d] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.String.Join
    (System.String separator, System.Collections.Generic.IEnumerable`1[T] values)
    [0x00015] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers (System.String
    numbers) [0x0002f] in <b9c272852f54460aa13e7aa0c2f31928>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <b9c272852f54460aa13e7aa0c2f31928>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] valu"
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        var
    words = numbers.Split(' ');\n        var numbersAsInts = words.Select(x => x.ToIntFromWord());\n
    \       Array.Sort(numbersAsInts);\n        var sortedStrings = numbersAsInts.Select(x
    => x.ToWord());\n        return String.Join(\" \", sortedStrings);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiq_rnhco.cs(16,49): error CS1061: ''string'' does not contain a definition
    for ''ToIntFromWord'' and no accessible extension method ''ToIntFromWord'' accepting
    a first argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        //
    turn the string into an array of words\n        string[] input = numbers.Split();\n
    \       int[] output = new int[input.Length];\n        // look up each word in
    a dictionary and add it to the output array\n        for (int i = 0; i < input.Length;
    i++) {\n            output[i] = MainClass.Lookup[input[i]];\n        }\n        //
    sort the array\n        Array.Sort(output);\n        // convert the array back
    to a string\n        StringBuilder builder = new StringBuilder();\n        for
    (int i = 0; i < output.Length; i++) {\n            builder.Append(MainClass.Dictionary[output[i]]);\n
    \           if (i < output.Length - 1) {\n                builder.Append(\" \");\n
    \           }\n        }\n        return builder.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9s64c_ej.cs(20,25): error CS0103: The name ''MainClass'' does not exist
    in the current context

    /tmp/tmp9s64c_ej.cs(27,28): error CS0103: The name ''MainClass'' does not exist
    in the current context

    '
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        Dictionary<string,
    int> numDict = new Dictionary<string, int>();\n        numDict.Add(\"zero\", 0);\n
    \       numDict.Add(\"one\", 1);\n        numDict.Add(\"two\", 2);\n        numDict.Add(\"three\",
    3);\n        numDict.Add(\"four\", 4);\n        numDict.Add(\"five\", 5);\n        numDict.Add(\"six\",
    6);\n        numDict.Add(\"seven\", 7);\n        numDict.Add(\"eight\", 8);\n
    \       numDict.Add(\"nine\", 9);\n        string[] numWords = numbers.Split('
    ');\n        string output = \"\";\n        List<int> nums = new List<int>();\n
    \       foreach (string word in numWords) {\n            nums.Add(numDict[word]);\n
    \       }\n        nums.Sort();\n        foreach (int num in nums) {\n            output
    += numDict.FirstOrDefault(x => x.Value == num).Key + \" \";\n        }\n        return
    output.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000b1] in <612290db1abb40ac938f81471f12f88d>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <612290db1abb40ac938f81471f12f88d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers
    (System.String numbers) [0x000b1] in <612290db1abb40ac938f81471f12f88d>:0 \n  at
    Problem.Main (System.String[] args) [0x00001] in <612290db1abb40ac938f81471f12f88d>:0
    \n"
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        //
    ToDo: write code for Part 1 here\n        return \"\";\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a85deeee5e247b2ad8ea291b304c954>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a85deeee5e247b2ad8ea291b304c954>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        string[]
    strings = numbers.Split(' ');\n        int[] digits = new int[strings.Length];\n
    \       for (int i = 0; i < strings.Length; i++) {\n            switch (strings[i])
    {\n                case \"zero\":\n                    digits[i] = 0;\n                    break;\n
    \               case \"one\":\n                    digits[i] = 1;\n                    break;\n
    \               case \"two\":\n                    digits[i] = 2;\n                    break;\n
    \               case \"three\":\n                    digits[i] = 3;\n                    break;\n
    \               case \"four\":\n                    digits[i] = 4;\n                    break;\n
    \               case \"five\":\n                    digits[i] = 5;\n                    break;\n
    \               case \"six\":\n                    digits[i] = 6;\n                    break;\n
    \               case \"seven\":\n                    digits[i] = 7;\n                    break;\n
    \               case \"eight\":\n                    digits[i] = 8;\n                    break;\n
    \               case \"nine\":\n                    digits[i] = 9;\n                    break;\n
    \           }\n        }\n        Array.Sort(digits);\n        string result =
    \"\";\n        for (int i = 0; i < digits.Length; i++) {\n            switch (digits[i])
    {\n                case 0:\n                    result += \"zero \";\n                    break;\n
    \               case 1:\n                    result += \"one \";\n                    break;\n
    \               case 2:\n                    result += \"two \";\n                    break;\n
    \               case 3:\n                    result += \"three \";\n                    break;\n
    \               case 4:\n                    result += \"four \";\n                    break;\n
    \               case 5:\n                    result += \"five \";\n                    break;\n
    \               case 6:\n                    result += \"six \";\n                    break;\n
    \               case 7:\n                    result += \"seven \";\n                    break;\n
    \               case 8:\n                    result += \"eight \";\n                    break;\n
    \               case 9:\n                    result += \"nine \";\n                    break;\n
    \           }\n        }\n        return result.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <905d527e51fe43c3976c223b993e412f>:0
    \n"
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        string[]
    nums = numbers.Split(' ');\n        List<int> num = new List<int>();\n        foreach
    (string s in nums) {\n            num.Add(Convert(s));\n        }\n        num.Sort();\n
    \       nums = num.Select(x => Convert(x)).ToArray();\n        return string.Join(\"
    \", nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdiamgq8j.cs(18,21): error CS1955: Non-invocable member ''Convert'' cannot
    be used like a method.

    /tmp/tmpdiamgq8j.cs(21,32): error CS1955: Non-invocable member ''Convert'' cannot
    be used like a method.

    '
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        return
    string.Join(\" \", Enumerable.Range(0, 10).Select(i =>\n            string.Join(\"
    \", Regex.Matches(numbers, \"\\\\b\" + i + \"\\\\b\").Cast<Match>().Select(m =>
    m.Value))\n        ).Where(s => s != \"\"));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp_bhks3l.cs(16,30): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmpp_bhks3l.cs(16,77): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        var
    n = numbers.Split(' ');\n        Array.Sort(n);\n        return string.Join(\"
    \", n);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2c7eb33c9af54e649849809811a55201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2c7eb33c9af54e649849809811a55201>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        return
    numbers;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82b94ec019274e7db8ec214806b9eefb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82b94ec019274e7db8ec214806b9eefb>:0
    \n"
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        var
    input = numbers.Split(' ');\n        var nums = input.Select(s => NumeralToInt(s)).ToArray();\n
    \       Array.Sort(nums);\n        return string.Join(\" \", nums.Select(i =>
    IntToNumeral(i)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkxzzki_e.cs(16,38): error CS0103: The name ''NumeralToInt'' does not exist
    in the current context

    /tmp/tmpkxzzki_e.cs(18,50): error CS0103: The name ''IntToNumeral'' does not exist
    in the current context

    '
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        string[]
    nums = numbers.Split(' ');\n        string[] numList = new string[] { \"zero\",
    \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",
    \"nine\" };\n        string[] sorted = new string[nums.Length];\n        int index
    = 0;\n        foreach (string word in nums) {\n            foreach (string num
    in numList) {\n                if (word == num) {\n                    sorted[index]
    = num;\n                    index++;\n                }\n            }\n        }\n
    \       string result = \"\";\n        foreach (string word in sorted) {\n            result
    += word + \" \";\n        }\n        return result.Trim();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdb7a27efe854ed18e2b6c0d667b8d63>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdb7a27efe854ed18e2b6c0d667b8d63>:0
    \n"
  stdout: ''
  timestamp: 1659823843
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        //
    SortedDictionary uses an internal balanced tree to maintain sorted order\n        var
    dict = new SortedDictionary<int, int>();\n        // O(n)\n        foreach (var
    numeral in numbers.Split(' ')) {\n            var number = ConvertNumeralToNumber(numeral);\n
    \           if (dict.ContainsKey(number)) {\n                dict[number]++;\n
    \           } else {\n                dict[number] = 1;\n            }\n        }\n
    \       // O(n log n)\n        var sb = new StringBuilder();\n        foreach
    (var entry in dict) {\n            var number = entry.Key;\n            var numeral
    = ConvertNumberToNumeral(number);\n            for (int i = 0; i < entry.Value;
    i++) {\n                sb.Append(numeral);\n                sb.Append(' ');\n
    \           }\n        }\n        // O(n)\n        sb.Length--;\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdknohab1.cs(19,26): error CS0103: The name ''ConvertNumeralToNumber''
    does not exist in the current context

    /tmp/tmpdknohab1.cs(30,27): error CS0103: The name ''ConvertNumberToNumeral''
    does not exist in the current context

    '
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        //
    Your code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e66fbf4f6cc45b78c750598e85a3af7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e66fbf4f6cc45b78c750598e85a3af7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        List<int>
    list = new List<int>();\n        foreach (string str in numbers.Split()) {\n            switch
    (str) {\n                case \"zero\": list.Add(0); break;\n                case
    \"one\": list.Add(1); break;\n                case \"two\": list.Add(2); break;\n
    \               case \"three\": list.Add(3); break;\n                case \"four\":
    list.Add(4); break;\n                case \"five\": list.Add(5); break;\n                case
    \"six\": list.Add(6); break;\n                case \"seven\": list.Add(7); break;\n
    \               case \"eight\": list.Add(8); break;\n                case \"nine\":
    list.Add(9); break;\n            }\n        }\n        list.Sort();\n        string
    res = \"\";\n        foreach (int num in list) {\n            switch (num) {\n
    \               case 0: res += \"zero \"; break;\n                case 1: res
    += \"one \"; break;\n                case 2: res += \"two \"; break;\n                case
    3: res += \"three \"; break;\n                case 4: res += \"four \"; break;\n
    \               case 5: res += \"five \"; break;\n                case 6: res
    += \"six \"; break;\n                case 7: res += \"seven \"; break;\n                case
    8: res += \"eight \"; break;\n                case 9: res += \"nine \"; break;\n
    \           }\n        }\n        return res.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n
    \   Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three
    five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five
    zero four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n
    \   Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"zero
    one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823843
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input is a space-delimited string of numberals from 'zero' to
    'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',
    'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted
    from smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one
    three five'\n    public static string SortNumbers(string numbers) {\n        string[]
    vals = numbers.Split(' ');\n        int[] nums = new int[vals.Length];\n        for
    (int i = 0; i < vals.Length; i++) {\n            switch (vals[i]) {\n                case
    \"zero\":\n                    nums[i] = 0;\n                    break;\n                case
    \"one\":\n                    nums[i] = 1;\n                    break;\n                case
    \"two\":\n                    nums[i] = 2;\n                    break;\n                case
    \"three\":\n                    nums[i] = 3;\n                    break;\n                case
    \"four\":\n                    nums[i] = 4;\n                    break;\n                case
    \"five\":\n                    nums[i] = 5;\n                    break;\n                case
    \"six\":\n                    nums[i] = 6;\n                    break;\n                case
    \"seven\":\n                    nums[i] = 7;\n                    break;\n                case
    \"eight\":\n                    nums[i] = 8;\n                    break;\n                case
    \"nine\":\n                    nums[i] = 9;\n                    break;\n            }\n
    \       }\n        Array.Sort(nums);\n        string res = \"\";\n        for
    (int i = 0; i < nums.Length; i++) {\n            switch (nums[i]) {\n                case
    0:\n                    res += \"zero \";\n                    break;\n                case
    1:\n                    res += \"one \";\n                    break;\n                case
    2:\n                    res += \"two \";\n                    break;\n                case
    3:\n                    res += \"three \";\n                    break;\n                case
    4:\n                    res += \"four \";\n                    break;\n                case
    5:\n                    res += \"five \";\n                    break;\n                case
    6:\n                    res += \"six \";\n                    break;\n                case
    7:\n                    res += \"seven \";\n                    break;\n                case
    8:\n                    res += \"eight \";\n                    break;\n                case
    9:\n                    res += \"nine \";\n                    break;\n            }\n
    \       }\n        return res.Trim();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n
    \   Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\")));\n
    \   Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"zero
    four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five four
    three two one zero\")).Equals((\"zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b3e9cec5a3348ee94c9d5eeb5f4a3b1>:0
    \n"
  stdout: ''
  timestamp: 1659823843

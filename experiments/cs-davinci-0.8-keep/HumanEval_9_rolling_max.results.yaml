language: cs
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        List<long> result = new List<long>();\n
    \       long current_max = numbers[0];\n        result.Add(current_max);\n        for
    (int index = 1; index < numbers.Count; index++) {\n            if (numbers[index]
    > current_max) {\n                current_max = numbers[index];\n            }\n
    \           result.Add(current_max);\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <89a35406d3b6478bb277f26ef586d295>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89a35406d3b6478bb277f26ef586d295>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <89a35406d3b6478bb277f26ef586d295>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89a35406d3b6478bb277f26ef586d295>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var maxs = new List<long>();\n        maxs.Add(numbers[0]);\n
    \       for (int i = 1; i < numbers.Count; i++) {\n            maxs.Add(Math.Max(maxs[i
    - 1], numbers[i]));\n        }\n        return maxs;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,
    (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L,
    (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L,
    (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <ce11c446854a408584633d1c593c0193>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ce11c446854a408584633d1c593c0193>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <ce11c446854a408584633d1c593c0193>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ce11c446854a408584633d1c593c0193>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        // [2, 3, 2, 3, 4, 2]\n        var maxes
    = new List<long> { numbers[0] };\n        // [2, 3, 3, 3, 4, 4]\n        for (int
    i = 1; i < numbers.Count; i++) {\n            maxes.Add(Math.Max(maxes[i - 1],
    numbers[i]));\n        }\n        return maxes;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,
    (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L,
    (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L,
    (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00006] in <3aacf6966df946afbc45f6bacdfb84dd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <3aacf6966df946afbc45f6bacdfb84dd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00006] in <3aacf6966df946afbc45f6bacdfb84dd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <3aacf6966df946afbc45f6bacdfb84dd>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var rolling = new List<long>();\n        var
    max = numbers[0];\n        for (int i = 0; i < numbers.Count; i++) {\n            if
    (numbers[i] > max) {\n                max = numbers[i];\n            }\n            rolling.Add(max);\n
    \       }\n        return rolling;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <5506d879e3c346b897bd8e4a5c4e8654>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <5506d879e3c346b897bd8e4a5c4e8654>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <5506d879e3c346b897bd8e4a5c4e8654>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <5506d879e3c346b897bd8e4a5c4e8654>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var res = new List<long>();\n        long
    current_max = long.MinValue;\n        foreach (var item in numbers) {\n            current_max
    = Math.Max(current_max, item);\n            res.Add(current_max);\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7ed292d688f4dd1bb2b03076db289bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7ed292d688f4dd1bb2b03076db289bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var result = new List<long>();\n        var
    max = long.MinValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            max
    = Math.Max(max, numbers[i]);\n            result.Add(max);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbbed7df52da4e99b1719db443031b98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbbed7df52da4e99b1719db443031b98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        int n = numbers.Count;\n        List<long>
    result = new List<long>(n);\n        long current_max = numbers[0];\n        result.Add(current_max);\n
    \       for (int i = 1; i < n; i++) {\n            long x = numbers[i];\n            if
    (x > current_max) {\n                current_max = x;\n            }\n            result.Add(current_max);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x0000f] in <9db79af9be1b41458afb0e23408ccff4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9db79af9be1b41458afb0e23408ccff4>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x0000f] in <9db79af9be1b41458afb0e23408ccff4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9db79af9be1b41458afb0e23408ccff4>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        int n = numbers.Count;\n        List<long>
    result = new List<long>(n);\n        long max = numbers[0];\n        result.Add(max);\n
    \       for (int i = 1; i < n; i++) {\n            max = Math.Max(max, numbers[i]);\n
    \           result.Add(max);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,
    (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L,
    (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L,
    (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x0000f] in <db183263c0894ced9fe6079d2740a0a1>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <db183263c0894ced9fe6079d2740a0a1>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x0000f] in <db183263c0894ced9fe6079d2740a0a1>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <db183263c0894ced9fe6079d2740a0a1>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        List<long> maxs = new List<long>();\n
    \       long currentMax = long.MinValue;\n        for (int i = 0; i < numbers.Count;
    i++) {\n            currentMax = Math.Max(currentMax, numbers[i]);\n            maxs.Add(currentMax);\n
    \       }\n        return maxs;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b0c6df2804424f86a6d046d5e7a21a24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b0c6df2804424f86a6d046d5e7a21a24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        List<long> result = new List<long>();\n
    \       var max = numbers[0];\n        for (int i = 0; i < numbers.Count; i++)
    {\n            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <bbe68d2b09e449c8b7395a40e78df374>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <bbe68d2b09e449c8b7395a40e78df374>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <bbe68d2b09e449c8b7395a40e78df374>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <bbe68d2b09e449c8b7395a40e78df374>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        List<long> result = new List<long>();\n
    \       long max = 0;\n        foreach (long val in numbers) {\n            if
    (val > max) max = val;\n            result.Add(max);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c8747022a3c40d89b2da96eb1745f09>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c8747022a3c40d89b2da96eb1745f09>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        if (numbers.Count == 0) return new List<long>();\n
    \       var res = new List<long>();\n        var curMax = numbers[0];\n        res.Add(curMax);\n
    \       for (int i = 1; i < numbers.Count; i++) {\n            curMax = Math.Max(curMax,
    numbers[i]);\n            res.Add(curMax);\n        }\n        return res;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eb2f39aace644e5a91936509e9ddeb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eb2f39aace644e5a91936509e9ddeb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var rollingMax = new List<long>();\n
    \       for (int i = 0; i < numbers.Count; i++) {\n            rollingMax.Add(Math.Max(numbers[i],
    i > 0 ? rollingMax[i - 1] : numbers[i]));\n        }\n        return rollingMax;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f5c9e69b8a640119396ac845442d0e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f5c9e69b8a640119396ac845442d0e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var ret = new List<long>();\n        long
    rolling_max = long.MinValue;\n        foreach (var number in numbers) {\n            rolling_max
    = Math.Max(rolling_max, number);\n            ret.Add(rolling_max);\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <494fb54d51f54e2e8b43757b57a03816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <494fb54d51f54e2e8b43757b57a03816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var prevMax = new List<long>();\n        long
    max = numbers[0];\n        prevMax.Add(max);\n        for (int i = 1; i < numbers.Count;
    i++) {\n            max = Math.Max(max, numbers[i]);\n            prevMax.Add(max);\n
    \       }\n        return prevMax;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <9775fc0d2a9d4aaf9d6f22510424e29e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9775fc0d2a9d4aaf9d6f22510424e29e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax
    (System.Collections.Generic.List`1[T] numbers) [0x00007] in <9775fc0d2a9d4aaf9d6f22510424e29e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9775fc0d2a9d4aaf9d6f22510424e29e>:0
    \n"
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        if (numbers.Count == 0) {\n            return
    new List<long>();\n        }\n        if (numbers.Count == 1) {\n            return
    new List<long> { numbers[0] };\n        }\n        long max = numbers[0];\n        List<long>
    result = new List<long> { max };\n        for (int i = 1; i < numbers.Count; i++)
    {\n            if (numbers[i] > max) {\n                max = numbers[i];\n            }\n
    \           result.Add(max);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,
    (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L,
    (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L,
    (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <844977c469294f81a86a7a357ec4833c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <844977c469294f81a86a7a357ec4833c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        List<long> maxes = new List<long>();\n
    \       long currMax = 0;\n        foreach (long number in numbers) {\n            if
    (number > currMax) {\n                currMax = number;\n            }\n            maxes.Add(currMax);\n
    \       }\n        return maxes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd16814ab20241e48824d39f08bfbd29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd16814ab20241e48824d39f08bfbd29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var max = new List<long>();\n        var
    currentMax = long.MinValue;\n        foreach (var x in numbers) {\n            currentMax
    = Math.Max(currentMax, x);\n            max.Add(currentMax);\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new
    List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new
    long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new
    List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b97fc5e7f0e43cd936b3a1c537dd92c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b97fc5e7f0e43cd936b3a1c537dd92c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var maxSoFar = new List<long>();\n        var
    max = long.MinValue;\n        for (int i = 0; i < numbers.Count; i++) {\n            if
    (numbers[i] > max) {\n                max = numbers[i];\n            }\n            maxSoFar.Add(max);\n
    \       }\n        return maxSoFar;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,
    (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L, (long)3L, (long)2L,
    (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L, (long)2L, (long)3L,
    (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c97b62ebd0c141ff8ad90cfa2bccc31e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c97b62ebd0c141ff8ad90cfa2bccc31e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // From a given list of integers, generate a list of rolling maximum
    element found until given moment\n    // in the sequence.\n    // >>> rolling_max([1,
    2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public static List<long>
    RollingMax(List<long> numbers) {\n        var max = new List<long> { };\n        long
    maxValue = long.MinValue;\n        for (int i = 0; i < numbers.Count; i++) {\n
    \           if (numbers[i] > maxValue)\n                maxValue = numbers[i];\n
    \           max.Add(maxValue);\n        }\n        return max;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new
    List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,
    (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L,
    (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,
    (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)4L,
    (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)3L,
    (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64f1b0f1940c4900b8f4b22f22d5b01d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64f1b0f1940c4900b8f4b22f22d5b01d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659823662

name: HumanEval_92_any_int
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true\
  \ if one of the numbers is equal to the sum of the other two, and all numbers are\
  \ integers.\n    // Returns false in any other cases.\n    // Examples\n    // any_int(5,\
  \ 2, 7) \u279E True\n    // any_int(3, 2, 2) \u279E False\n    // any_int(3, -2,\
  \ 1) \u279E True\n    // any_int(3.6, -2.2, 2) \u279E False\n    public static bool\
  \ AnyInt(float x, float y, float z) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
  \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
  \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==\
  \ (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
  \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
  \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)\
  \ == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n\
  \    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),\
  \ (float)4L, (float)7L) == (false));\n    }\n\n}\n"
completions: ["        // return true if any of the numbers are equal to the sum of\
    \ the other two\n        // and the other two numbers are integers\n        //\
    \ it is possible that the two integers are the same and the third number is the\
    \ sum of them\n        // for example anyInt(3, 2, 5) would be true\n        //\
    \ also need to make sure that no two numbers are the same\n        // for example\
    \ anyInt(3, 2, 2) would be false\n        // also need to make sure that the three\
    \ numbers are integers\n        // for example anyInt(3.6, -2.2, 2) would be false\n\
    \        // if both x and y are integers then the sum of the other two is x +\
    \ y\n        // if both x and z are integers then the sum of the other two is\
    \ x + z\n        // if both y and z are integers then the sum of the other two\
    \ is y + z\n        return (x == (y + z) && y != z && y == (int)y && z == (int)z)\
    \ ||\n            (x == (y + z) && x != y && x == (int)x && y == (int)y) ||\n\
    \            (y == (x + z) && x != z && x == (int)x && z == (int)z);", '        return
    (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && ((x + y == z) || (x + z == y) || (y
    + z == x));', '        return (int)x + (int)y == (int)z || (int)x + (int)z ==
    (int)y || (int)y + (int)z == (int)x;', "        if (x == (y + z) || y == (x +\
    \ z) || z == (x + y)) {\n            return true;\n        }\n        return false;",
  '        return false;', "        if (x + y == z || x + z == y || y + z == x) {\n\
    \            return true;\n        }\n        return false;", "        var result\
    \ = false;\n        if ((int)x + (int)y == (int)z) {\n            result = true;\n\
    \        } else if ((int)x + (int)z == (int)y) {\n            result = true;\n\
    \        } else if ((int)y + (int)z == (int)x) {\n            result = true;\n\
    \        }\n        return result;", "        float sum = 0;\n        if (x <\
    \ 0) {\n            x = 0 - x;\n        }\n        if (y < 0) {\n            y\
    \ = 0 - y;\n        }\n        if (z < 0) {\n            z = 0 - z;\n        }\n\
    \        if (x - (int)x == 0 && y - (int)y == 0 && z - (int)z == 0) {\n      \
    \      sum = x + y;\n            if (sum == z) {\n                return true;\n\
    \            }\n            sum = x + z;\n            if (sum == y) {\n      \
    \          return true;\n            }\n            sum = y + z;\n           \
    \ if (sum == x) {\n                return true;\n            }\n        }\n  \
    \      return false;", '        return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)
    && (x + y == z || x + z == y || y + z == x);', "        if (int.TryParse(x.ToString(),\
    \ out int a) && int.TryParse(y.ToString(), out int b) && int.TryParse(z.ToString(),\
    \ out int c)) {\n            if (a == b + c || b == a + c || c == a + b) {\n \
    \               return true;\n            }\n        }\n        return false;",
  "        bool isInteger = (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0);\n      \
    \  if (isInteger) {\n            if (x == y + z || y == x + z || z == x + y) {\n\
    \                return true;\n            }\n        }\n        return false;",
  "        if (x == y + z || y == x + z || z == x + y) {\n            if (x % 1 ==\
    \ 0 && y % 1 == 0 && z % 1 == 0) {\n                return true;\n           \
    \ }\n        }\n        return false;", "        if (((int)x + (int)y == (int)z)\
    \ || ((int)x + (int)z == (int)y) || ((int)y + (int)z == (int)x))\n           \
    \ return true;\n        else\n            return false;", '        return x %
    1 == 0 && y % 1 == 0 && z % 1 == 0 && (x + y == z || x + z == y || y + z == x);',
  "        if(x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n        return false;", '        return true;', "        if(x == y\
    \ + z) {\n            return true;\n        }\n        if(x == y - z) {\n    \
    \        return true;\n        }\n        if(x == z - y) {\n            return\
    \ true;\n        }\n        if(y == x + z) {\n            return true;\n     \
    \   }\n        if(y == x - z) {\n            return true;\n        }\n       \
    \ if(y == z - x) {\n            return true;\n        }\n        if(z == x + y)\
    \ {\n            return true;\n        }\n        if(z == x - y) {\n         \
    \   return true;\n        }\n        if(z == y - x) {\n            return true;\n\
    \        }\n        return false;", "        float temp = x + y;\n        if (temp\
    \ == z) {\n            return true;\n        }\n        temp = x + z;\n      \
    \  if (temp == y) {\n            return true;\n        }\n        temp = y + z;\n\
    \        if (temp == x) {\n            return true;\n        }\n        return\
    \ false;", '        return (int)x + (int)y == (int)z || (int)x + (int)z == (int)y
    || (int)y + (int)z == (int)x;', '        return (x + y == z || x + z == y || y
    + z == x) && (x % 1 == 0 && y % 1 == 0 && z % 1 == 0);']
stop_tokens:
- "\n    }\n"

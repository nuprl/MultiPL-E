name: HumanEval_64_vowels_count
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function vowels_count which takes a string representing\n\
  \    // a word as input and returns the number of vowels in the string.\n    //\
  \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel,\
  \ but only when it is at the end of the given word.\n    // Example:\n    // >>>\
  \ vowels_count(\"abcde\")\n    // 2\n    // >>> vowels_count(\"ACEDY\")\n    //\
  \ 3\n    public static long VowelsCount(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(VowelsCount((\"\
  abcde\")) == (2L));\n    Debug.Assert(VowelsCount((\"Alone\")) == (3L));\n    Debug.Assert(VowelsCount((\"\
  key\")) == (2L));\n    Debug.Assert(VowelsCount((\"bye\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  keY\")) == (2L));\n    Debug.Assert(VowelsCount((\"bYe\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  ACEDY\")) == (3L));\n    }\n\n}\n"
completions: ["        // Your code here.\n        long result = 0;\n        bool\
    \ last_y = false;\n        foreach (char c in s) {\n            if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                result++;\n\
    \            }\n            else if (c == 'y') {\n                last_y = true;\n\
    \            }\n            else {\n                last_y = false;\n        \
    \    }\n        }\n        if (last_y) {\n            result++;\n        }\n \
    \       return result;", '        throw new NotImplementedException();', "   \
    \     var count = 0;\n        // Your code here\n        return count;", "   \
    \     long result = 0;\n        bool vowel = false;\n        bool all_vowels =\
    \ true;\n        // Check if each character is a vowel.\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            char c = s[i];\n            vowel = \"\
    aeiou\".Contains(c);\n            if (c != 'y' && !vowel) all_vowels = false;\n\
    \            if (vowel) result++;\n        }\n        // If the word is all vowels\
    \ then remove 1 since we should only\n        // count the last 'y' as a vowel.\n\
    \        if (all_vowels) result--;\n        return result;", "        return s.ToLower().Where(c\
    \ => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y').Count();",
  "        // TODO: Write your code here\n        long count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n                count++;\n        \
    \    }\n        }\n        if (s[s.Length - 1] == 'y') {\n            count++;\n\
    \        }\n        return count;", "        // Your code here\n        return\
    \ 0;", "        // TODO: Implement VowelsCount function.\n        return 0;",
  "        long count = 0;\n        char[] vowels = {'a', 'e', 'i', 'o', 'u'};\n \
    \       for (int i = 0; i < s.Length; i++) {\n            for (int j = 0; j <\
    \ vowels.Length; j++) {\n                if (s[i] == vowels[j]) {\n          \
    \          count++;\n                }\n            }\n        }\n        return\
    \ count;", '        return s.Count(c => "aeiouAEIOU".Contains(c));', "       \
    \ long count = 0;\n        for (var i = 0; i < s.Length; i++) {\n            if\
    \ (IsVowel(s[i])) {\n                count++;\n            }\n        }\n    \
    \    return count;", "        long res = 0;\n        foreach (char c in s) {\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                res++;\n            }\n        }\n        if (s.Length > 1 &&\
    \ s[s.Length - 1] == 'y') res++;\n        return res;", "        //return 1;\n\
    \        var vowels = new HashSet<char>(\"aeiouyAEIOUY\");\n        var vowels_count\
    \ = s.Count(c => vowels.Contains(c));\n        if (vowels.Contains(s[s.Length\
    \ - 1])) {\n            vowels_count += 1;\n        }\n        return vowels_count;",
  "        long c=0;\n        bool Y = false;\n        foreach(char i in s) {\n  \
    \          if(i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u') {\n  \
    \              c++;\n            }\n            if(i == 'y') {\n             \
    \   Y = true;\n            }\n        }\n        if(Y) {\n            c++;\n \
    \       }\n        return c;", "        long vowels = 0;\n        foreach (char\
    \ c in s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n                vowels++;\n            }\n        }\n        if (s.Length\
    \ > 1 && s[s.Length - 1] == 'y') {\n            vowels++;\n        }\n       \
    \ return vowels;", '        return s.Count(c => "aeiouyAEIOUY".Contains(c));',
  "        long vowels = 0;\n        foreach (char c in s) {\n            switch (c)\
    \ {\n                case 'a':\n                case 'e':\n                case\
    \ 'i':\n                case 'o':\n                case 'u':\n               \
    \ case 'y':\n                    vowels++;\n                    break;\n     \
    \       }\n        }\n        return vowels;", "        // Write your code here\n\
    \        return 0;", "        long n = 0;\n        // TODO: Write your code here\n\
    \        return n;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            char c = s[i];\n            if (IsVowel(c)) {\n        \
    \        count++;\n            }\n        }\n        if (s.Length > 1 && s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

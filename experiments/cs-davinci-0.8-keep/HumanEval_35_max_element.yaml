name: HumanEval_35_max_element
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
  \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  \    // 123\n    public static long MaxElement(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
  \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
  \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n\
  }\n"
completions: ["        long res = long.MinValue;\n        foreach (long e in l)\n\
    \            if (e > res)\n                res = e;\n        return res;", " \
    \       long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n      \
    \      if (l[i] > max) {\n                max = l[i];\n            }\n       \
    \ }\n        return max;", '        return l.Max();', "        long m = long.MinValue;\n\
    \        foreach (long x in l) {\n            if (x > m) {\n                m\
    \ = x;\n            }\n        }\n        return m;", '        return l.Max();',
  "        long r = l[0];\n        for (int i = 1; i < l.Count; i++) r = Math.Max(r,\
    \ l[i]);\n        return r;", "        long max = long.MinValue;\n        foreach\
    \ (long n in l) {\n            if (n > max) max = n;\n        }\n        return\
    \ max;", "        if (l.Count == 0) return -99999999;\n        long maxElement\
    \ = l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] >\
    \ maxElement) maxElement = l[i];\n        }\n        return maxElement;", '        return
    l.Max();', "        long m = long.MinValue;\n        foreach (long x in l)\n \
    \           if (x > m)\n                m = x;\n        return m;", '        return
    l.Max();', "        // Insert your code here.\n        return 0;", '        return
    l.Max();', '        return l.Max();', "        // START\n        return l.Max();\n\
    \        // END", '        return l.Max();', "        long max = l[0];\n     \
    \   for (int i = 1; i < l.Count; i++) {\n            if (l[i] > max) max = l[i];\n\
    \        }\n        return max;", "        long max_element = long.MinValue;\n\
    \        foreach (long i in l) {\n            if (i > max_element) {\n       \
    \         max_element = i;\n            }\n        }\n        return max_element;",
  "        long max = Int64.MinValue;\n        foreach (long element in l) {\n   \
    \         if (element > max) {\n                max = element;\n            }\n\
    \        }\n        return max;", '        return l.Max();']
stop_tokens:
- "\n    }\n"

name: HumanEval_13_greatest_common_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return a greatest common divisor of two integers a and b\n \
  \   // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
  \ 15)\n    // 5\n    public static long GreatestCommonDivisor(long a, long b) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
  \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
  \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
  \ (60L)) == (12L));\n    }\n\n}\n"
completions: ["        while (b != 0) {\n            long r = a % b;\n           \
    \ a = b;\n            b = r;\n        }\n        return a;", "        while (b\
    \ != 0) {\n            long t = b;\n            b = a % b;\n            a = t;\n\
    \        }\n        return a;", "        var t = a;\n        while (a % b != 0)\
    \ {\n            t = a;\n            a = b;\n            b = t % b;\n        }\n\
    \        return b;", "        if (a < b) { return GreatestCommonDivisor(b, a);\
    \ }\n        if (b == 0) { return a; }\n        return GreatestCommonDivisor(b,\
    \ a % b);", "        if (a < b) {\n            long c = a;\n            a = b;\n\
    \            b = c;\n        }\n        long d = a % b;\n        while (d != 0)\
    \ {\n            a = b;\n            b = d;\n            d = a % b;\n        }\n\
    \        return b;", "        if (a < b) {\n            long c = a;\n        \
    \    a = b;\n            b = c;\n        }\n        if (b == 0) {\n          \
    \  return a;\n        }\n        return GreatestCommonDivisor(b, a % b);", " \
    \       if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
    \            return a;\n        }\n        if (a < b) {\n            return GreatestCommonDivisor(b,\
    \ a);\n        }\n        while (b != 0) {\n            long remainder = a % b;\n\
    \            a = b;\n            b = remainder;\n        }\n        return a;",
  "        if (a < b) {\n            long tmp = a;\n            a = b;\n         \
    \   b = tmp;\n        }\n        while (b != 0) {\n            long tmp = a %\
    \ b;\n            a = b;\n            b = tmp;\n        }\n        return a;",
  "        long temp;\n        while (b != 0) {\n            temp = a % b;\n     \
    \       a = b;\n            b = temp;\n        }\n        return a;", "      \
    \  if (a < b) {\n            return GreatestCommonDivisor(b, a);\n        }\n\
    \        if (b == 0) {\n            return a;\n        }\n        return GreatestCommonDivisor(b,\
    \ a % b);", "        if (a < b) {\n            return GreatestCommonDivisor(b,\
    \ a);\n        }\n        if (b == 0) {\n            return a;\n        }\n  \
    \      return GreatestCommonDivisor(b, a % b);", "        while (b != 0) {\n \
    \           var temp = b;\n            b = a % b;\n            a = temp;\n   \
    \     }\n        return a;", "        // Asserts a > 0 and b > 0\n        if (a\
    \ < b) {\n            return GreatestCommonDivisor(b, a);\n        }\n       \
    \ while (b != 0) {\n            var p = a % b;\n            a = b;\n         \
    \   b = p;\n        }\n        return a;", "        while (b != 0) {\n       \
    \     var r = a % b;\n            a = b;\n            b = r;\n        }\n    \
    \    return a;", "        var gcd = a % b;\n        while (gcd != 0) {\n     \
    \       a = b;\n            b = gcd;\n            gcd = a % b;\n        }\n  \
    \      return b;", "        long aa = a;\n        long bb = b;\n        while\
    \ (bb != 0) {\n            var remainder = aa % bb;\n            aa = bb;\n  \
    \          bb = remainder;\n        }\n        return aa;", "        if (a < b)\
    \ {\n            long c = a;\n            a = b;\n            b = c;\n       \
    \ }\n        while (b != 0) {\n            long c = a % b;\n            a = b;\n\
    \            b = c;\n        }\n        return a;", "        long aa = Math.Abs(a);\n\
    \        long bb = Math.Abs(b);\n        long temp;\n        while (bb != 0) {\n\
    \            temp = aa % bb;\n            aa = bb;\n            bb = temp;\n \
    \       }\n        return aa;", "        var result = a % b;\n        while (result\
    \ != 0) {\n            a = b;\n            b = result;\n            result = a\
    \ % b;\n        }\n        return b;", "        if (a < b) {\n            long\
    \ tmp = a;\n            a = b;\n            b = tmp;\n        }\n        long\
    \ c = a % b;\n        while (c != 0) {\n            a = b;\n            b = c;\n\
    \            c = a % b;\n        }\n        return b;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_95_check_dict_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // Implement this function so that it passes the tests in Tests.cs\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a6b4a28f6677418b866e1c0f3c33e06d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a6b4a28f6677418b866e1c0f3c33e06d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        var LowerKeys = dict.Keys.Where(k => k.All(c => char.IsLower(c)));\n
    \       var UpperKeys = dict.Keys.Where(k => k.All(c => char.IsUpper(c)));\n        if
    (LowerKeys.Count() == dict.Count()) return true;\n        if (UpperKeys.Count()
    == dict.Count()) return true;\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <78b5e75eb645458ebee99fdf953eaede>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // write your code here\n        // return true if the task is
    completed successfully\n        if (dict.Count == 0) return false;\n        bool
    upper = false;\n        bool lower = false;\n        foreach (var pair in dict)
    {\n            if (pair.Key.All(char.IsUpper)) upper = true;\n            if (pair.Key.All(char.IsLower))
    lower = true;\n        }\n        return upper ^ lower;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6784756505a64e35a811189bf6e2da7e>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n\n
    \       bool all_upper = true;\n        bool all_lower = true;\n        foreach
    (string key in dict.Keys) {\n            if (all_upper && !key.ToUpper().Equals(key))
    {\n                all_upper = false;\n            }\n            if (all_lower
    && !key.ToLower().Equals(key)) {\n                all_lower = false;\n            }\n
    \       }\n        return all_upper || all_lower;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54999c00c5094f8f9a9a159441d75e36>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // Your code here\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf7725365b644e1f9756b0cfb65624eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf7725365b644e1f9756b0cfb65624eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        throw new NotImplementedException();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00027] in <e966de7639114fb183a6d0e6c0918a6b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00027]
    in <e966de7639114fb183a6d0e6c0918a6b>:0 \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // TODO: Implement check_dict_case function here\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkbm5vo5d.cs(18,24): error CS0161: ''Problem.CheckDictCase(Dictionary<string,
    string>)'': not all code paths return a value

    '
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        bool all_upper =
    true;\n        bool all_lower = true;\n        foreach (var kvp in dict) {\n            if
    (kvp.Key.ToUpper() != kvp.Key) all_upper = false;\n            if (kvp.Key.ToLower()
    != kvp.Key) all_lower = false;\n        }\n        return all_upper || all_lower;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <544297c031f2421ba8f7fd2b283afadb>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // YOUR CODE HERE\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00027] in <6f8142e962214a5fbe506ceb8acb0aed>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00027]
    in <6f8142e962214a5fbe506ceb8acb0aed>:0 \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        var upper = dict.Keys.ToArray().Select(k => k.ToUpper()).ToArray();\n
    \       var lower = dict.Keys.ToArray().Select(k => k.ToLower()).ToArray();\n
    \       return dict.Keys.ToArray().SequenceEqual(upper) || dict.Keys.ToArray().SequenceEqual(lower);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3055472459af496a8df5ae2036aa9a29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3055472459af496a8df5ae2036aa9a29>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        bool allUpper = true;\n
    \       bool allLower = true;\n        foreach (var kvp in dict) {\n            if
    (String.IsNullOrEmpty(kvp.Key)) continue;\n            if (Char.IsLower(kvp.Key[0]))
    {\n                allUpper = false;\n            } else {\n                allLower
    = false;\n            }\n        }\n        return allUpper || allLower;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b35bd57f55641768556ac8c4a599533>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // IMPLEMENT ME\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b10915864a4a0dbd03b7fe84ef306d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b10915864a4a0dbd03b7fe84ef306d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool lower = true;\n        bool upper = true;\n        foreach
    (string key in dict.Keys) {\n            if (key.Any(char.IsUpper)) upper = false;\n
    \           if (key.Any(char.IsLower)) lower = false;\n        }\n        return
    upper || lower;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4313e8f4042468394422bc67f5d06cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4313e8f4042468394422bc67f5d06cb>:0
    \n"
  stdout: ''
  timestamp: 1659824267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        // TODO: Implement this\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bc4888b0f5d49e988c18fcb2468c31f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bc4888b0f5d49e988c18fcb2468c31f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       string[] keys = dict.Keys.ToArray();\n        if (keys[0].All(Char.IsUpper))
    {\n            for (int i = 1; i < keys.Length; i++) {\n                if (!keys[i].All(Char.IsUpper))
    {\n                    return false;\n                }\n            }\n        }
    else if (keys[0].All(Char.IsLower)) {\n            for (int i = 1; i < keys.Length;
    i++) {\n                if (!keys[i].All(Char.IsLower)) {\n                    return
    false;\n                }\n            }\n        } else {\n            return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        bool upper = dict.Keys.First()
    == dict.Keys.First().ToUpper();\n        return dict.Keys.All(x => x == x.ToUpper()
    == upper);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e35c730c4004325a83112fd90cd686a>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        int lower_keys = 0;\n        int
    upper_keys = 0;\n        foreach (KeyValuePair<string, string> pair in dict) {\n
    \           if (pair.Key.All(char.IsLower)) {\n                lower_keys += 1;\n
    \           } else if (pair.Key.All(char.IsUpper)) {\n                upper_keys
    += 1;\n            } else {\n                result = false;\n                break;\n
    \           }\n        }\n        if (lower_keys > 0 && upper_keys > 0) {\n            result
    = false;\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <14d3b4d856bf4617ae70de5082da396e>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool lower = true;\n        bool upper = true;\n        foreach
    (var key in dict.Keys) {\n            if (key != key.ToLower()) lower = false;\n
    \           if (key != key.ToUpper()) upper = false;\n        }\n        return
    lower || upper;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64d1b80601a5436087b0c79b9d92d96a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64d1b80601a5436087b0c79b9d92d96a>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       bool isLower = dict.Keys.First().ToLower() == dict.Keys.First();\n        foreach
    (var key in dict.Keys) {\n            if (isLower) {\n                if (key.ToLower()
    != key) {\n                    return false;\n                }\n            }
    else {\n                if (key.ToUpper() != key) {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a36e51d365c42738829e3d9bc436848>:0
    \n"
  stdout: ''
  timestamp: 1659824266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool check = false;\n        bool hasLower = false;\n        bool
    hasUpper = false;\n        foreach (var entry in dict) {\n            if (entry.Key.ToLower()
    == entry.Key) {\n                hasLower = true;\n            } else if (entry.Key.ToUpper()
    == entry.Key) {\n                hasUpper = true;\n            } else {\n                return
    false;\n            }\n        }\n        if (hasLower && hasUpper) {\n            return
    false;\n        } else {\n            return true;\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15d9c05e4ac04c709cfcb7abe57fbb3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15d9c05e4ac04c709cfcb7abe57fbb3c>:0
    \n"
  stdout: ''
  timestamp: 1659824266

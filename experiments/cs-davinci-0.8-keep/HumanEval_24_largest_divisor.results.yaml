language: cs
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return -1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        // Iterate on i * i <= n\n   \
    \     for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\n     \
    \           return n / i;\n        }\n        return 1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n\
    \    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        var i = 2L;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n      \
    \      } else {\n                i++;\n            }\n        }\n        return\
    \ n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e4373294f5a422ea6ad1647fe934de7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0e4373294f5a422ea6ad1647fe934de7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long largest = 0;\n        for\
    \ (long i = 1; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            largest = i;\n            }\n        }\n        return largest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a81c6951849e466495aaa532840915b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a81c6951849e466495aaa532840915b4>:0 \n"
  stdout: ''
  timestamp: 1659823239
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        // find the factors of n\n   \
    \     var factors = Factorize(n);\n        // create a list of factors, grouped\
    \ by the number they divide into\n        var factors2 = factors.GroupBy(x =>\
    \ x.Item1).ToDictionary(x => x.Key, x => x.Count());\n        // multiply the\
    \ factors with the largest count, that divides n\n        return factors2.Where(x\
    \ => n % x.Key == 0).OrderByDescending(x => x.Value).Select(x => x.Key).Aggregate((x,\
    \ y) => x * y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0gbq74z7.cs(14,23): error CS0103: The name ''Factorize'' does not exist
    in the current context

    '
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long largestDivisor = -1;\n  \
    \      for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6af15e02afe7415fa5978869ba656d98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6af15e02afe7415fa5978869ba656d98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return 1;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        if (n == 1) return 1;\n      \
    \  long last_d = n;\n        while (true) {\n            long d = n / last_d;\n\
    \            if (n % last_d == 0) {\n                last_d = d;\n           \
    \ } else {\n                return last_d;\n            }\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659823244
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) return i;\n        }\n        return -1;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (int i = 2; i <= Math.Sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                return n / i;\n     \
    \       }\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n - 1; i > 0; i--)\
    \ {\n            if (n % i == 0) return i;\n        }\n        return 0;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long best = 0;\n        for (long\
    \ i = 1; i < n; i++) {\n            if (n % i == 0) best = i;\n        }\n   \
    \     return best;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                return n / i;\n          \
    \  }\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long limit = (long)Math.Floor(Math.Sqrt(n));\n\
    \        for (long i = limit; i > 0; i--) {\n            if (n % i == 0) {\n \
    \               return i;\n            }\n        }\n        return 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31232db434b14f7faba2933315fd7bb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31232db434b14f7faba2933315fd7bb9>:0 \n"
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        return n / 2;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) ==\
    \ (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2b905e5325f4073b597c14a0b5c7f3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2b905e5325f4073b597c14a0b5c7f3e>:0 \n"
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        for (long i = n / 2; i > 1; i--)\
    \ {\n            if (n % i == 0) return i;\n        }\n        return 1;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long i = n / 2;\n        while(i\
    \ > 0) {\n            if(n % i == 0) {\n                return i;\n          \
    \  }\n            i--;\n        }\n        return 1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n\
    \    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        var largest = 0L;\n        var\
    \ sqrt = Math.Sqrt(n);\n        // starting at the end of the range, we should\
    \ find a number that divides n\n        // if we don't, we increment up to find\
    \ the next one\n        for (var i = (long)Math.Floor(sqrt); i > 0; i--) {\n \
    \           if (n % i == 0) {\n                largest = i;\n                break;\n\
    \            }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n   \
    \ Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
    \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
    \ == (7L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <befd47752e544780ace5feaa4817e554>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <befd47752e544780ace5feaa4817e554>:0 \n"
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    public\
    \ static long LargestDivisor(long n) {\n        long i;\n        for (i = 2; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                return n / i;\n\
    \            }\n        }\n        return 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(LargestDivisor((3L)) == (1L));\n    Debug.Assert(LargestDivisor((7L))\
    \ == (1L));\n    Debug.Assert(LargestDivisor((10L)) == (5L));\n    Debug.Assert(LargestDivisor((100L))\
    \ == (50L));\n    Debug.Assert(LargestDivisor((49L)) == (7L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823239

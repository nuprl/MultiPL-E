language: cs
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        for (int i = 0;\
    \ i < x.Count; i++) {\n            if (x[i] % 2 != 0) {\n                result.Add(x[i]);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bedc8e70f9da4e4391afe9f448ed8a4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bedc8e70f9da4e4391afe9f448ed8a4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var result = new List<long>();\n        // Your code here.\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <401c229acbf442459ba28cd940d879f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <401c229acbf442459ba28cd940d879f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var r = new List<long>();\n        foreach (var a in x) {\n  \
    \          var v = a;\n            var has_even = false;\n            while (v\
    \ > 0) {\n                var n = v % 10;\n                if (n % 2 == 0) {\n\
    \                    has_even = true;\n                    break;\n          \
    \      }\n                v /= 10;\n            }\n            if (!has_even)\
    \ {\n                r.Add(a);\n            }\n        }\n        r.Sort();\n\
    \        return r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <979eef983a4e438a9f1dadebf5ad28ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <979eef983a4e438a9f1dadebf5ad28ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        // TODO: Implement me\n        return new List<long>();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a19ce6490c04a00bacca79b777ea8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a19ce6490c04a00bacca79b777ea8b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var res = new List<long>();\n        foreach (var l in x) {\n\
    \            if (HasEvenDigit(l)) {\n                continue;\n            }\n\
    \            res.Add(l);\n        }\n        res.Sort();\n        return res;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxvly7jep.cs(20,17): error CS0103: The name ''HasEvenDigit'' does not exist
    in the current context

    '
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var answer = new List<long>();\n        foreach (var num in x)\
    \ {\n            if (num == 0) {\n                continue;\n            }\n \
    \           while (num > 0) {\n                if (num % 2 == 0) {\n         \
    \           break;\n                }\n                num /= 10;\n          \
    \  }\n            if (num == 0) {\n                answer.Add(num);\n        \
    \    }\n        }\n        return answer;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcg5ou6ik.cs(27,17): error CS1656: Cannot assign to ''num'' because it
    is a ''foreach iteration variable''

    '
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        // Your code here\n        return null;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <91a18ea7435a44d18376e8b90c3250b3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <91a18ea7435a44d18376e8b90c3250b3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        // TODO: Implement this\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00032] in <3c48006703d540fcb68b0c655802d633>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00032] in <3c48006703d540fcb68b0c655802d633>:0\
    \ \n"
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(v => v.ToString().All(c => c.ToString() != \"0\"\
    \ && c.ToString() != \"2\" && c.ToString() != \"4\" && c.ToString() != \"6\" &&\
    \ c.ToString() != \"8\")).ToList();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9397eace3bc42d9a409b53cf9edd9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d9397eace3bc42d9a409b53cf9edd9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return new List<long>();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2dc5138cbe444cb9f26593bdc44b8df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2dc5138cbe444cb9f26593bdc44b8df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(number => number.ToString().All(ch => ch % 2 !=\
    \ 0)).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea05e29c246745b5a2661fb7a4734ebb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea05e29c246745b5a2661fb7a4734ebb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        for (int i = 0;\
    \ i < x.Count; i++) {\n            int j = 0;\n            while (x[i] != 0) {\n\
    \                if (x[i] % 2 == 0) {\n                    break;\n          \
    \      }\n                j++;\n                x[i] /= 10;\n            }\n \
    \           if (x[i] == 0) {\n                result.Add(x[i]);\n            }\n\
    \        }\n        result.Sort();\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ed95a13ed964bdf9f9b42ca030bf15a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ed95a13ed964bdf9f9b42ca030bf15a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(num => !IsEven(num)).ToList();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6euwfwvm.cs(18,32): error CS0103: The name ''IsEven'' does not exist in
    the current context

    '
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(y => !y.ToString().Any(n => n % 2 == 0)).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1fd91e47b3747f1ad0381fce3cefb29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f1fd91e47b3747f1ad0381fce3cefb29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        // check if integer has even digit\n        Func<long, bool> hasEvenDigit\
    \ = (n) => {\n            while (n > 0) {\n                int r = (int)(n % 10);\n\
    \                if (r % 2 == 0) {\n                    return true;\n       \
    \         }\n                n /= 10;\n            }\n            return false;\n\
    \        };\n        // main\n        return x.Where(e => !hasEvenDigit(e)).OrderBy(n\
    \ => n).ToList();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ce437ac8744c6980154b3be8d12eed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ce437ac8744c6980154b3be8d12eed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var res = new List<long>();\n        foreach (var num in x) {\n\
    \            var unique = true;\n            foreach (var digit in num.ToString())\
    \ {\n                if (digit % 2 == 0) {\n                    unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (unique) {\n                res.Add(num);\n            }\n        }\n      \
    \  res.Sort();\n        return res;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3aa487816b84463dbf4cd56b7084034f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3aa487816b84463dbf4cd56b7084034f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        var result = new List<long>();\n        foreach (var v in x) {\n\
    \            var unique = true;\n            while (v > 0) {\n               \
    \ var d = v % 10;\n                if (d % 2 == 0) {\n                    unique\
    \ = false;\n                    break;\n                }\n                v /=\
    \ 10;\n            }\n            if (unique) result.Add(v);\n        }\n    \
    \    result.Sort();\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr48nhrh5.cs(27,17): error CS1656: Cannot assign to ''v'' because it is
    a ''foreach iteration variable''

    '
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(item =>\n                item.ToString().ToCharArray().All(digit\
    \ => digit % 2 != 0)\n            ).ToList();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f02cc8a782334c409ed3b9a2bc20978a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f02cc8a782334c409ed3b9a2bc20978a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        return x.Where(i => !i.ToString().Any(d => d % 2 == 0)).ToList();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b334a9dd99c64f1c84fc0fc9bc361835>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b334a9dd99c64f1c84fc0fc9bc361835>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823300
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        throw new NotImplementedException();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation\
    \ is not implemented.\n  at Problem.Main (System.String[] args) [0x00017] in <29f06fec4a43435b86e0869c6051ce45>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method\
    \ or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00017]\
    \ in <29f06fec4a43435b86e0869c6051ce45>:0 \n"
  stdout: ''
  timestamp: 1659823300

language: cs
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        StringBuilder sb = new\
    \ StringBuilder();\n        foreach (char ch in str) {\n            if (char.IsUpper(ch))\n\
    \                sb.Append(char.ToLower(ch));\n            else\n            \
    \    sb.Append(char.ToUpper(ch));\n        }\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        var result = new char[str.Length];\n\
    \        for (int i = 0; i < str.Length; i++) {\n            var ch = str[i];\n\
    \            result[i] = char.IsLower(ch) ? char.ToUpper(ch) : char.ToLower(ch);\n\
    \        }\n        return new string(result);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        string output = \"\"\
    ;\n        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                output +=\
    \ char.ToLower(chars[i]);\n            } else {\n                output += char.ToUpper(chars[i]);\n\
    \            }\n        }\n        return output;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        StringBuilder sb = new\
    \ StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                sb.Append(char.ToLower(c));\n            } else {\n     \
    \           sb.Append(char.ToUpper(c));\n            }\n        }\n        return\
    \ sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        var output = \"\";\n\
    \        foreach (var c in str) {\n            var up = c.ToString().ToUpper();\n\
    \            var low = c.ToString().ToLower();\n            if (c.ToString() ==\
    \ up)\n                output += low;\n            else\n                output\
    \ += up;\n        }\n        return output;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return String.Join(\"\
    \", str.Select(x => Char.IsUpper(x) ? Char.ToLower(x) : Char.ToUpper(x)));\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return null;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <dfe02281b9c84070b4b2f7e830ef2d0d>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <dfe02281b9c84070b4b2f7e830ef2d0d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        string s = \"\";\n \
    \       for (int i = 0; i < str.Length; i++) {\n            if (str[i] >= 'a'\
    \ && str[i] <= 'z') {\n                s += char.ToUpper(str[i]);\n          \
    \  } else if (str[i] >= 'A' && str[i] <= 'Z') {\n                s += char.ToLower(str[i]);\n\
    \            } else {\n                s += str[i];\n            }\n        }\n\
    \        return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return string.Join(\"\
    \", str.Select(x => Char.IsUpper(x) ? Char.ToLower(x) : Char.ToUpper(x)));\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return String.Concat(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return string.Concat(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (char.IsUpper(chars[i]))\
    \ {\n                chars[i] = char.ToLower(chars[i]);\n            } else if\
    \ (char.IsLower(chars[i])) {\n                chars[i] = char.ToUpper(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        string result = \"\"\
    ;\n        foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n   \
    \             result += Char.ToLower(c);\n            } else {\n             \
    \   result += Char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        var result = new StringBuilder();\n\
    \        foreach (var c in str) {\n            result.Append(char.IsUpper(c) ?\
    \ char.ToLower(c) : char.ToUpper(c));\n        }\n        return result.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        StringBuilder sb = new\
    \ StringBuilder();\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                sb.Append(char.ToUpper(c));\n            } else {\n     \
    \           sb.Append(char.ToLower(c));\n            }\n        }\n        return\
    \ sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        var buffer = new StringBuilder(str.Length);\n\
    \        foreach (var c in str) {\n            if (Char.IsLower(c))\n        \
    \        buffer.Append(Char.ToUpper(c));\n            else if (Char.IsUpper(c))\n\
    \                buffer.Append(Char.ToLower(c));\n            else\n         \
    \       buffer.Append(c);\n        }\n        return buffer.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n\
    \    public static string FlipCase(string str) {\n        string[] s = str.Split();\n\
    \        char[] strArr = str.ToCharArray();\n        for (int i = 0; i < strArr.Length;\
    \ i++) {\n            if (Char.IsLower(strArr[i])) {\n                strArr[i]\
    \ = Char.ToUpper(strArr[i]);\n            } else {\n                strArr[i]\
    \ = Char.ToLower(strArr[i]);\n            }\n        }\n        return new string(strArr);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360

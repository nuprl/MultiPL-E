name: HumanEval_2_truncate_number
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a positive floating point number, it can be decomposed\
  \ into\n    // and integer part (largest integer smaller than given number) and\
  \ decimals\n    // (leftover part always smaller than 1).\n    // Return the decimal\
  \ part of the number.\n    // >>> truncate_number(3.5)\n    // 0.5\n    public static\
  \ float TruncateNumber(float number) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TruncateNumber((3.5f))\
  \ == (0.5f));\n    Debug.Assert(TruncateNumber((1.25f)) == (0.25f));\n    Debug.Assert(TruncateNumber((123.0f))\
  \ == (0.0f));\n    }\n\n}\n"
completions: ['        return number - (int)number;', '        return number - (int)number;',
  '        return number - (int)number;', "        int c;\n        c = (int)number;\n\
    \        return number - c;", '        return number % 1;', '        return (number
    > 0) ? number - (int)number : number - (int)number + 1;', '        return number
    - (int)number;', '        return number - (int)number;', '        return number
    - (int)number;', '        return number - Math.Truncate(number);', "        //\
    \ Your implementation goes here.\n        return number - (int)number;", '        return
    number - (int)number;', '        return number - (int)number;', '        return
    number - (int)number;', "        int integer_part = (int)number;\n        return\
    \ number - integer_part;", '        return number - (int)number;', '        return
    number - (int)number;', "        // Get int part of the number\n        int truncated\
    \ = (int)number;\n        // Return float part of the number\n        return number\
    \ - truncated;", '        return (number - (int)number);', '        return number
    - (int)number;']
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_15_string_sequence
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        string ret = \"\";\n        for (long i = 0; i <= n; i++) {\n\
    \            ret += i + \" \";\n        }\n        return ret.Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        }\n        StringBuilder\
    \ b = new StringBuilder(n * 2);\n        for (long i = 0; i <= n; i++) {\n   \
    \         b.Append(i).Append(' ');\n        }\n        b.Length--; // Remove the\
    \ last space.\n        return b.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3bmu8n6x.cs(18,45): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        string[] strings = new string[n + 1];\n        for (long i = 0;\
    \ i <= n; i++) {\n            strings[i] = i.ToString();\n        }\n        return\
    \ string.Join(\" \", strings);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        } else {\n \
    \           return StringSequence(n - 1) + \" \" + n.ToString();\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        }\n        return\
    \ StringSequence(n - 1) + \" \" + n.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n\
    \    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        } else {\n \
    \           var sb = new StringBuilder();\n            for (long i = 0; i <= n;\
    \ i++) {\n                sb.Append(i);\n                sb.Append(' ');\n   \
    \         }\n            sb.Length--;\n            return sb.ToString();\n   \
    \     }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        return Enumerable.Range(0, (int)n + 1).Select(x => x.ToString()).Aggregate((x,\
    \ y) => x + \" \" + y);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        return string.Join(\" \", Enumerable.Range(0, (int) n + 1));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        string string_sequence = \"\";\n        for (long i = 0; i <=\
    \ n; i++) {\n            string_sequence += i + \" \";\n        }\n        return\
    \ string_sequence.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        }\n        return\
    \ StringSequence(n - 1) + \" \" + n.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n\
    \    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        return string.Join(\" \", Enumerable.Range(0, (int)n + 1));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        string s = \"\";\n        for (long i = 0; i <= n; i++) {\n  \
    \          s += $\"{i} \";\n        }\n        return s.Trim();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        StringBuilder b = new StringBuilder();\n        for (long i =\
    \ 0; i <= n; i++) {\n            b.Append(i.ToString());\n            b.Append('\
    \ ');\n        }\n        return b.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n\
    \    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <019b9795f6cf4b0b9d9aeb8d7eb41d8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <019b9795f6cf4b0b9d9aeb8d7eb41d8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        var sb = new StringBuilder();\n        for (long i = 0; i <= n;\
    \ i++) {\n            sb.Append(i);\n            sb.Append(' ');\n        }\n\
    \        return sb.ToString().Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        return string.Join(\" \", Enumerable.Range(0, (int)n + 1));\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) return \"0\";\n        StringBuilder builder = new\
    \ StringBuilder();\n        for (long i = 0; i <= n; i++) {\n            builder.Append(i);\n\
    \            builder.Append(\" \");\n        }\n        return builder.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f870eb4bb914e74b7615a2c60f19a48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f870eb4bb914e74b7615a2c60f19a48>:0 \n"
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        string res = \"\";\n        for (long i = 0; i <= n; i++) {\n\
    \            res += \" \" + i;\n        }\n        return res.Substring(1);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) return \"0\";\n        var ans = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            ans.Append(i + \" \");\n\
    \        }\n        return ans.ToString().Trim();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n\
    \    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i =\
    \ 0; i <= n; i++) {\n            sb.Append(i);\n            sb.Append(' ');\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cb5a49c1c54d7aaa2b64da6c24290c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0cb5a49c1c54d7aaa2b64da6c24290c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659823360
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    //\
    \ >>> string_sequence(5)\n    // '0 1 2 3 4 5'\n    public static string StringSequence(long\
    \ n) {\n        if (n == 0) {\n            return \"0\";\n        } else {\n \
    \           return StringSequence(n - 1) + \" \" + n.ToString();\n        }\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659823360

name: HumanEval_8_sum_product
language: py
prompt: "from typing import List, Tuple\n\ndef sum_product(numbers: List[int]) ->\
  \ Tuple[int, int]:\n    \"\"\" For a given list of integers, return a tuple consisting\
  \ of a sum and a product of all the integers in a list.\n    Empty sum should be\
  \ equal to 0 and empty product should be equal to 1.\n            \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == (0, 1)\n    assert candidate([1,\
  \ 1, 1]) == (3, 1)\n    assert candidate([100, 0]) == (100, 0)\n    assert candidate([3,\
  \ 5, 7]) == (15, 105)\n    assert candidate([10]) == (10, 10)\n\ndef test_check():\n\
  \    check(sum_product)\n\ntest_check()\n"
completions: ["    pass\n\n", "    return sum(numbers), reduce(lambda x, y: x * y,\
    \ numbers, 1)\n\n", "    return (sum(numbers), functools.reduce(lambda x, y: x\
    \ * y, numbers, 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_numbers = 0\n    product_numbers = 1\n    for number in numbers:\n    \
    \    sum_numbers += number\n        product_numbers *= number\n    return sum_numbers,\
    \ product_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_ = 0\n\
    \    product = 1\n    for number in numbers:\n        sum_ += number\n       \
    \ product *= number\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4,\
    \ 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n    for i in\
    \ numbers:\n        sum += i\n        product *= i\n    return (sum, product)\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\n", "    sum_ = 0\n    product = 1\n\
    \    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\n", "    sum_ = 0\n    product = 1\n    for number\
    \ in numbers:\n        sum_ += number\n        product *= number\n    return sum_,\
    \ product\n", "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number\
    \ in numbers:\n        sum_of_numbers += number\n        product_of_numbers *=\
    \ number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    return (sum(numbers), reduce(lambda\
    \ x, y: x * y, numbers, 1))\n", "    sum_ = 0\n    product = 1\n    for i in numbers:\n\
    \        sum_ += i\n        product *= i\n    return sum_, product\n", "    sum\
    \ = 0\n    product = 1\n    for i in numbers:\n        sum += i\n        product\
    \ *= i\n    return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))\nprint(sum_product([2]))\n", "    sum_numbers = 0\n   \
    \ product_numbers = 1\n    for number in numbers:\n        sum_numbers += number\n\
    \        product_numbers *= number\n    return sum_numbers, product_numbers\n\n",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum_numbers\
    \ = 0\n        product_numbers = 1\n        for i in numbers:\n            sum_numbers\
    \ += i\n            product_numbers *= i\n        return (sum_numbers, product_numbers)\n",
  "    return sum(numbers), reduce(lambda x, y: x * y, numbers, 1)\n\n", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum = 0\n\
    \        product = 1\n        for i in numbers:\n            sum += i\n      \
    \      product *= i\n        return (sum, product)\n", "    sum_ = 0\n    product\
    \ = 1\n    for number in numbers:\n        sum_ += number\n        product *=\
    \ number\n    return sum_, product\n\n", "    sum_ = 0\n    product = 1\n    for\
    \ number in numbers:\n        sum_ += number\n        product *= number\n    return\
    \ sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    if not numbers:\n        return (0, 1)\n    else:\n        return (sum(numbers),\
    \ reduce(lambda x, y: x * y, numbers))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))\nprint(sum_product([2, 2, 2, 2, 2, 2]))", "    if len(numbers)\
    \ == 0:\n        return (0, 1)\n    else:\n        sum_ = 0\n        product =\
    \ 1\n        for i in numbers:\n            sum_ += i\n            product *=\
    \ i\n        return (sum_, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))", "    sum_ = 0\n    product = 1\n    for i in numbers:\n\
    \        sum_ += i\n        product *= i\n    return sum_, product\n", "    sum_numbers\
    \ = 0\n    product_numbers = 1\n    for number in numbers:\n        sum_numbers\
    \ += number\n        product_numbers *= number\n    return sum_numbers, product_numbers\n",
  "    sum = 0\n    product = 1\n    for number in numbers:\n        sum += number\n\
    \        product *= number\n    return sum, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))", "    sum_numbers = 0\n    product_numbers = 1\n    for number\
    \ in numbers:\n        sum_numbers += number\n        product_numbers *= number\n\
    \    return sum_numbers, product_numbers\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n    for i in numbers:\n\
    \        sum += i\n        product *= i\n    return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))", "    sum = 0\n    product = 1\n    for\
    \ i in numbers:\n        sum += i\n        product *= i\n    return (sum, product)\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ =\
    \ 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n   \
    \     product *= number\n    return sum_, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))", "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n\
    \        sum = 0\n        product = 1\n        for i in numbers:\n           \
    \ sum += i\n            product *= i\n        return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_numbers = 0\n    product_numbers\
    \ = 1\n    for number in numbers:\n        sum_numbers += number\n        product_numbers\
    \ *= number\n    return sum_numbers, product_numbers\n\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for number in numbers:\n        sum += number\n        product *= number\n\
    \    return sum, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum = 0\n\
    \        product = 1\n        for number in numbers:\n            sum += number\n\
    \            product *= number\n        return (sum, product)\n", "    if len(numbers)\
    \ == 0:\n        return (0, 1)\n    else:\n        sum = 0\n        product =\
    \ 1\n        for i in numbers:\n            sum += i\n            product *= i\n\
    \        return (sum, product)\n\n", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n", "    sum = 0\n\
    \    product = 1\n    for i in numbers:\n        sum += i\n        product *=\
    \ i\n    return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", " \
    \   sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nassert sum_product([1,\
    \ 2, 3, 4, 5, 6]) == (21, 720)\nassert sum_product([]) == (0, 1)\nassert sum_product([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]) == (55, 3628800)\nassert sum_product([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == (210, 2432902008176640000)\n\
    assert sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]) == (465, 8841761993739701954543616000000)\n\
    assert sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\
    \ 37, 38, 39, 40]) == (820, 263130836933693530167218012160000000)\nassert sum_product([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50]) == (1275, 30414093201713378043612608166064768844377641568960512000000000000)\n\
    assert sum_product([1, 2, 3, 4, 5, 6, 7, 8,", "    sum_ = 0\n    product = 1\n\
    \    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n", "    return (sum(numbers), functools.reduce(lambda\
    \ x, y: x * y, numbers, 1))\n", "    return (sum(numbers), functools.reduce(lambda\
    \ x, y: x * y, numbers, 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\n",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for num in numbers:\n        sum_ += num\n        product *= num\n    return\
    \ (sum_, product)\n", "    sum_ = 0\n    product = 1\n    for number in numbers:\n\
    \        sum_ += number\n        product *= number\n    return sum_, product\n",
  "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))", "    sum_ = 0\n    product = 1\n    for number in numbers:\n\
    \        sum_ += number\n        product *= number\n    return sum_, product\n",
  "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n     \
    \   product *= i\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n    for number\
    \ in numbers:\n        sum_ += number\n        product *= number\n    return sum_,\
    \ product\n\nassert sum_product([1, 2, 3, 4, 5, 6]) == (21, 720)\nassert sum_product([])\
    \ == (0, 1)\nassert sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == (55, 3628800)\n\
    assert sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20]) == (210, 2432902008176640000)", "    sum = 0\n    product = 1\n\
    \    for number in numbers:\n        sum += number\n        product *= number\n\
    \    return sum, product\n", "    sum_ = 0\n    product = 1\n    for number in\
    \ numbers:\n        sum_ += number\n        product *= number\n    return sum_,\
    \ product\n", "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n \
    \       sum = 0\n        product = 1\n        for i in numbers:\n            sum\
    \ += i\n            product *= i\n        return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for i in numbers:\n        sum_ += i\n        product *= i\n    return sum_,\
    \ product\n", "    pass\n", "    return sum(numbers), reduce(lambda x, y: x *\
    \ y, numbers, 1)\n\n", "    return (sum(numbers), reduce(lambda x, y: x * y, numbers,\
    \ 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "  \
    \  sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for i in numbers:\n        sum_ += i\n        product *= i\n    return sum_,\
    \ product\n", "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n \
    \       sum_numbers = 0\n        product_numbers = 1\n        for number in numbers:\n\
    \            sum_numbers += number\n            product_numbers *= number\n  \
    \      return (sum_numbers, product_numbers)\n\nprint(sum_product([1, 2, 3, 4,\
    \ 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for num in numbers:\n        sum += num\n        product *= num\n    return\
    \ (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum = 0\n\
    \        product = 1\n        for num in numbers:\n            sum += num\n  \
    \          product *= num\n        return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for i in numbers:\n        sum += i\n        product *= i\n    return (sum,\
    \ product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))", "    sum = 0\n    product = 1\n    for i in numbers:\n  \
    \      sum += i\n        product *= i\n    return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\n", "    return (sum(numbers), product(numbers))\n",
  "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n", "    return (sum(numbers), reduce(lambda\
    \ x, y: x * y, numbers, 1))\n", "    if len(numbers) == 0:\n        return (0,\
    \ 1)\n    else:\n        sum = 0\n        product = 1\n        for i in numbers:\n\
    \            sum += i\n            product *= i\n        return (sum, product)\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ =\
    \ 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n   \
    \     product *= number\n    return sum_, product\n", "    return sum(numbers),\
    \ reduce(lambda x, y: x * y, numbers, 1)\n", "    if len(numbers) == 0:\n    \
    \    return (0, 1)\n    else:\n        return (sum(numbers), reduce(lambda x,\
    \ y: x * y, numbers))\n", "    sum_of_numbers = 0\n    product_of_numbers = 1\n\
    \    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\n", "    sum = 0\n\
    \    product = 1\n    for number in numbers:\n        sum += number\n        product\
    \ *= number\n    return sum, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum = 0\n\
    \        product = 1\n        for i in numbers:\n            sum += i\n      \
    \      product *= i\n        return (sum, product)\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\n", "    sum_ = 0\n\
    \    product = 1\n    for number in numbers:\n        sum_ += number\n       \
    \ product *= number\n    return sum_, product\n", "    sum_ = 0\n    product =\
    \ 1\n    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\n\
    print(sum_product([2, 2, 2, 2, 2]))", "    sum_ = 0\n    product = 1\n    for\
    \ number in numbers:\n        sum_ += number\n        product *= number\n    return\
    \ sum_, product\n", "    sum_ = 0\n    product = 1\n    for i in numbers:\n  \
    \      sum_ += i\n        product *= i\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))", "    sum = 0\n    product = 1\n    for\
    \ number in numbers:\n        sum += number\n        product *= number\n    return\
    \ sum, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    if len(numbers) == 0:\n    \
    \    return (0, 1)\n    else:\n        sum = 0\n        product = 1\n        for\
    \ number in numbers:\n            sum += number\n            product *= number\n\
    \        return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", " \
    \   sum = 0\n    product = 1\n    for number in numbers:\n        sum += number\n\
    \        product *= number\n    return sum, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n   \
    \ for i in numbers:\n        sum_ += i\n        product *= i\n    return sum_,\
    \ product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_ = 0\n    product\
    \ = 1\n    for number in numbers:\n        sum_ += number\n        product *=\
    \ number\n    return sum_, product\n", "    sum_ = 0\n    product = 1\n    for\
    \ number in numbers:\n        sum_ += number\n        product *= number\n    return\
    \ sum_, product\n", "    sum_ = 0\n    product = 1\n    for i in numbers:\n  \
    \      sum_ += i\n        product *= i\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for i in numbers:\n        sum += i\n        product *= i\n    return (sum,\
    \ product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\n\
    print(sum_product([2]))", "    sum_ = 0\n    product = 1\n    for i in numbers:\n\
    \        sum_ += i\n        product *= i\n    return sum_, product\n", "    sum_\
    \ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n \
    \       product *= number\n    return sum_, product\n", "    sum_ = 0\n    product\
    \ = 1\n    for i in numbers:\n        sum_ += i\n        product *= i\n    return\
    \ sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    if not numbers:\n\
    \        return (0, 1)\n    else:\n        sum_numbers = sum(numbers)\n      \
    \  product_numbers = 1\n        for number in numbers:\n            product_numbers\
    \ *= number\n        return (sum_numbers, product_numbers)\n", "    sum_ = 0\n\
    \    product = 1\n    for number in numbers:\n        sum_ += number\n       \
    \ product *= number\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4,\
    \ 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n    for i in\
    \ numbers:\n        sum += i\n        product *= i\n    return (sum, product)\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ =\
    \ 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n        product\
    \ *= i\n    return sum_, product\n", "    sum_ = 0\n    product = 1\n    for number\
    \ in numbers:\n        sum_ += number\n        product *= number\n    return sum_,\
    \ product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n     \
    \   product *= i\n    return sum_, product\n", "    if len(numbers) == 0:\n  \
    \      return (0, 1)\n    else:\n        sum = 0\n        product = 1\n      \
    \  for i in numbers:\n            sum += i\n            product *= i\n       \
    \ return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_numbers = 0\n    product_numbers = 1\n    for number in numbers:\n    \
    \    sum_numbers += number\n        product_numbers *= number\n    return sum_numbers,\
    \ product_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n        sum = 0\n\
    \        product = 1\n        for i in numbers:\n            sum += i\n      \
    \      product *= i\n        return (sum, product)\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n   \
    \ for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))",
  "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n     \
    \   product *= i\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    return (sum(numbers), reduce(lambda x, y:\
    \ x * y, numbers, 1))\n", "    return (sum(numbers), reduce(lambda x, y: x * y,\
    \ numbers, 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\n", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\n\
    print(sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))", "    sum\
    \ = 0\n    product = 1\n    for number in numbers:\n        sum += number\n  \
    \      product *= number\n    return sum, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))", "    sum_ = 0\n    product = 1\n    for number in numbers:\n\
    \        sum_ += number\n        product *= number\n    return sum_, product\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]))", "    sum_numbers = 0\n    product_numbers =\
    \ 1\n    for number in numbers:\n        sum_numbers += number\n        product_numbers\
    \ *= number\n    return sum_numbers, product_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([2, 2, 2, 2, 2,\
    \ 2]))", "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_ +=\
    \ i\n        product *= i\n    return sum_, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n   \
    \ for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_\
    \ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n        product\
    \ *= i\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))", "    sum_numbers = 0\n    product_numbers = 1\n    for number\
    \ in numbers:\n        sum_numbers += number\n        product_numbers *= number\n\
    \    return sum_numbers, product_numbers\n\n", "    return (sum(numbers), reduce(lambda\
    \ x, y: x * y, numbers, 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    if len(numbers) == 0:\n    \
    \    return (0, 1)\n    else:\n        return (sum(numbers), product(numbers))\n",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_numbers = 0\n    product_numbers\
    \ = 1\n    for number in numbers:\n        sum_numbers += number\n        product_numbers\
    \ *= number\n    return sum_numbers, product_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\n", "    sum_ = 0\n\
    \    product = 1\n    for number in numbers:\n        sum_ += number\n       \
    \ product *= number\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4,\
    \ 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for i in numbers:\n        sum += i\n        product *= i\n    return (sum,\
    \ product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))",
  "    sum = 0\n    product = 1\n    for i in numbers:\n        sum += i\n       \
    \ product *= i\n    return (sum, product)\n", "    pass\n", "    sum = 0\n   \
    \ product = 1\n    for i in numbers:\n        sum += i\n        product *= i\n\
    \    return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6])) # (21, 720)\n\
    print(sum_product([])) # (0, 1)\nprint(sum_product([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12])) # (78, 6227020800)\n", "    sum_numbers = 0\n    product_numbers\
    \ = 1\n    for number in numbers:\n        sum_numbers += number\n        product_numbers\
    \ *= number\n    return sum_numbers, product_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n", "    sum_ = 0\n\
    \    product = 1\n    for num in numbers:\n        sum_ += num\n        product\
    \ *= num\n    return (sum_, product)\n", "    sum_ = 0\n    product = 1\n    for\
    \ number in numbers:\n        sum_ += number\n        product *= number\n    return\
    \ sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    pass\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([2, 2, 2, 2, 2,\
    \ 2]))\n", "    if len(numbers) == 0:\n        return (0, 1)\n    else:\n    \
    \    sum_ = sum(numbers)\n        product = 1\n        for number in numbers:\n\
    \            product *= number\n        return (sum_, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    return sum(numbers), functools.reduce(lambda\
    \ x, y: x * y, numbers, 1)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\n", "    sum_ = 0\n   \
    \ product = 1\n    for num in numbers:\n        sum_ += num\n        product *=\
    \ num\n    return (sum_, product)\n", "    return sum(numbers), functools.reduce(lambda\
    \ x, y: x * y, numbers, 1)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n", "    sum_ = 0\n    product\
    \ = 1\n    for number in numbers:\n        sum_ += number\n        product *=\
    \ number\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))", "    sum_numbers = 0\n    product_numbers = 1\n    for\
    \ number in numbers:\n        sum_numbers += number\n        product_numbers *=\
    \ number\n    return sum_numbers, product_numbers\n\n", "    if len(numbers) ==\
    \ 0:\n        return (0, 1)\n    else:\n        sum = 0\n        product = 1\n\
    \        for i in numbers:\n            sum += i\n            product *= i\n \
    \       return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n", "    sum_ = 0\n    product\
    \ = 1\n    for i in numbers:\n        sum_ += i\n        product *= i\n    return\
    \ sum_, product\n", "    sum_ = 0\n    product = 1\n    for i in numbers:\n  \
    \      sum_ += i\n        product *= i\n    return sum_, product\n\n", "    sum_numbers\
    \ = 0\n    product_numbers = 1\n    for number in numbers:\n        sum_numbers\
    \ += number\n        product_numbers *= number\n    return sum_numbers, product_numbers\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    if len(numbers)\
    \ == 0:\n        return (0, 1)\n    else:\n        return (sum(numbers), reduce(lambda\
    \ x, y: x * y, numbers))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\n", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    if len(numbers)\
    \ == 0:\n        return (0, 1)\n    else:\n        sum = 0\n        product =\
    \ 1\n        for i in numbers:\n            sum += i\n            product *= i\n\
    \        return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n", "    sum_of_numbers =\
    \ 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_ = 0\n\
    \    product = 1\n    for num in numbers:\n        sum_ += num\n        product\
    \ *= num\n    return (sum_, product)\n", "    sum_ = 0\n    product = 1\n    for\
    \ i in numbers:\n        sum_ += i\n        product *= i\n    return sum_, product\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ =\
    \ 0\n    product = 1\n    for num in numbers:\n        sum_ += num\n        product\
    \ *= num\n    return (sum_, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\n\
    print(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers = 1\n\
    \    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for i in numbers:\n        sum_ += i\n        product *= i\n    return sum_,\
    \ product\n", "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_\
    \ += i\n        product *= i\n    return sum_, product\n\n", "    sum_ = 0\n \
    \   product = 1\n    for number in numbers:\n        sum_ += number\n        product\
    \ *= number\n    return sum_, product\n", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    if len(numbers) == 0:\n    \
    \    return (0, 1)\n    else:\n        return (sum(numbers), reduce(lambda x,\
    \ y: x * y, numbers))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_ =\
    \ 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n   \
    \     product *= number\n    return sum_, product\n", "    sum_ = 0\n    product\
    \ = 1\n    for number in numbers:\n        sum_ += number\n        product *=\
    \ number\n    return sum_, product\n", "    sum_ = 0\n    product = 1\n    for\
    \ i in numbers:\n        sum_ += i\n        product *= i\n    return sum_, product\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([2,\
    \ 2, 2, 2, 2]))", "    sum_numbers = 0\n    product_numbers = 1\n    for number\
    \ in numbers:\n        sum_numbers += number\n        product_numbers *= number\n\
    \    return sum_numbers, product_numbers\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n    for i in\
    \ numbers:\n        sum_ += i\n        product *= i\n    return sum_, product\n\
    \n", "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))",
  "    sum_ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n     \
    \   product *= i\n    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n    for number\
    \ in numbers:\n        sum_ += number\n        product *= number\n    return sum_,\
    \ product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    if len(numbers) ==\
    \ 0:\n        return (0, 1)\n    else:\n        sum = 0\n        product = 1\n\
    \        for i in numbers:\n            sum += i\n            product *= i\n \
    \       return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum_of_numbers = 0\n    product_of_numbers = 1\n    for number in numbers:\n\
    \        sum_of_numbers += number\n        product_of_numbers *= number\n    return\
    \ sum_of_numbers, product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))",
  "    pass\n", "    sum = 0\n    product = 1\n    for i in numbers:\n        sum\
    \ += i\n        product *= i\n    return (sum, product)\n", "    if not numbers:\n\
    \        return (0, 1)\n    else:\n        return (sum(numbers), product(numbers))\n",
  "    return sum(numbers), reduce(lambda x, y: x * y, numbers, 1)\n", "    return\
    \ (sum(numbers), reduce(lambda x, y: x * y, numbers, 1))\n", "    sum_of_numbers\
    \ = 0\n    product_of_numbers = 1\n    for number in numbers:\n        sum_of_numbers\
    \ += number\n        product_of_numbers *= number\n    return sum_of_numbers,\
    \ product_of_numbers\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    if len(numbers)\
    \ == 0:\n        return (0, 1)\n    else:\n        sum = 0\n        product =\
    \ 1\n        for number in numbers:\n            sum += number\n            product\
    \ *= number\n        return (sum, product)\n\nprint(sum_product([1, 2, 3, 4, 5,\
    \ 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\n", "    return (sum(numbers), functools.reduce(lambda x, y:\
    \ x * y, numbers, 1))\n", "    sum = 0\n    product = 1\n    for i in numbers:\n\
    \        sum += i\n        product *= i\n    return (sum, product)\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_ = 0\n    product = 1\n\
    \    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    return\
    \ (sum(numbers), reduce(lambda x, y: x * y, numbers, 1))\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum = 0\n    product = 1\n \
    \   for number in numbers:\n        sum += number\n        product *= number\n\
    \    return sum, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_\
    \ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n \
    \       product *= number\n    return sum_, product\n\nprint(sum_product([1, 2,\
    \ 3, 4, 5, 6]))\nprint(sum_product([]))\nprint(sum_product([2, 2, 2, 2, 2]))",
  "    sum_ = 0\n    product = 1\n    for number in numbers:\n        sum_ += number\n\
    \        product *= number\n    return sum_, product\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\n", "    sum_ = 0\n\
    \    product = 1\n    for i in numbers:\n        sum_ += i\n        product *=\
    \ i\n    return sum_, product\n", "    sum_of_numbers = 0\n    product_of_numbers\
    \ = 1\n    for number in numbers:\n        sum_of_numbers += number\n        product_of_numbers\
    \ *= number\n    return sum_of_numbers, product_of_numbers\n\nprint(sum_product([1,\
    \ 2, 3, 4, 5, 6]))\nprint(sum_product([]))", "    return (sum(numbers), reduce(lambda\
    \ x, y: x * y, numbers, 1))\n", "    return (sum(numbers), reduce(lambda x, y:\
    \ x * y, numbers, 1))\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))",
  "    sum = 0\n    product = 1\n    for i in numbers:\n        sum += i\n       \
    \ product *= i\n    return (sum, product)\n", "    sum_ = 0\n    product = 1\n\
    \    for number in numbers:\n        sum_ += number\n        product *= number\n\
    \    return sum_, product\n\nprint(sum_product([1, 2, 3, 4, 5, 6]))", "    sum_\
    \ = 0\n    product = 1\n    for i in numbers:\n        sum_ += i\n        product\
    \ *= i\n    return sum_, product\n", "    sum = 0\n    product = 1\n    for i\
    \ in numbers:\n        sum += i\n        product *= i\n    return (sum, product)\n\
    \nprint(sum_product([1, 2, 3, 4, 5, 6]))\nprint(sum_product([]))"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

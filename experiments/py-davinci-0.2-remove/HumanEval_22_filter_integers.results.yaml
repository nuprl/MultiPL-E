language: py
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) ==\
    \ [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10, \"d\", \"e\", \"f\"]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10, \"d\", \"e\", \"f\", 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20]))\nprint(filter_integers([1, 2, 3, \"a\", \"\
    b\", 4, 5, \"c\", 6, 7, 8, 9, 10, \"d\", \"e\", \"f\", 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
    23, 24, 25, 26, 27, 28, 29, 30]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [i for i in values if isinstance(i, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 1
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 'a',\
    \ 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f']))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20]))\nprint(filter_integers([1, 2, 'a', 'b', 'c', 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30]))\nprint(filter_integers([1, 2, 'a', 'b', 'c',\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40]))\nprint(filter_integers([1, 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 'd', 'e', 'f', 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp0pa16oxp.py\", line 14\n    print(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47\n                       \
    \   ^\nSyntaxError: '[' was never closed\n"
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 0.0, True, 2, 3, 'b']))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, True, 2, 3]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 'a',\
    \ 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f']))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20]))\nprint(filter_integers([1, 2, 'a', 'b', 'c', 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30]))\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n   \
    \ assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
    23, 24, 25, 26, 27, 28, 29, 30]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [i for i in values if isinstance(i, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 'd', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']))\nprint(filter_integers([]))\n\
    print(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 'd', 6, 7, 8, 9, 10, 'e',\
    \ 'f', 'g', 'h', 'i', 'j']))\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n   \
    \ assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3]))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 'aasf', '1', '123', 123]))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 123]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10.0]))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, '10']))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, '10.0']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 'd', 'e', 'f']))\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 0.0, True, 2, 3, 'b']))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, True, 2, 3]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c']))\nprint(filter_integers([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', True, False]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', True, False, [], {}, ()]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', True, False, [], {}, (), None]))\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', True, False,\
    \ [], {}, (), None, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]))\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, True, False]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, True, False]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, True, False]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, True, False]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 'a', 'b']))\ndef check(candidate):\n \
    \   assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e']))\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
    23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
    63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 'd', 'e', 'f']))\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3]))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]))\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 'd', 'e', 'f']))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 'd', 'e', 'f']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3]

    '
  timestamp: 1659976898
- exit_code: 1
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 'd', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']))\nprint(filter_integers(['a',\
    \ 'b', 'c', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c']))\nprint(filter_integers(['a', 'b', 'c',\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f']))\nprint(filter_integers(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'g', 'h', 'i', 'j']))\n\
    print(filter_integers(['a', 'b', 'c', 'd', 'e', 'f', 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z']))\nprint(filter_integers(['a', 'b', 'c', 'd', 'e',\
    \ 'f', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'g',\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) ==\
    \ [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpybedw00b.py\", line 17\n    print(filter_integers(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'g',\n             \
    \             ^\nSyntaxError: '[' was never closed\n"
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 'a', 0.0, True, 2, 3, 'b']))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, True, 2, 3]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 0, 15]))\nprint(filter_integers([1, 2, 'a', 'b', 'c', 'd']))\n\
    print(filter_integers(['a', 'b', 'c']))\nprint(filter_integers([0, 1.0, 2.5, 3,\
    \ 1, 2, 3]))\nprint(filter_integers([]))\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n   \
    \ assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 0, 15]

    [1, 2]

    []

    [0, 3, 1, 2, 3]

    []

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10, \"d\", \"e\", \"f\"]))\nprint(filter_integers([1,\
    \ 2, 3, \"a\", \"b\", 4, 5, \"c\", 6, 7, 8, 9, 10, \"d\", \"e\", \"f\", 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20]))\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n   \
    \ assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 'a',\
    \ 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c']))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [i for i in values if isinstance(i, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return list(filter(lambda x: isinstance(x, int), values))\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10.0]))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, '10']))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, '10.0']))\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, '10.0', 10]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 1
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 'd', 'e', 'f']))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 'd', 'e', 'f']))\n\
    print(filter_integers(['a', 'b', 'c', 1, 2, 3, 'd', 'e', 'f', 4, 5, 6, 7, 8, 9,\
    \ 10]))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c',\
    \ 'd', 'e', 'f']))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 'd', 'e', 'f',\
    \ 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b', 'c', 1, 2, 3, 'd',\
    \ 'e', 'f', 4, 5, 6, 7, 8, 9, 10, 'g', 'h', 'i']))\nprint(filter_integers(['a',\
    \ 'b', 'c', 1, 2, 3, 'd', 'e', 'f', 4, 5, 6, 7, 8, 9, 10, 'g', 'h', 'i', 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20]))\nprint(filter_integers(['a', 'b', 'c', 1,\
    \ 2, 3, 'd', 'e', 'f', 4, 5, 6, 7, 8, 9, 10, 'g', 'h', 'i', 11\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp7psrmjbn.py\", line 18\n    print(filter_integers(['a',\
    \ 'b', 'c', 1, 2, 3, 'd', 'e', 'f', 4, 5, 6, 7, 8, 9, 10, 'g', 'h', 'i', 11\n\
    \                          ^\nSyntaxError: '[' was never closed\n"
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1, 2, 'a',\
    \ 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f']))\nprint(filter_integers([1,\
    \ 2, 'a', 'b', 'c', 3, 4, 5, 6, 7, 8, 9, 10, 'd', 'e', 'f', 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20]))\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [i for i in values if isinstance(i, int)]\n\n\
    print(filter_integers([1, 2, 3, 'a', 'b', 4]))\nprint(filter_integers([1, 2, 3,\
    \ 'a', 'b', 4, 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 'c', 5]))\n\
    print(filter_integers([1, 2, 3, 'a', 'b', 4, 'c', 5, 6]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    [1, 2, 3, 4]

    [1, 2, 3, 4, 5]

    [1, 2, 3, 4, 5, 6]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 'a', 2, 'b', 3, 'c', 4, 'd', 5, 'e']))\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [v for v in values if isinstance(v, int)]\n\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 'd', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a',\
    \ 'b', 'c']))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10.1]))\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10]))\nprint(filter_integers(['a', 'b',\
    \ 'c']))\nprint(filter_integers([1, 2, 3, 'a', 'b', 4, 5, 'c', 6, 7, 8, 9, 10,\
    \ 'd', 'e', 'f']))\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([4, {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3,\
    \ 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    []

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [i for i in values if isinstance(i, int)]\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [x for x in values if isinstance(x, int)]\n\n\
    print(filter_integers([1, 2, 3, 'a', 'b', 4]))\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) ==\
    \ [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10.0]))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, '10']))\nprint(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, '10', 11]))\n\
    print(filter_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, '10', 11.0]))\nprint(filter_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, '10', 11.0, '12']))\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd']) ==\
    \ [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n\
    \    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9, 11]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    [1, 2, 3, 4, 5, 6, 7, 8, 9]

    '
  timestamp: 1659976898
- exit_code: 0
  program: "from typing import List, Any\n\ndef filter_integers(values: List[Any])\
    \ -> List[int]:\n    \"\"\" Filter given list of any python values only for integers\n\
    \            \"\"\"\n    return [value for value in values if isinstance(value,\
    \ int)]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([4,\
    \ {  }, [], 23.2, 9, 'adasd']) == [4, 9]\n    assert candidate([3, 'c', 3, 3,\
    \ 'a', 'b']) == [3, 3, 3]\n\ndef test_check():\n    check(filter_integers)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976898

name: HumanEval_16_count_distinct_characters
language: py
results:
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    # TODO: implement this function\n    # Hint: use\
    \ a set\n    pass\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abcde') == 5\n    assert candidate('abcdecadeCADE') ==\
    \ 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry jERRY\
    \ JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf76iqsxe.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpf76iqsxe.py\", line 17,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpf76iqsxe.py\"\
    , line 10, in check\n    assert candidate('') == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def count_distinct_characters(string: str) -> int:\n    \"\"\" Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

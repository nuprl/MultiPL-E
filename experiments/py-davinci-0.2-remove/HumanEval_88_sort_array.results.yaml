name: HumanEval_88_sort_array
language: py
results:
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if array == []:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkhdxmfqt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpkhdxmfqt.py\", line 31,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpkhdxmfqt.py\", line 23,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpkhdxmfqt.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbvooqhah.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbvooqhah.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbvooqhah.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbvooqhah.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2ljrqips.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2ljrqips.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2ljrqips.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2ljrqips.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvp0ok6jd.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvp0ok6jd.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvp0ok6jd.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvp0ok6jd.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsyhyilte.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpsyhyilte.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpsyhyilte.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpsyhyilte.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprcibqiof.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmprcibqiof.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmprcibqiof.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmprcibqiof.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # if the sum of the first and last index is odd\n    if\
    \ sum(array[0], array[-1]) % 2 != 0:\n        # sort the array in ascending order\n\
    \        array.sort()\n    # if the sum of the first and last index is even\n\
    \    else:\n        # sort the array in descending order\n        array.sort(reverse=True)\n\
    \    # return the sorted array\n    return array\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa7ndtfy2.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpa7ndtfy2.py\", line 34,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa7ndtfy2.py\", line 25,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa7ndtfy2.py\", line\
    \ 15, in sort_array\n    if sum(array[0], array[-1]) % 2 != 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk0knx3qh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpk0knx3qh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpk0knx3qh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpk0knx3qh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7smbje3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpb7smbje3.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpb7smbje3.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb7smbje3.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # if sum(array[0], array[-1]) % 2 == 0:\n    #     return\
    \ sorted(array, reverse=True)\n    # else:\n    #     return sorted(array)\n \
    \   return sorted(array, reverse=True) if sum(array[0], array[-1]) % 2 == 0 else\
    \ sorted(array)\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbis1_miu.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpbis1_miu.py\", line 29,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbis1_miu.py\", line 20,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbis1_miu.py\", line\
    \ 18, in sort_array\n    return sorted(array, reverse=True) if sum(array[0], array[-1])\
    \ % 2 == 0 else sorted(array)\nIndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe381l8vx.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe381l8vx.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpe381l8vx.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpe381l8vx.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaw9s73zb.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpaw9s73zb.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpaw9s73zb.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpaw9s73zb.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm50vr0cs.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpm50vr0cs.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpm50vr0cs.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm50vr0cs.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl8jqxei4.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpl8jqxei4.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpl8jqxei4.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl8jqxei4.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    elif len(array)\
    \ == 1:\n        return array\n    else:\n        if (array[0] + array[-1]) %\
    \ 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n   \
    \         return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbbmi7gj6.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbbmi7gj6.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbbmi7gj6.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbbmi7gj6.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6_h0h3p7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6_h0h3p7.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6_h0h3p7.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6_h0h3p7.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuhzu51ln.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpuhzu51ln.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpuhzu51ln.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpuhzu51ln.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprrlemu14.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmprrlemu14.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmprrlemu14.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmprrlemu14.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdmpjyt5l.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdmpjyt5l.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdmpjyt5l.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdmpjyt5l.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdwso92zs.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdwso92zs.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdwso92zs.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdwso92zs.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # if the sum of the first and last index is odd, sort the\
    \ array in ascending order\n    if sum(array[0], array[-1]) % 2 != 0:\n      \
    \  return sorted(array)\n    # if the sum of the first and last index is even,\
    \ sort the array in descending order\n    else:\n        return sorted(array,\
    \ reverse=True)\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfiicmh3d.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpfiicmh3d.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfiicmh3d.py\", line 21,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfiicmh3d.py\", line\
    \ 15, in sort_array\n    if sum(array[0], array[-1]) % 2 != 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9z9a5x3m.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9z9a5x3m.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9z9a5x3m.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9z9a5x3m.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    if len(array) == 2:\n        if sum(array)\
    \ % 2 == 0:\n            return array[::-1]\n        else:\n            return\
    \ array\n    else:\n        if sum(array[0], array[-1]) % 2 == 0:\n          \
    \  return array[::-1]\n        else:\n            return array\n\nprint(sort_array([1,\
    \ 2, 3, 4, 5]))\nprint(sort_array([5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3,\
    \ 4, 5, 6]))\nprint(sort_array([6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7]))\nprint(sort_array([7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8]))\nprint(sort_array([8, 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(sort_array([9, 8, 7, 6, 5, 4, 3, 2, 1]))\n\
    print(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sort_array([10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\n\
    print(sort_array([11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(sort_array([12, 11, 10, 9, 8, 7, 6,\
    \ 5, 4, 3, 2, 1]))\nprint(sort\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpngid0bcb.py\", line 45\n    print(sort\n         ^\nSyntaxError:\
    \ '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2cntr1p0.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2cntr1p0.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2cntr1p0.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2cntr1p0.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmparja0bo8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmparja0bo8.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmparja0bo8.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmparja0bo8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcdbascuh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcdbascuh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcdbascuh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcdbascuh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa_lakpkd.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpa_lakpkd.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa_lakpkd.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa_lakpkd.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if not array:\n        return []\n    if len(array) ==\
    \ 1:\n        return array\n    if sum(array[0], array[-1]) % 2 == 0:\n      \
    \  return sorted(array, reverse=True)\n    return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpquee4nmk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpquee4nmk.py\", line 31,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpquee4nmk.py\", line 24,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n \
    \ File \"/tmp/tmpquee4nmk.py\", line 18, in sort_array\n    if sum(array[0], array[-1])\
    \ % 2 == 0:\nTypeError: 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcfnca2ry.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcfnca2ry.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcfnca2ry.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcfnca2ry.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_dfmeaol.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_dfmeaol.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_dfmeaol.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_dfmeaol.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\ndef check(candidate):\n  \
    \  assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbl0718l.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmptbl0718l.py\", line 29,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptbl0718l.py\", line 20,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptbl0718l.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp45j9vvne.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp45j9vvne.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp45j9vvne.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp45j9vvne.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw9l9gvkd.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpw9l9gvkd.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpw9l9gvkd.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw9l9gvkd.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppc8fi499.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmppc8fi499.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmppc8fi499.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmppc8fi499.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpumnuy1nn.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpumnuy1nn.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpumnuy1nn.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpumnuy1nn.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyan6svdo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpyan6svdo.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpyan6svdo.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyan6svdo.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # if the sum of the first and last index is even, sort\
    \ the array in descending order\n    if (array[0] + array[-1]) % 2 == 0:\n   \
    \     return sorted(array, reverse=True)\n    # if the sum of the first and last\
    \ index is odd, sort the array in ascending order\n    else:\n        return sorted(array)\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8pxwcb3n.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp8pxwcb3n.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8pxwcb3n.py\", line 21,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp8pxwcb3n.py\", line\
    \ 15, in sort_array\n    if (array[0] + array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ely4iw8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp3ely4iw8.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3ely4iw8.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ely4iw8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptfj6an6s.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptfj6an6s.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptfj6an6s.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptfj6an6s.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5nvuhp57.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5nvuhp57.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5nvuhp57.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5nvuhp57.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpha21kvjq.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpha21kvjq.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpha21kvjq.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpha21kvjq.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy5t84n8j.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpy5t84n8j.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpy5t84n8j.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpy5t84n8j.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx15111wi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpx15111wi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpx15111wi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpx15111wi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpohf8z_gx.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpohf8z_gx.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpohf8z_gx.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpohf8z_gx.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    else:\n   \
    \     if (array[0] + array[-1]) % 2 == 0:\n            return sorted(array, reverse=True)\n\
    \        else:\n            return sorted(array)\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9xjfhiup.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9xjfhiup.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9xjfhiup.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9xjfhiup.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # your code here\n    return array\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7xx9qs73.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp7xx9qs73.py\", line 26,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7xx9qs73.py\", line 19,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    if len(array) == 2:\n        if (array[0] +\
    \ array[-1]) % 2 == 0:\n            return [array[-1], array[0]]\n        else:\n\
    \            return array\n    else:\n        if (array[0] + array[-1]) % 2 ==\
    \ 0:\n            return [array[-1]] + sort_array(array[1:-1]) + [array[0]]\n\
    \        else:\n            return [array[0]] + sort_array(array[1:-1]) + [array[-1]]\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1k31pqpl.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1k31pqpl.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp1k31pqpl.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5kme8yim.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5kme8yim.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5kme8yim.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5kme8yim.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpumbcweku.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpumbcweku.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpumbcweku.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpumbcweku.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\ndef check(candidate):\n  \
    \  assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmperz3lx8n.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmperz3lx8n.py\", line 29,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmperz3lx8n.py\", line 20,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmperz3lx8n.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwiii9lo9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpwiii9lo9.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpwiii9lo9.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwiii9lo9.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps_3ummq8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmps_3ummq8.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmps_3ummq8.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmps_3ummq8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if array == []:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsxtb2pjr.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpsxtb2pjr.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpsxtb2pjr.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpsxtb2pjr.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc41kalqf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpc41kalqf.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpc41kalqf.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc41kalqf.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyha25dhy.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpyha25dhy.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpyha25dhy.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyha25dhy.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6s0vno_f.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6s0vno_f.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6s0vno_f.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6s0vno_f.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv853v2rz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpv853v2rz.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv853v2rz.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv853v2rz.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpioakiaur.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpioakiaur.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpioakiaur.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpioakiaur.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqo15p8ye.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpqo15p8ye.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpqo15p8ye.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqo15p8ye.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjne9oh1b.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjne9oh1b.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjne9oh1b.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjne9oh1b.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 != 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, reverse=True)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0kwl_m0v.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0kwl_m0v.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0kwl_m0v.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp0kwl_m0v.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 != 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpngyg62_s.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpngyg62_s.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpngyg62_s.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpngyg62_s.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcbu9hhbm.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcbu9hhbm.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcbu9hhbm.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcbu9hhbm.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ch9dd9_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5ch9dd9_.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5ch9dd9_.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5ch9dd9_.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1dyiczf3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1dyiczf3.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp1dyiczf3.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1dyiczf3.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppb779rg9.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmppb779rg9.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmppb779rg9.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmppb779rg9.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyvb9ff3u.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpyvb9ff3u.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpyvb9ff3u.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyvb9ff3u.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5mvbnswc.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5mvbnswc.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5mvbnswc.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5mvbnswc.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpizwy4rtg.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpizwy4rtg.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpizwy4rtg.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpizwy4rtg.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwsqhhre.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxwsqhhre.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxwsqhhre.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxwsqhhre.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd132ata7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpd132ata7.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpd132ata7.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpd132ata7.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5nodn8hp.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5nodn8hp.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5nodn8hp.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5nodn8hp.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ra42dq8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9ra42dq8.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9ra42dq8.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9ra42dq8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzinxb_by.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpzinxb_by.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpzinxb_by.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzinxb_by.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedqjw5eh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpedqjw5eh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpedqjw5eh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpedqjw5eh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if array == []:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwc7i_3ry.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpwc7i_3ry.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpwc7i_3ry.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpwc7i_3ry.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprfl47ix5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmprfl47ix5.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmprfl47ix5.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmprfl47ix5.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl1onpfs_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpl1onpfs_.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpl1onpfs_.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl1onpfs_.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7le_l194.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp7le_l194.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7le_l194.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7le_l194.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return array\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6g9td8dv.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6g9td8dv.py\", line 31,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6g9td8dv.py\", line 23,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmp6g9td8dv.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw076b1u8.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpw076b1u8.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpw076b1u8.py\", line 21,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw076b1u8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwr1cb9w.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbwr1cb9w.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbwr1cb9w.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbwr1cb9w.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdg746b9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvdg746b9.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvdg746b9.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvdg746b9.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmplhy8jm.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpmplhy8jm.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmplhy8jm.py\", line 21,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmplhy8jm.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcdfb92i7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcdfb92i7.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcdfb92i7.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcdfb92i7.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjeu2xr3t.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjeu2xr3t.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjeu2xr3t.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjeu2xr3t.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpemjve040.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpemjve040.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpemjve040.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpemjve040.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    elif len(array)\
    \ == 1:\n        return array\n    else:\n        if (array[0] + array[-1]) %\
    \ 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n   \
    \         return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps37x4f6u.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmps37x4f6u.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmps37x4f6u.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmps37x4f6u.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0tlh596.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpv0tlh596.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0tlh596.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv0tlh596.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpky56andn.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpky56andn.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpky56andn.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpky56andn.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6du7n0oj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6du7n0oj.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6du7n0oj.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6du7n0oj.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    odd_numbers = []\n    even_numbers = []\n    for i in array:\n\
    \        if i % 2 == 0:\n            even_numbers.append(i)\n        else:\n \
    \           odd_numbers.append(i)\n    odd_numbers.sort()\n    even_numbers.sort(reverse=True)\n\
    \    for i in range(len(array)):\n        if array[i] % 2 == 0:\n            array[i]\
    \ = even_numbers.pop(0)\n        else:\n            array[i] = odd_numbers.pop(0)\n\
    \    return array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1e54c7ge.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp1e54c7ge.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp1e54c7ge.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8vpb1_d.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmps8vpb1_d.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmps8vpb1_d.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmps8vpb1_d.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxm18dvbh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxm18dvbh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxm18dvbh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxm18dvbh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsyrnjpoh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpsyrnjpoh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpsyrnjpoh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpsyrnjpoh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi_hu0377.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpi_hu0377.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpi_hu0377.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpi_hu0377.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp901ga4bj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp901ga4bj.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp901ga4bj.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp901ga4bj.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyzmofzl.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptyzmofzl.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptyzmofzl.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptyzmofzl.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy0fmldf9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpy0fmldf9.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpy0fmldf9.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpy0fmldf9.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmevx_nw4.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmevx_nw4.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmevx_nw4.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmevx_nw4.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmqa0ast6.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmqa0ast6.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmqa0ast6.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmqa0ast6.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplposmtn7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmplposmtn7.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmplposmtn7.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmplposmtn7.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu_ztnepy.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpu_ztnepy.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpu_ztnepy.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpu_ztnepy.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptk80bzng.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptk80bzng.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptk80bzng.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptk80bzng.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7crlwbkk.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp7crlwbkk.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7crlwbkk.py\", line 21,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7crlwbkk.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgfras78l.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpgfras78l.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpgfras78l.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgfras78l.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp_jnxl9i.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpp_jnxl9i.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpp_jnxl9i.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpp_jnxl9i.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptw2rpdpj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptw2rpdpj.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptw2rpdpj.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptw2rpdpj.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv3x5hjwi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpv3x5hjwi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv3x5hjwi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv3x5hjwi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9hs2fpmi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9hs2fpmi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9hs2fpmi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9hs2fpmi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpetxj9gwz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpetxj9gwz.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpetxj9gwz.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpetxj9gwz.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbt_ljo16.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbt_ljo16.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbt_ljo16.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbt_ljo16.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # if the sum of the first and last index value is odd\n\
    \    if (array[0] + array[-1]) % 2 != 0:\n        # sort the array in ascending\
    \ order\n        array.sort()\n    # if the sum of the first and last index value\
    \ is even\n    else:\n        # sort the array in descending order\n        array.sort(reverse=True)\n\
    \    # return the sorted array\n    return array\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptn_rrhm2.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptn_rrhm2.py\", line 34,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptn_rrhm2.py\", line 25,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptn_rrhm2.py\", line\
    \ 15, in sort_array\n    if (array[0] + array[-1]) % 2 != 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptpcl82rh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptpcl82rh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmptpcl82rh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmptpcl82rh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpazs_au81.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpazs_au81.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpazs_au81.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpazs_au81.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdvfrdf6k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdvfrdf6k.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdvfrdf6k.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdvfrdf6k.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    if len(array) == 2:\n        return array[::-1]\n\
    \    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy8ua_jl_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpy8ua_jl_.py\", line 34,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpy8ua_jl_.py\", line 27,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n \
    \ File \"/tmp/tmpy8ua_jl_.py\", line 20, in sort_array\n    if sum(array[0], array[-1])\
    \ % 2 == 0:\nTypeError: 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp437ses4j.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp437ses4j.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp437ses4j.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp437ses4j.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj94tog23.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpj94tog23.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpj94tog23.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpj94tog23.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8o55b7cf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp8o55b7cf.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8o55b7cf.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp8o55b7cf.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwf65q2ha.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpwf65q2ha.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpwf65q2ha.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwf65q2ha.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    if len(array) == 2:\n        if sum(array)\
    \ % 2 == 0:\n            return [array[1], array[0]]\n        else:\n        \
    \    return array\n    if sum(array) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3wgc2xh2.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp3wgc2xh2.py\", line 37,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3wgc2xh2.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp80f96uv9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp80f96uv9.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp80f96uv9.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp80f96uv9.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa9p2gz34.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpa9p2gz34.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa9p2gz34.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa9p2gz34.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfvtd6v9s.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfvtd6v9s.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfvtd6v9s.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfvtd6v9s.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxavdd6qj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxavdd6qj.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxavdd6qj.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxavdd6qj.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0286hl4n.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0286hl4n.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0286hl4n.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp0286hl4n.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7q0h2gkx.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp7q0h2gkx.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7q0h2gkx.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7q0h2gkx.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc3maztzd.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpc3maztzd.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpc3maztzd.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc3maztzd.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp13a0l1yq.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp13a0l1yq.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp13a0l1yq.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp13a0l1yq.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # your code here\n    return []\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7je6tugf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp7je6tugf.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7je6tugf.py\", line 20,\
    \ in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm3le_0di.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpm3le_0di.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpm3le_0di.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm3le_0di.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5mtunlsi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5mtunlsi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5mtunlsi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5mtunlsi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjqbzd8g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpnjqbzd8g.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnjqbzd8g.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnjqbzd8g.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgu7pceqr.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpgu7pceqr.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpgu7pceqr.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgu7pceqr.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpacqoyfcd.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpacqoyfcd.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpacqoyfcd.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpacqoyfcd.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpugeesbtl.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpugeesbtl.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpugeesbtl.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpugeesbtl.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc1fbbb2n.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpc1fbbb2n.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpc1fbbb2n.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc1fbbb2n.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    odd_array = []\n    even_array = []\n    for i in array:\n\
    \        if i % 2 == 0:\n            even_array.append(i)\n        else:\n   \
    \         odd_array.append(i)\n    odd_array.sort()\n    even_array.sort(reverse=True)\n\
    \    for i in range(len(array)):\n        if array[i] % 2 == 0:\n            array[i]\
    \ = even_array.pop(0)\n        else:\n            array[i] = odd_array.pop(0)\n\
    \    return array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnps3ssjd.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpnps3ssjd.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnps3ssjd.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpivm7mum9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpivm7mum9.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpivm7mum9.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpivm7mum9.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbb7nik_p.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbb7nik_p.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbb7nik_p.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbb7nik_p.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdea6fgoy.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdea6fgoy.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdea6fgoy.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdea6fgoy.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomm8ligj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpomm8ligj.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpomm8ligj.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpomm8ligj.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmposl9qgsu.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmposl9qgsu.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmposl9qgsu.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmposl9qgsu.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2dku6ooi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2dku6ooi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2dku6ooi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2dku6ooi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb58v_aq0.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpb58v_aq0.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpb58v_aq0.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb58v_aq0.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvntf8o75.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvntf8o75.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvntf8o75.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvntf8o75.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9c9skbrv.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9c9skbrv.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9c9skbrv.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9c9skbrv.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    if len(array) == 2:\n        if (array[0] +\
    \ array[-1]) % 2 == 0:\n            return [array[-1], array[0]]\n        else:\n\
    \            return array\n    if (array[0] + array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw35o_zt9.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpw35o_zt9.py\", line 37,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpw35o_zt9.py\", line 32,\
    \ in check\n    assert candidate([2, 1]) == [1, 2]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    odd_array = []\n    even_array = []\n    for i in array:\n\
    \        if i % 2 == 0:\n            even_array.append(i)\n        else:\n   \
    \         odd_array.append(i)\n    odd_array.sort()\n    even_array.sort(reverse=True)\n\
    \    if len(odd_array) == 0:\n        return even_array\n    elif len(even_array)\
    \ == 0:\n        return odd_array\n    else:\n        return odd_array + even_array\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ms35i3a.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp0ms35i3a.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0ms35i3a.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcmybn_by.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcmybn_by.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcmybn_by.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcmybn_by.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpujsc95lc.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpujsc95lc.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpujsc95lc.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpujsc95lc.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return array\n    if array[0]\
    \ + array[-1] % 2 == 0:\n        array.sort(reverse=True)\n    else:\n       \
    \ array.sort()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzvj5jydd.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzvj5jydd.py\", line 32,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpzvj5jydd.py\", line 26,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5pxrypnm.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5pxrypnm.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5pxrypnm.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5pxrypnm.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ovmdzpt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1ovmdzpt.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp1ovmdzpt.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1ovmdzpt.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfawq0vs3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfawq0vs3.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfawq0vs3.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfawq0vs3.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt0oqsrp6.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpt0oqsrp6.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpt0oqsrp6.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt0oqsrp6.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmbuphk1_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmbuphk1_.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmbuphk1_.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmbuphk1_.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return array\n    else:\n\
    \        if (array[0] + array[-1]) % 2 == 0:\n            return sorted(array,\
    \ reverse=True)\n        else:\n            return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr9dkpaq6.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpr9dkpaq6.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpr9dkpaq6.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpr9dkpaq6.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3yqc4x0.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_3yqc4x0.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3yqc4x0.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_3yqc4x0.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyackmvso.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpyackmvso.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpyackmvso.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyackmvso.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwpvhniem.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpwpvhniem.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpwpvhniem.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwpvhniem.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3sbgfcn4.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp3sbgfcn4.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3sbgfcn4.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3sbgfcn4.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa1nhutw3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpa1nhutw3.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa1nhutw3.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa1nhutw3.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf043hd_8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpf043hd_8.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpf043hd_8.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpf043hd_8.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjfaf2o_a.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjfaf2o_a.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjfaf2o_a.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjfaf2o_a.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnywur7au.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpnywur7au.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnywur7au.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnywur7au.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpto8wehl1.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpto8wehl1.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpto8wehl1.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpto8wehl1.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppdj_t5q_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmppdj_t5q_.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmppdj_t5q_.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmppdj_t5q_.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return array\n    elif len(array)\
    \ == 1:\n        return array\n    else:\n        if (array[0] + array[-1]) %\
    \ 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n   \
    \         return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpls_zjiqr.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpls_zjiqr.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpls_zjiqr.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpls_zjiqr.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpffu2gds6.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpffu2gds6.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpffu2gds6.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpffu2gds6.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6dzlyzy_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6dzlyzy_.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6dzlyzy_.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6dzlyzy_.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpic2723jp.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpic2723jp.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpic2723jp.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpic2723jp.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    # return sorted(array, reverse=sum(array[0], array[-1])\
    \ % 2 == 0)\n    return sorted(array, reverse=sum(array[0], array[-1]) % 2 ==\
    \ 0)\n\nprint(sort_array([1, 2, 3, 4, 5]))\nprint(sort_array([1, 2, 3, 4, 5, 6]))\n\
    print(sort_array([1, 2, 3, 4, 5, 6, 7]))\nprint(sort_array([1, 2, 3, 4, 5, 6,\
    \ 7, 8]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\nprint(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpatmz8fz_.py\", line 31\n    print(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10\n                     ^\nSyntaxError: '[' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvswzf4ic.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvswzf4ic.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvswzf4ic.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvswzf4ic.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpax_76xqt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpax_76xqt.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpax_76xqt.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpax_76xqt.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5z6t9qd1.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5z6t9qd1.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5z6t9qd1.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5z6t9qd1.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzsynlw2.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxzsynlw2.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxzsynlw2.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxzsynlw2.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ve1w4uh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp3ve1w4uh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3ve1w4uh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ve1w4uh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp38nux1wk.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp38nux1wk.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp38nux1wk.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp38nux1wk.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return array\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjaitroyj.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpjaitroyj.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjaitroyj.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpjaitroyj.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpipja6rud.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpipja6rud.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpipja6rud.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpipja6rud.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx94f0yyy.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpx94f0yyy.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpx94f0yyy.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpx94f0yyy.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudaw0pd3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpudaw0pd3.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpudaw0pd3.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpudaw0pd3.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6qncahps.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6qncahps.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp6qncahps.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6qncahps.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w5jv6yn.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp3w5jv6yn.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3w5jv6yn.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w5jv6yn.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxjxeukvo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxjxeukvo.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxjxeukvo.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxjxeukvo.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_60sv376.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_60sv376.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_60sv376.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_60sv376.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcvjymbyf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpcvjymbyf.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcvjymbyf.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcvjymbyf.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuoq39g3b.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpuoq39g3b.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpuoq39g3b.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpuoq39g3b.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplzbho0h0.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmplzbho0h0.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmplzbho0h0.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmplzbho0h0.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if array == []:\n        return []\n    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpknki0llw.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpknki0llw.py\", line 30,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpknki0llw.py\", line 22,\
    \ in check\n    assert candidate([5]) == [5]\n  File \"/tmp/tmpknki0llw.py\",\
    \ line 16, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nTypeError:\
    \ 'int' object is not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfvmfjftv.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfvmfjftv.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfvmfjftv.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfvmfjftv.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubqv2ooi.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpubqv2ooi.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpubqv2ooi.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpubqv2ooi.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplthx6qwh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmplthx6qwh.py\", line 28,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmplthx6qwh.py\", line 19,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmplthx6qwh.py\", line\
    \ 14, in sort_array\n    if sum(array[0], array[-1]) % 2 == 0:\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception

name: HumanEval_88_sort_array
language: py
prompt: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
  \    \"\"\"\n    Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n    you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given array.\n\n    Examples:\n                    \"\"\"\
  \n"
tests: "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
  \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert\
  \ candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2,\
  \ 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32,\
  \ 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
  \    check(sort_array)\n\ntest_check()\n"
completions: ["    if array == []:\n        return []\n    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    # if the sum of the first and last index\
    \ is odd\n    if sum(array[0], array[-1]) % 2 != 0:\n        # sort the array\
    \ in ascending order\n        array.sort()\n    # if the sum of the first and\
    \ last index is even\n    else:\n        # sort the array in descending order\n\
    \        array.sort(reverse=True)\n    # return the sorted array\n    return array",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    # if sum(array[0], array[-1]) % 2 == 0:\n    #     return\
    \ sorted(array, reverse=True)\n    # else:\n    #     return sorted(array)\n \
    \   return sorted(array, reverse=True) if sum(array[0], array[-1]) % 2 == 0 else\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if len(array) == 0:\n        return\
    \ []\n    elif len(array) == 1:\n        return array\n    else:\n        if (array[0]\
    \ + array[-1]) % 2 == 0:\n            return sorted(array, reverse=True)\n   \
    \     else:\n            return sorted(array)", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    # if the sum of the first and last index is odd, sort the\
    \ array in ascending order\n    if sum(array[0], array[-1]) % 2 != 0:\n      \
    \  return sorted(array)\n    # if the sum of the first and last index is even,\
    \ sort the array in descending order\n    else:\n        return sorted(array,\
    \ reverse=True)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if len(array)\
    \ == 0:\n        return []\n    if len(array) == 1:\n        return array\n  \
    \  if len(array) == 2:\n        if sum(array) % 2 == 0:\n            return array[::-1]\n\
    \        else:\n            return array\n    else:\n        if sum(array[0],\
    \ array[-1]) % 2 == 0:\n            return array[::-1]\n        else:\n      \
    \      return array\n\nprint(sort_array([1, 2, 3, 4, 5]))\nprint(sort_array([5,\
    \ 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6]))\nprint(sort_array([6, 5,\
    \ 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7]))\nprint(sort_array([7,\
    \ 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(sort_array([8,\
    \ 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(sort_array([9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n\
    print(sort_array([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]))\nprint(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11]))\nprint(sort_array([11, 10, 9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(sort_array([12,\
    \ 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]))\nprint(sort", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if not array:\n        return []\n    if len(array) == 1:\n        return array\n\
    \    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n     \
    \   return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    # if the sum of the first and last index\
    \ is even, sort the array in descending order\n    if (array[0] + array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    # if the sum of the\
    \ first and last index is odd, sort the array in ascending order\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if len(array)\
    \ == 0:\n        return []\n    if sum(array[0], array[-1]) % 2 == 0:\n      \
    \  return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if len(array) == 0:\n        return []\n    else:\n   \
    \     if (array[0] + array[-1]) % 2 == 0:\n            return sorted(array, reverse=True)\n\
    \        else:\n            return sorted(array)", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    # your code here\n    return array", "    if len(array)\
    \ == 0:\n        return []\n    if len(array) == 1:\n        return array\n  \
    \  if len(array) == 2:\n        if (array[0] + array[-1]) % 2 == 0:\n        \
    \    return [array[-1], array[0]]\n        else:\n            return array\n \
    \   else:\n        if (array[0] + array[-1]) % 2 == 0:\n            return [array[-1]]\
    \ + sort_array(array[1:-1]) + [array[0]]\n        else:\n            return [array[0]]\
    \ + sort_array(array[1:-1]) + [array[-1]]", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if array == []:\n        return\
    \ []\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 != 0:\n        return sorted(array)\n    else:\n\
    \        return sorted(array, reverse=True)", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if len(array) == 0:\n        return []\n    if sum(array[0], array[-1]) % 2\
    \ == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if array == []:\n        return\
    \ []\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if len(array) == 0:\n        return\
    \ array\n    if sum(array[0], array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)\n\n", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)\n\n", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if len(array) == 0:\n        return []\n    elif len(array)\
    \ == 1:\n        return array\n    else:\n        if (array[0] + array[-1]) %\
    \ 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n   \
    \         return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n\
    \        return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    odd_numbers =\
    \ []\n    even_numbers = []\n    for i in array:\n        if i % 2 == 0:\n   \
    \         even_numbers.append(i)\n        else:\n            odd_numbers.append(i)\n\
    \    odd_numbers.sort()\n    even_numbers.sort(reverse=True)\n    for i in range(len(array)):\n\
    \        if array[i] % 2 == 0:\n            array[i] = even_numbers.pop(0)\n \
    \       else:\n            array[i] = odd_numbers.pop(0)\n    return array\n\n",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)\n\n", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    # if the sum of the first and last index value is odd\n    if (array[0] + array[-1])\
    \ % 2 != 0:\n        # sort the array in ascending order\n        array.sort()\n\
    \    # if the sum of the first and last index value is even\n    else:\n     \
    \   # sort the array in descending order\n        array.sort(reverse=True)\n \
    \   # return the sorted array\n    return array", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if len(array) == 0:\n        return []\n\
    \    if len(array) == 1:\n        return array\n    if len(array) == 2:\n    \
    \    return array[::-1]\n    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if len(array) == 0:\n        return []\n\
    \    if len(array) == 1:\n        return array\n    if len(array) == 2:\n    \
    \    if sum(array) % 2 == 0:\n            return [array[1], array[0]]\n      \
    \  else:\n            return array\n    if sum(array) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    # your code here\n\
    \    return []\n\n", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    odd_array = []\n    even_array\
    \ = []\n    for i in array:\n        if i % 2 == 0:\n            even_array.append(i)\n\
    \        else:\n            odd_array.append(i)\n    odd_array.sort()\n    even_array.sort(reverse=True)\n\
    \    for i in range(len(array)):\n        if array[i] % 2 == 0:\n            array[i]\
    \ = even_array.pop(0)\n        else:\n            array[i] = odd_array.pop(0)\n\
    \    return array\n\n", "    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if len(array)\
    \ == 0:\n        return []\n    if len(array) == 1:\n        return array\n  \
    \  if len(array) == 2:\n        if (array[0] + array[-1]) % 2 == 0:\n        \
    \    return [array[-1], array[0]]\n        else:\n            return array\n \
    \   if (array[0] + array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    odd_array = []\n    even_array\
    \ = []\n    for i in array:\n        if i % 2 == 0:\n            even_array.append(i)\n\
    \        else:\n            odd_array.append(i)\n    odd_array.sort()\n    even_array.sort(reverse=True)\n\
    \    if len(odd_array) == 0:\n        return even_array\n    elif len(even_array)\
    \ == 0:\n        return odd_array\n    else:\n        return odd_array + even_array\n\
    \n", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if len(array) == 0:\n        return array\n\
    \    if array[0] + array[-1] % 2 == 0:\n        array.sort(reverse=True)\n   \
    \ else:\n        array.sort()\n    return array\n", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if len(array) == 0:\n        return\
    \ array\n    else:\n        if (array[0] + array[-1]) % 2 == 0:\n            return\
    \ sorted(array, reverse=True)\n        else:\n            return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if len(array) == 0:\n        return\
    \ array\n    elif len(array) == 1:\n        return array\n    else:\n        if\
    \ (array[0] + array[-1]) % 2 == 0:\n            return sorted(array, reverse=True)\n\
    \        else:\n            return sorted(array)", "    if sum(array[0], array[-1])\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    # return sorted(array, reverse=sum(array[0], array[-1]) % 2 == 0)\n    return\
    \ sorted(array, reverse=sum(array[0], array[-1]) % 2 == 0)\n\nprint(sort_array([1,\
    \ 2, 3, 4, 5]))\nprint(sort_array([1, 2, 3, 4, 5, 6]))\nprint(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n\
    print(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\nprint(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18]))\nprint(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10", "    if\
    \ sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if len(array) == 0:\n        return\
    \ array\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if sum(array[0],\
    \ array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n\
    \        return sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n \
    \       return sorted(array, reverse=True)\n    else:\n        return sorted(array)",
  "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if array == []:\n\
    \        return []\n    if sum(array[0], array[-1]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)", "   \
    \ if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)", "    if sum(array[0], array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

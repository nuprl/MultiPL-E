name: HumanEval_53_add
language: py
results:
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\nadd(1, 2)\n\ndef check(candidate):\n \
    \   assert candidate(0, 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2,\
    \ 3) == 5\n    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\
    \ndef test_check():\n    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\nprint(add(3, 4))\nprint(add.__annotations__)\n\
    \ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  stdout: "7\n{'x': <class 'int'>, 'y': <class 'int'>, 'return': <class 'int'>}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\nprint(add(1, 2))\n\ndef check(candidate):\n\
    \    assert candidate(0, 1) == 1\n    assert candidate(1, 0) == 1\n    assert\
    \ candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n    assert candidate(7,\
    \ 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  stdout: "3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \           \"\"\"\n    return x + y\n\n\ndef check(candidate):\n    assert candidate(0,\
    \ 1) == 1\n    assert candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n\
    \    assert candidate(5, 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

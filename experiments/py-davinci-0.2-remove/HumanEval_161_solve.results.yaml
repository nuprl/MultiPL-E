language: py
name: HumanEval_161_solve
results:
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\nprint(solve(\"abc\"))\nprint(solve(\"abc123\"\
    ))\nprint(solve(\"123\"))\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq24u8fu7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpq24u8fu7.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpq24u8fu7.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: 'ABC

    321cba

    321

    '
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return \"\".join([i.lower() if i.isupper() else i.upper() for\
    \ i in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaj8k26x1.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpaj8k26x1.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaj8k26x1.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.swapcase() if c.isalpha() else c for c in s)\n\
    \n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxf36sd25.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxf36sd25.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxf36sd25.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.swapcase() for i in s])\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7xxfhr3x.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp7xxfhr3x.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp7xxfhr3x.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\nprint(solve(\"abc\"))\nprint(solve(\"abc123\"\
    ))\nprint(solve(\"abc!123\"))\nprint(solve(\"\"))\nprint(solve(\"123\"))\nprint(solve(\"\
    123!abc\"))\nprint(solve(\"123!abc!\"))\nprint(solve(\"123!abc!@\"))\nprint(solve(\"\
    123!abc!@#$\"))\nprint(solve(\"123!abc!@#$%^&*()\"))\nprint(solve(\"123!abc!@#$%^&*()_+\"\
    ))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\\:;'<>?,./\"))\nprint(solve(\"\
    123!abc!@#$%^&*()_+-=[]{}|\\\\:;'<>?,./~`\"))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\
    \\:;'<>?,./~`123\"))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\\:;'<>?,./~`123abc\"\
    ))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\\:;'<>?,./~`123abcABC\"))\nprint(solve(\"\
    123!abc!@#$%^&*()_+-=[]{}|\\\\:;'<>?,./~`123abcABC!@#\"))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\
    \\:;'<>?,./~`123abcABC!@#123\"))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\\\
    :;'<>?,./~`123abcABC!@#123ABC\"))\nprint(solve(\"123!abc!@#$%^&*()_+-=[]{}|\\\\\
    :;'<>?,./~`123abcABC!@#123ABC!@#\"))\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt19r1oce.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpt19r1oce.py\", line 45,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpt19r1oce.py\", line 38, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: 'ABC

    321cba

    321!cba


    321

    cba!321

    !cba!321

    @!cba!321

    $#@!cba!321

    )(*&^%$#@!cba!321

    +_)(*&^%$#@!cba!321

    /.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    `~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    cba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    CBAcba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    #@!CBAcba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    321#@!CBAcba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    CBA321#@!CBAcba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    #@!CBA321#@!CBAcba321`~/.,?><'';:\|}{][=-+_)(*&^%$#@!cba!321

    '
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkonahxnv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkonahxnv.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkonahxnv.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\nprint(solve(\"abc\"))\nprint(solve(\"abC\"\
    ))\nprint(solve(\"123\"))\nprint(solve(\"\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc123\"))\nprint(solve(\"123aBc\"))\nprint(solve(\"123aBc456\"))\nprint(solve(\"\
    1234567890\"))\nprint(solve(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ))\nprint(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(solve(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"))\nprint(solve(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+\"))\n\
    print(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+-=[]{}|\\\
    \\:;'<>?,./\"))\nprint(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+-=[]{}|\\\
    \\:;'<>?,./~`\"))\nprint(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+-=[]{}|\\\
    \\:;'<>?,./~` \"))\nprint(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOP\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpk016397d.py\", line 31\n    print(solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOP\n\
    \                ^\nSyntaxError: unterminated string literal (detected at line\
    \ 31)\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return \"\".join([i.lower() if i.isupper() else i.upper() for\
    \ i in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaj8k26x1.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpaj8k26x1.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaj8k26x1.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    return s.swapcase() if s.isalpha() else s[::-1]\n\
    \n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppcwktbcf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppcwktbcf.py\", line 23,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmppcwktbcf.py\", line 16, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    s = list(s)\n  \
    \  for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].swapcase()\n\
    \    return ''.join(s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuk99i274.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpuk99i274.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpuk99i274.py\", line 20, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkonahxnv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkonahxnv.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkonahxnv.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxf36sd25.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxf36sd25.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxf36sd25.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeoy4zjdt.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpeoy4zjdt.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpeoy4zjdt.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeoy4zjdt.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpeoy4zjdt.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpeoy4zjdt.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.swapcase() for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpos2gct0i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpos2gct0i.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpos2gct0i.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.swapcase() for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpos2gct0i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpos2gct0i.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpos2gct0i.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoxqdkof5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoxqdkof5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoxqdkof5.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxf36sd25.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxf36sd25.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxf36sd25.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoxqdkof5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoxqdkof5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoxqdkof5.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxf36sd25.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxf36sd25.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxf36sd25.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(i.lower() if i.isupper() else i.upper()\
    \ for i in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpew66w7od.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpew66w7od.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpew66w7od.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if len(s) == 0:\n        return s\n    else:\n  \
    \      if s.isalpha():\n            return s[::-1]\n        else:\n          \
    \  return ''.join([i.swapcase() if i.isalpha() else i for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgbk38ols.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpgbk38ols.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpgbk38ols.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(i.lower() if i.isupper() else i.upper() for i in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqe72xtg9.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpqe72xtg9.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpqe72xtg9.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(ch.lower() if ch.isupper() else ch.upper()\
    \ for ch in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv659cjp3.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpv659cjp3.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpv659cjp3.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return \"\".join(\n        [i.upper() if i.islower()\
    \ else i.lower() for i in s]\n    )\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpztvtbonj.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpztvtbonj.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpztvtbonj.py\", line 22, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.islower() or s.isupper():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj9uk9n63.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj9uk9n63.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpj9uk9n63.py\", line 16, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return \"\".join([i.lower() if i.isupper() else i.upper() for\
    \ i in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaj8k26x1.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpaj8k26x1.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaj8k26x1.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.swapcase() for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpos2gct0i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpos2gct0i.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpos2gct0i.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\nprint(solve(\"abc\"))\nprint(solve(\"123\"\
    ))\nprint(solve(\"abc123\"))\nprint(solve(\"\"))\n\ndef check(candidate):\n  \
    \  assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcvzam9pb.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpcvzam9pb.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpcvzam9pb.py\", line 23, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: 'ABC

    321

    321cba


    '
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    # if s is empty, return empty string\n    if len(s)\
    \ == 0:\n        return ''\n    # if s is not empty, reverse the string\n    else:\n\
    \        # if s is a string of letters, reverse the case of each letter\n    \
    \    if s.isalpha():\n            return s.swapcase()\n        # if s is not a\
    \ string of letters, reverse the string\n        else:\n            return s[::-1]\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8_30nfcm.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8_30nfcm.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp8_30nfcm.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(i.lower() if i.isupper() else i.upper()\
    \ for i in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpew66w7od.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpew66w7od.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpew66w7od.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoxqdkof5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoxqdkof5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoxqdkof5.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoxqdkof5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoxqdkof5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoxqdkof5.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoxqdkof5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoxqdkof5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoxqdkof5.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.swapcase() for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpos2gct0i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpos2gct0i.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpos2gct0i.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwj326knj.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpwj326knj.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpwj326knj.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11qtp6re.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp11qtp6re.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp11qtp6re.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxf36sd25.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxf36sd25.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxf36sd25.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\nprint(solve(\"abc\"))\nprint(solve(\"abc123\"\
    ))\nprint(solve(\"123\"))\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq24u8fu7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpq24u8fu7.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpq24u8fu7.py\", line 21, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: 'ABC

    321cba

    321

    '
  timestamp: 1659976793
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeoy4zjdt.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpeoy4zjdt.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpeoy4zjdt.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrznkvwq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjrznkvwq.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjrznkvwq.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return \"\".join([i.lower() if i.isupper() else i.upper() for i in s])\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0hathuq4.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp0hathuq4.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0hathuq4.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkonahxnv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkonahxnv.py\", line 25,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkonahxnv.py\", line 18, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpppi0hh5g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpppi0hh5g.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpppi0hh5g.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbwmyi_s_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbwmyi_s_.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpbwmyi_s_.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiykbq46x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiykbq46x.py\", line 27,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpiykbq46x.py\", line 20, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \                \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return ''.join([i.lower() if i.isupper() else i.upper() for i\
    \ in s])\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qxme18.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr7qxme18.py\", line 26,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpr7qxme18.py\", line 19, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1659976793

name: HumanEval_55_fib
language: py
results:
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpab_ap16g.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpab_ap16g.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpab_ap16g.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpab_ap16g.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n   \
    \     return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdg3_x3bh.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpdg3_x3bh.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpdg3_x3bh.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpdg3_x3bh.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzgduhl7.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpxzgduhl7.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpxzgduhl7.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpxzgduhl7.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0zer3kin.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp0zer3kin.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp0zer3kin.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp0zer3kin.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n   \
    \     return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n - 1)\
    \ + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n  \
    \  assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpijt48xmq.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpijt48xmq.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpijt48xmq.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpijt48xmq.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ldz_k7x.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp5ldz_k7x.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp5ldz_k7x.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp5ldz_k7x.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdt7igm4h.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpdt7igm4h.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpdt7igm4h.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpdt7igm4h.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpizu7e96q.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpizu7e96q.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpizu7e96q.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpizu7e96q.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n - 1)\
    \ + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n  \
    \  assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq05kt7p8.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpq05kt7p8.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpq05kt7p8.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpq05kt7p8.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2j5p52pp.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp2j5p52pp.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp2j5p52pp.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp2j5p52pp.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6hk9lrco.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp6hk9lrco.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp6hk9lrco.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp6hk9lrco.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprqi15a4p.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmprqi15a4p.py\", line 16,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmprqi15a4p.py\", line 9, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmprqi15a4p.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n - 1)\
    \ + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n  \
    \  assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b =\
    \ b, a + b\n    return a\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwqxo4gx.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmplwqxo4gx.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmplwqxo4gx.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmplwqxo4gx.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy4ytpzmu.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpy4ytpzmu.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpy4ytpzmu.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpy4ytpzmu.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\nprint(fib(10))\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphmpfh5nv.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmphmpfh5nv.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmphmpfh5nv.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmphmpfh5nv.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkcoq795d.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpkcoq795d.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpkcoq795d.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpkcoq795d.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu8yus1o7.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpu8yus1o7.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpu8yus1o7.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpu8yus1o7.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjh_gnosi.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpjh_gnosi.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpjh_gnosi.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpjh_gnosi.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1xb19od9.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp1xb19od9.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp1xb19od9.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp1xb19od9.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    return fib_rec(n, 0, 1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpke94skbj.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpke94skbj.py\", line 15,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpke94skbj.py\", line 8, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpke94skbj.py\", line 4, in fib\n\
    \    return fib_rec(n, 0, 1)\nNameError: name 'fib_rec' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb42wf4y8.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpb42wf4y8.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpb42wf4y8.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpb42wf4y8.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwq1w20xz.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpwq1w20xz.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpwq1w20xz.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpwq1w20xz.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7z0mwtl6.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp7z0mwtl6.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp7z0mwtl6.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp7z0mwtl6.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n - 1)\
    \ + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n  \
    \  assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp8kyzori.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpp8kyzori.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpp8kyzori.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpp8kyzori.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfv405sk4.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpfv405sk4.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpfv405sk4.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpfv405sk4.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgphu_4k5.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpgphu_4k5.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpgphu_4k5.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpgphu_4k5.py\", line 6, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4h3rhs2i.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp4h3rhs2i.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp4h3rhs2i.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp4h3rhs2i.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxb0r6fbh.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpxb0r6fbh.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpxb0r6fbh.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpxb0r6fbh.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ni_x8fo.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp7ni_x8fo.py\", line 17,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp7ni_x8fo.py\", line 10, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp7ni_x8fo.py\", line 6, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\"\
    )\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    return fib_list(n)[-1]\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwe4dornn.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpwe4dornn.py\", line 15,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpwe4dornn.py\", line 8, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpwe4dornn.py\", line 4, in fib\n\
    \    return fib_list(n)[-1]\nNameError: name 'fib_list' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n   \
    \     return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

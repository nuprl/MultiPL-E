name: HumanEval_18_how_many_times
language: py
prompt: "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find\
  \ how many times a given substring can be found in the original string. Count overlaping\
  \ cases.\n                \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('', 'x') == 0\n    assert candidate('xyxyxyx',\
  \ 'x') == 4\n    assert candidate('cacacacac', 'cac') == 4\n    assert candidate('john\
  \ doe', 'john') == 1\n\ndef test_check():\n    check(how_many_times)\n\ntest_check()\n"
completions: ["    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i +\
    \ len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return string.count(substring)\n\n", "    return len([i for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    return sum([1\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return string.count(substring)\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum([1 for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return sum([1 for i in range(len(string)\
    \ - len(substring) + 1) if string[i:i + len(substring)] == substring])\n\n", " \
    \   return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return string.count(substring)\n\n", "    return len([i for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return string.count(substring)\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return string.count(substring)\n\n", "    count = 0\n    for\
    \ i in range(len(string)):\n        if string[i:i + len(substring)] == substring:\n\
    \            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum([1 for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([m.start() for m in re.finditer(substring, string)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    start = 0\n    while True:\n        start = string.find(substring,\
    \ start) + 1\n        if start > 0:\n            count += 1\n        else:\n \
    \           return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    return string.count(substring)\n\n", "    return sum([1 for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return string.count(substring)\n\n", "    return sum([1 for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n",
  "    return sum([1 for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    if len(substring) == 0:\n        return len(string) + 1\n    else:\n\
    \        return string.count(substring)\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    if len(substring) > len(string):\n        return 0\n    elif\
    \ len(substring) == len(string):\n        return 1 if substring == string else\
    \ 0\n    else:\n        return string.count(substring)\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ return sum([1 for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return string.count(substring)\n\n", "    return len([i for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return string.count(substring)\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if len(substring) == 0:\n        return 0\n    else:\n     \
    \   return string.count(substring)\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i +\
    \ len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum([1 for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum([1 for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

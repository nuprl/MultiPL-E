name: HumanEval_103_rounded_avg
language: py
prompt: "from typing import Union\n\ndef rounded_avg(n: int, m: int) -> Union[str,\
  \ int]:\n    \"\"\"You are given two positive integers n and m, and your task is\
  \ to compute the\n    average of the integers from n through m (including n and\
  \ m). \n    Round the answer to the nearest integer and convert that to binary.\n\
  \    If n is greater than m, return -1.\n    Example:\n                    \"\"\"\
  \n"
tests: "def check(candidate):\n    assert candidate(1, 5) == '0b11'\n    assert candidate(7,\
  \ 13) == '0b1010'\n    assert candidate(964, 977) == '0b1111001010'\n    assert\
  \ candidate(996, 997) == '0b1111100100'\n    assert candidate(560, 851) == '0b1011000010'\n\
  \    assert candidate(185, 546) == '0b101101110'\n    assert candidate(362, 496)\
  \ == '0b110101101'\n    assert candidate(350, 902) == '0b1001110010'\n    assert\
  \ candidate(197, 233) == '0b11010111'\n    assert candidate(7, 5) == -1\n    assert\
  \ candidate(5, 1) == -1\n    assert candidate(5, 5) == '0b101'\n\ndef test_check():\n\
  \    check(rounded_avg)\n\ntest_check()\n"
completions: ["    if n > m:\n        return -1\n    else:\n        avg = round((n\
    \ + m) / 2)\n        return bin(avg)\n", "    if n > m:\n        return -1\n \
    \   else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n       \
    \ return -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n >\
    \ m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n      \
    \  return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if\
    \ n > m:\n        return -1\n    else:\n        avg = (n + m) // 2\n        return\
    \ bin(avg)\n", "    if n > m:\n        return -1\n    else:\n        avg = (n\
    \ + m) / 2\n        return bin(round(avg))", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))[2:]", "    if n > m:\n    \
    \    return -1\n    avg = (n + m) // 2\n    return bin(avg)\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1,\
    \ 5))\nprint(rounded_avg(5, 1))\nprint(rounded_avg(5, 5))\nprint(rounded_avg(5,\
    \ 6))\nprint(rounded_avg(5, 7))\nprint(rounded_avg(5, 8))\nprint(rounded_avg(5,\
    \ 9))\nprint(rounded_avg(5, 10))\nprint(rounded_avg(5, 11))\nprint(rounded_avg(5,\
    \ 12))\nprint(rounded_avg(5, 13))\nprint(rounded_avg(5, 14))\nprint(rounded_avg(5,\
    \ 15))\nprint(rounded_avg(5, 16))\nprint(rounded_avg(5, 17))\nprint(rounded_avg(5,\
    \ 18))\nprint(rounded_avg(5, 19))\nprint(rounded_avg(5, 20))\nprint(rounded_avg(5,\
    \ 21))\nprint(rounded_avg(5, 22))\nprint(rounded_avg(5, 23))\nprint(rounded_avg(5,\
    \ 24))\nprint(rounded_avg(5, 25))\nprint(rounded_avg(5, 26))\nprint(rounded_avg(5,\
    \ 27))\nprint(rounded_avg(5, 28))\nprint(rounded_avg(5, 29))\nprint(rounded_avg(5,\
    \ 30))\nprint(rounded_avg(5, 31))\nprint(rounded_avg(5, 32))\nprint(rounded_avg(5,\
    \ 33))\nprint(rounded_avg(5, 34))\nprint(rounded_avg(5, 35))\nprint(rounded_avg(5,\
    \ 36))\nprint(rounded_avg(5, 37))\nprint(rounded_avg(5, 38))\nprint(rounded_avg(5,\
    \ 39))\nprint(rounded_avg(5, 40))\nprint(rounded_avg(5, 41))\nprint(rounded_avg(5,\
    \ 42))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\n\
    print(rounded_avg(1, 7))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\n\
    print(rounded_avg(1, 10))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\n\
    print(rounded_avg(1, 13))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\n\
    print(rounded_avg(1, 16))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\n\
    print(rounded_avg(1, 19))\nprint(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\n\
    print(rounded_avg(1, 22))\nprint(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\n\
    print(rounded_avg(1, 25))\nprint(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\n\
    print(rounded_avg(1, 28))\nprint(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\n\
    print(rounded_avg(1, 31))\nprint(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\n\
    print(rounded_avg(1, 34))\nprint(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\n\
    print(rounded_avg(1, 37))\nprint(rounded_avg(1, 38))\nprint(rounded_avg(1, 39))\n\
    print(rounded_avg(1, 40))\nprint(rounded_avg(1, 41))\nprint(rounded_avg(1, 42))\n\
    print(rounded_avg(1, 43))\nprint(rounded_avg(1, 44))\n", "    if n > m:\n    \
    \    return -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]",
  "    if n > m:\n        return -1\n    else:\n        avg = (n + m) // 2\n     \
    \   return bin(avg)\n", "    if n > m:\n        return -1\n    else:\n       \
    \ return bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(int(round((n + m) / 2)))[2:]\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]", " \
    \   if n > m:\n        return -1\n    else:\n        return bin(round((n + m)\
    \ / 2))\n", "    if n > m:\n        return -1\n    else:\n        avg = round((n\
    \ + m) / 2)\n        return bin(avg)", "    if n > m:\n        return -1\n   \
    \ else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n     \
    \   return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "   \
    \ if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n  \
    \      return -1\n    return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        avg = round((n + m) / 2)\n\
    \        return bin(avg)", "    if n > m:\n        return -1\n    else:\n    \
    \    return bin(round((n + m) / 2))\n\nprint(rounded_avg(2, 6))\nprint(rounded_avg(2,\
    \ 5))\nprint(rounded_avg(2, 4))\nprint(rounded_avg(2, 3))\nprint(rounded_avg(2,\
    \ 2))\nprint(rounded_avg(2, 1))\nprint(rounded_avg(2, 0))\nprint(rounded_avg(2,\
    \ -1))\nprint(rounded_avg(2, -2))\nprint(rounded_avg(2, -3))\nprint(rounded_avg(2,\
    \ -4))\nprint(rounded_avg(2, -5))\nprint(rounded_avg(2, -6))\nprint(rounded_avg(2,\
    \ -7))\nprint(rounded_avg(2, -8))\nprint(rounded_avg(2, -9))\nprint(rounded_avg(2,\
    \ -10))\nprint(rounded_avg(2, -11))\nprint(rounded_avg(2, -12))\nprint(rounded_avg(2,\
    \ -13))\nprint(rounded_avg(2, -14))\nprint(rounded_avg(2, -15))\nprint(rounded_avg(2,\
    \ -16))\nprint(rounded_avg(2, -17))\nprint(rounded_avg(2, -18))\nprint(rounded_avg(2,\
    \ -19))\nprint(rounded_avg(2, -20))\nprint(rounded_avg(2, -21))\nprint(rounded_avg(2,\
    \ -22))\nprint(rounded_avg(2, -23))\nprint(rounded_avg(2, -24))\nprint(rounded_avg(2,\
    \ -25))\nprint(rounded_avg(2, -26))\nprint(rounded_avg(2, -27))\nprint(rounded_avg(2,\
    \ -28))\nprint(rounded_avg(2, -29))\nprint(rounded_avg(2, -30))\nprint(rounded_avg",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1,\
    \ 4))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1,\
    \ 7))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1,\
    \ 10))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1,\
    \ 13))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1,\
    \ 16))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1,\
    \ 19))\nprint(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1,\
    \ 22))\nprint(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1,\
    \ 25))\nprint(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1,\
    \ 28))\nprint(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1,\
    \ 31))\nprint(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1,\
    \ 34))\nprint(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1,\
    \ 37))\nprint(rounded_avg(1, 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1,\
    \ 40))\nprint(rounded_avg(1,", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n  \
    \      return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1,\
    \ 5))\nprint(rounded_avg(5, 1))\nprint(rounded_avg(5, 5))\nprint(rounded_avg(1,\
    \ 1))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1, 100))\nprint(rounded_avg(1,\
    \ 1000))\nprint(rounded_avg(1, 10000))\nprint(rounded_avg(1, 100000))\nprint(rounded_avg(1,\
    \ 1000000))\nprint(rounded_avg(1, 10000000))\nprint(rounded_avg(1, 100000000))\n\
    print(rounded_avg(1, 1000000000))\nprint(rounded_avg(1, 10000000000))\nprint(rounded_avg(1,\
    \ 100000000000))\nprint(rounded_avg(1, 1000000000000))\nprint(rounded_avg(1, 10000000000000))\n\
    print(rounded_avg(1, 100000000000000))\nprint(rounded_avg(1, 1000000000000000))\n\
    print(rounded_avg(1, 10000000000000000))\nprint(rounded_avg(1, 100000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000))\nprint(rounded_avg(1, 10000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000000000))\n\
    print(rounded_avg(", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 5))\nprint(rounded_avg(5, 1))\n\
    print(rounded_avg(3, 3))\nprint(rounded_avg(2, 6))\nprint(rounded_avg(1, 10))\n\
    print(rounded_avg(1, 100))\nprint(rounded_avg(1, 10000))\nprint(rounded_avg(1,\
    \ 100000))\nprint(rounded_avg(1, 1000000))\nprint(rounded_avg(1, 10000000))\n\
    print(rounded_avg(1, 100000000))\nprint(rounded_avg(1, 1000000000))\nprint(rounded_avg(1,\
    \ 10000000000))\nprint(rounded_avg(1, 100000000000))\nprint(rounded_avg(1, 1000000000000))\n\
    print(rounded_avg(1, 10000000000000))\nprint(rounded_avg(1, 100000000000000))\n\
    print(rounded_avg(1, 1000000000000000))\nprint(rounded_avg(1, 10000000000000000))\n\
    print(rounded_avg(1, 100000000000000000))\nprint(rounded_avg(1, 1000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000))\nprint(rounded_avg(1, 100000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000000000))\nprint(rounded_avg(1,\
    \ 100000000000000000000000000000000))\nprint(rounded_", "    if n > m:\n     \
    \   return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "   \
    \ if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(2, 2))\nprint(rounded_avg(2,\
    \ 3))\nprint(rounded_avg(1, 1))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1,\
    \ 100))\nprint(rounded_avg(1, 1000))\nprint(rounded_avg(1, 10000))\nprint(rounded_avg(1,\
    \ 100000))\nprint(rounded_avg(1, 1000000))\nprint(rounded_avg(1, 10000000))\n\
    print(rounded_avg(1, 100000000))\nprint(rounded_avg(1, 1000000000))\nprint(rounded_avg(1,\
    \ 10000000000))\nprint(rounded_avg(1, 100000000000))\nprint(rounded_avg(1, 1000000000000))\n\
    print(rounded_avg(1, 10000000000000))\nprint(rounded_avg(1, 100000000000000))\n\
    print(rounded_avg(1, 1000000000000000))\nprint(rounded_avg(1, 10000000000000000))\n\
    print(rounded_avg(1, 100000000000000000))\nprint(rounded_avg(1, 1000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000))\nprint(rounded_avg(1, 100000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000000000))\nprint(rounded_avg(",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n\nprint(rounded_avg(1, 5))\nprint(rounded_avg(5, 1))\nprint(rounded_avg(1,\
    \ 1))\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1,\
    \ 4))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1,\
    \ 7))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1,\
    \ 10))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1,\
    \ 13))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1,\
    \ 16))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1,\
    \ 19))\nprint(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1,\
    \ 22))\nprint(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1,\
    \ 25))\nprint(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1,\
    \ 28))\nprint(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1,\
    \ 31))\nprint(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1,\
    \ 34))\nprint(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1,\
    \ 37))\nprint(rounded_avg(1, 38))\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))\n\nprint(rounded_avg(4, 6))\nprint(rounded_avg(4,\
    \ 5))\nprint(rounded_avg(4, 4))\nprint(rounded_avg(4, 3))\nprint(rounded_avg(4,\
    \ 2))\nprint(rounded_avg(4, 1))\nprint(rounded_avg(4, 0))\nprint(rounded_avg(4,\
    \ -1))\nprint(rounded_avg(4, -2))\nprint(rounded_avg(4, -3))\nprint(rounded_avg(4,\
    \ -4))\nprint(rounded_avg(4, -5))\nprint(rounded_avg(4, -6))\nprint(rounded_avg(4,\
    \ -7))\nprint(rounded_avg(4, -8))\nprint(rounded_avg(4, -9))\nprint(rounded_avg(4,\
    \ -10))\nprint(rounded_avg(4, -11))\nprint(rounded_avg(4, -12))\nprint(rounded_avg(4,\
    \ -13))\nprint(rounded_avg(4, -14))\nprint(rounded_avg(4, -15))\nprint(rounded_avg(4,\
    \ -16))\nprint(rounded_avg(4, -17))\nprint(rounded_avg(4, -18))\nprint(rounded_avg(4,\
    \ -19))\nprint(rounded_avg(4, -20))\nprint(rounded_avg(4, -21))\nprint(rounded_avg(4,\
    \ -22))\nprint(rounded_avg(4, -23))\nprint(rounded_avg(4, -24))\nprint(rounded_avg(4,\
    \ -25))\nprint(rounded_avg(4, -26))\nprint(rounded_avg(4, -27))\nprint(rounded_avg(4,\
    \ -28))\nprint(rounded_avg(4, -29))\nprint(rounded_avg(4, -30))\nprint(rounded_avg",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", " \
    \   if n > m:\n        return -1\n    else:\n        return bin(round((n + m)\
    \ / 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n  \
    \      return -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1,\
    \ 4))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1,\
    \ 7))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1,\
    \ 10))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1,\
    \ 13))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1,\
    \ 16))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1,\
    \ 19))\nprint(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1,\
    \ 22))\nprint(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1,\
    \ 25))\nprint(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1,\
    \ 28))\nprint(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1,\
    \ 31))\nprint(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1,\
    \ 34))\nprint(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1,\
    \ 37))\nprint(rounded_avg(1, 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1,\
    \ 40))\nprint(rounded_avg(1,", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", " \
    \   if n > m:\n        return -1\n    else:\n        return bin(round((n + m)\
    \ / 2))[2:]", "    if n > m:\n        return -1\n    else:\n        avg = round((n\
    \ + m) / 2)\n        return bin(avg)[2:]\n", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n      \
    \  return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(2,\
    \ 6))", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 4))\n\
    print(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1, 7))\n\
    print(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1, 10))\n\
    print(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1, 13))\n\
    print(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1, 16))\n\
    print(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1, 19))\n\
    print(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1, 22))\n\
    print(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1, 25))\n\
    print(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1, 28))\n\
    print(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1, 31))\n\
    print(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1, 34))\n\
    print(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1, 37))\n\
    print(rounded_avg(1, 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1, 40))\n\
    print(rounded_avg(1, 41))\nprint(rounded_avg(1, 42))\n", "    if n > m:\n    \
    \    return -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 5))\n\
    print(rounded_avg(5, 1))\nprint(rounded_avg(1, 1))\nprint(rounded_avg(1, 2))\n\
    print(rounded_avg(1, 3))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(1, 5))\n\
    print(rounded_avg(1, 6))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(1, 8))\n\
    print(rounded_avg(1, 9))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1, 11))\n\
    print(rounded_avg(1, 12))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(1, 14))\n\
    print(rounded_avg(1, 15))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(1, 17))\n\
    print(rounded_avg(1, 18))\nprint(rounded_avg(1, 19))\nprint(rounded_avg(1, 20))\n\
    print(rounded_avg(1, 21))\nprint(rounded_avg(1, 22))\nprint(rounded_avg(1, 23))\n\
    print(rounded_avg(1, 24))\nprint(rounded_avg(1, 25))\nprint(rounded_avg(1, 26))\n\
    print(rounded_avg(1, 27))\nprint(rounded_avg(1, 28))\nprint(rounded_avg(1, 29))\n\
    print(rounded_avg(1, 30))\nprint(rounded_avg(1, 31))\nprint(rounded_avg(1, 32))\n\
    print(rounded_avg(1, 33))\nprint(rounded_avg(1, 34))\nprint(rounded_avg(1, 35))\n\
    print(rounded_avg(1, 36))\nprint(rounded_avg(1, 37))\nprint(rounded_avg(1, 38))\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 5))\nprint(rounded_avg(5, 1))\n\
    print(rounded_avg(3, 3))\nprint(rounded_avg(3, 4))\nprint(rounded_avg(4, 3))\n\
    print(rounded_avg(3, 5))\nprint(rounded_avg(5, 3))\nprint(rounded_avg(3, 6))\n\
    print(rounded_avg(6, 3))\nprint(rounded_avg(3, 7))\nprint(rounded_avg(7, 3))\n\
    print(rounded_avg(3, 8))\nprint(rounded_avg(8, 3))\nprint(rounded_avg(3, 9))\n\
    print(rounded_avg(9, 3))\nprint(rounded_avg(3, 10))\nprint(rounded_avg(10, 3))\n\
    print(rounded_avg(3, 11))\nprint(rounded_avg(11, 3))\nprint(rounded_avg(3, 12))\n\
    print(rounded_avg(12, 3))\nprint(rounded_avg(3, 13))\nprint(rounded_avg(13, 3))\n\
    print(rounded_avg(3, 14))\nprint(rounded_avg(14, 3))\nprint(rounded_avg(3, 15))\n\
    print(rounded_avg(15, 3))\nprint(rounded_avg(3, 16))\nprint(rounded_avg(16, 3))\n\
    print(rounded_avg(3, 17))\nprint(rounded_avg(17, 3))\nprint(rounded_avg(3, 18))\n\
    print(rounded_avg(18, 3))\nprint(rounded_avg(3, 19))\nprint(rounded_avg(19, 3))\n\
    print(rounded_avg(3, 20))\nprint(rounded_avg(20, 3))\nprint(rounded_avg(3, 21))\n\
    print(rounded_avg(21, 3))\nprint(rounded_avg(3, 22))\n", "    if n > m:\n    \
    \    return -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 1))\n\
    print(rounded_avg(1, 3))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 10))\n\
    print(rounded_avg(1, 100))\nprint(rounded_avg(1, 100000))\nprint(rounded_avg(1,\
    \ 1000000))\nprint(rounded_avg(1, 10000000))\nprint(rounded_avg(1, 100000000))\n\
    print(rounded_avg(1, 1000000000))\nprint(rounded_avg(1, 10000000000))\nprint(rounded_avg(1,\
    \ 100000000000))\nprint(rounded_avg(1, 1000000000000))\nprint(rounded_avg(1, 10000000000000))\n\
    print(rounded_avg(1, 100000000000000))\nprint(rounded_avg(1, 1000000000000000))\n\
    print(rounded_avg(1, 10000000000000000))\nprint(rounded_avg(1, 100000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000))\nprint(rounded_avg(1, 10000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000000))\nprint(rounded_avg(1, 1000000000000000000000000000))\n\
    print(rounded_avg(1, 10000000000000000000000000000))\nprint(rounded_avg(1, 100000000000000000000000000000))\n\
    print(rounded_avg(1, 1000000000000000000000000000000))\nprint(rounded_avg(1, 10000000000000000000000000000000))\n\
    print(rounded_avg(1, 100000000000000000000000000000000))\nprint(rounded_avg(1,\
    \ 1000000000000000000000000000000000))\nprint", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1,\
    \ 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(1,\
    \ 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(1,\
    \ 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1,\
    \ 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(1,\
    \ 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(1,\
    \ 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1, 19))\nprint(rounded_avg(1,\
    \ 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1, 22))\nprint(rounded_avg(1,\
    \ 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1, 25))\nprint(rounded_avg(1,\
    \ 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1, 28))\nprint(rounded_avg(1,\
    \ 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1, 31))\nprint(rounded_avg(1,\
    \ 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1, 34))\nprint(rounded_avg(1,\
    \ 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1, 37))\nprint(rounded_avg(1,\
    \ 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1, 40))\nprint(rounded_avg(1,\
    \ 41))\n", "    if n > m:\n        return -1\n    else:\n        avg = (n + m)\
    \ // 2\n        return bin(avg)\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n\nprint(rounded_avg(1, 5))\nprint(rounded_avg(5,\
    \ 1))\nprint(rounded_avg(5, 5))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(10,\
    \ 1))\nprint(rounded_avg(10, 10))\nprint(rounded_avg(1, 100))\nprint(rounded_avg(100,\
    \ 1))\nprint(rounded_avg(100, 100))\nprint(rounded_avg(1, 1000))\nprint(rounded_avg(1000,\
    \ 1))\nprint(rounded_avg(1000, 1000))\nprint(rounded_avg(1, 10000))\nprint(rounded_avg(10000,\
    \ 1))\nprint(rounded_avg(10000, 10000))\nprint(rounded_avg(1, 100000))\nprint(rounded_avg(100000,\
    \ 1))\nprint(rounded_avg(100000, 100000))\nprint(rounded_avg(1, 1000000))\nprint(rounded_avg(1000000,\
    \ 1))\nprint(rounded_avg(1000000, 1000000))\nprint(rounded_avg(1, 10000000))\n\
    print(rounded_avg(10000000, 1))\nprint(rounded_avg(10000000, 10000000))\nprint(rounded_avg(1,\
    \ 100000000))\nprint(rounded_avg(100000000, 1))\nprint(rounded_avg(100000000,\
    \ 100000000))\nprint(rounded_avg(1, 1000000000))\nprint(rounded_avg(1000000000,\
    \ 1))\nprint(rounded_avg(1000000000, 1000000000))\nprint(rounded_avg(1, 10000000000))\n\
    print(rounded_avg(10000000000, 1))\nprint(rounded_avg(10000000000, 10000000000))\n\
    print(rounded_avg(1, 100000000000))\nprint(rounded_avg(100000000000, 1))\nprint(rounded_avg(100000000000,\
    \ 100000000000))\nprint(rounded_avg(1,", "    if n > m:\n        return -1\n \
    \   else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n   \
    \     return -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "   \
    \ if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        avg = (n + m) // 2\n        return bin(avg)\n", "    if n\
    \ > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        avg = round((n + m) / 2)\n        return\
    \ bin(avg)", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(3, 4))\n\
    print(rounded_avg(3, 5))\nprint(rounded_avg(3, 6))\nprint(rounded_avg(3, 7))\n\
    print(rounded_avg(3, 8))\nprint(rounded_avg(3, 9))\nprint(rounded_avg(3, 10))\n\
    print(rounded_avg(3, 11))\nprint(rounded_avg(3, 12))\nprint(rounded_avg(3, 13))\n\
    print(rounded_avg(3, 14))\nprint(rounded_avg(3, 15))\nprint(rounded_avg(3, 16))\n\
    print(rounded_avg(3, 17))\nprint(rounded_avg(3, 18))\nprint(rounded_avg(3, 19))\n\
    print(rounded_avg(3, 20))\nprint(rounded_avg(3, 21))\nprint(rounded_avg(3, 22))\n\
    print(rounded_avg(3, 23))\nprint(rounded_avg(3, 24))\nprint(rounded_avg(3, 25))\n\
    print(rounded_avg(3, 26))\nprint(rounded_avg(3, 27))\nprint(rounded_avg(3, 28))\n\
    print(rounded_avg(3, 29))\nprint(rounded_avg(3, 30))\nprint(rounded_avg(3, 31))\n\
    print(rounded_avg(3, 32))\nprint(rounded_avg(3, 33))\nprint(rounded_avg(3, 34))\n\
    print(rounded_avg(3, 35))\nprint(rounded_avg(3, 36))\nprint(rounded_avg(3, 37))\n\
    print(rounded_avg(3, 38))\nprint(rounded_avg(3, 39))\nprint(rounded_avg(3, 40))\n\
    print(rounded_avg(3, 41))\nprint(rounded_avg(3, 42))\nprint(rounded_avg(3, 43))\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        avg = (n + m) // 2\n        return bin(avg)\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(int(round((n + m) / 2)))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1,\
    \ 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(1,\
    \ 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(1,\
    \ 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1,\
    \ 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(1,\
    \ 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(1,\
    \ 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1, 19))\nprint(rounded_avg(1,\
    \ 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1, 22))\nprint(rounded_avg(1,\
    \ 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1, 25))\nprint(rounded_avg(1,\
    \ 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1, 28))\nprint(rounded_avg(1,\
    \ 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1, 31))\nprint(rounded_avg(1,\
    \ 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1, 34))\nprint(rounded_avg(1,\
    \ 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1, 37))\nprint(rounded_avg(1,\
    \ 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1, 40))\nprint(rounded_avg(1,\
    \ 41))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n\
    \        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        avg = int(round((n\
    \ + m) / 2))\n        return bin(avg)\n", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 2))\n\
    print(rounded_avg(1, 3))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(1, 5))\n\
    print(rounded_avg(1, 6))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(1, 8))\n\
    print(rounded_avg(1, 9))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(1, 11))\n\
    print(rounded_avg(1, 12))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(1, 14))\n\
    print(rounded_avg(1, 15))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(1, 17))\n\
    print(rounded_avg(1, 18))\nprint(rounded_avg(1, 19))\nprint(rounded_avg(1, 20))\n\
    print(rounded_avg(1, 21))\nprint(rounded_avg(1, 22))\nprint(rounded_avg(1, 23))\n\
    print(rounded_avg(1, 24))\nprint(rounded_avg(1, 25))\nprint(rounded_avg(1, 26))\n\
    print(rounded_avg(1, 27))\nprint(rounded_avg(1, 28))\nprint(rounded_avg(1, 29))\n\
    print(rounded_avg(1, 30))\nprint(rounded_avg(1, 31))\nprint(rounded_avg(1, 32))\n\
    print(rounded_avg(1, 33))\nprint(rounded_avg(1, 34))\nprint(rounded_avg(1, 35))\n\
    print(rounded_avg(1, 36))\nprint(rounded_avg(1, 37))\nprint(rounded_avg(1, 38))\n\
    print(rounded_avg(1, 39))\nprint(rounded_avg(1, 40))\nprint(rounded_avg(1, 41))\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", " \
    \   if n > m:\n        return -1\n    else:\n        return bin(round((n + m)\
    \ / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n\nprint(rounded_avg(1, 2))\nprint(rounded_avg(1, 3))\nprint(rounded_avg(1,\
    \ 4))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(1, 6))\nprint(rounded_avg(1,\
    \ 7))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(1, 9))\nprint(rounded_avg(1,\
    \ 10))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(1, 12))\nprint(rounded_avg(1,\
    \ 13))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(1, 15))\nprint(rounded_avg(1,\
    \ 16))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(1, 18))\nprint(rounded_avg(1,\
    \ 19))\nprint(rounded_avg(1, 20))\nprint(rounded_avg(1, 21))\nprint(rounded_avg(1,\
    \ 22))\nprint(rounded_avg(1, 23))\nprint(rounded_avg(1, 24))\nprint(rounded_avg(1,\
    \ 25))\nprint(rounded_avg(1, 26))\nprint(rounded_avg(1, 27))\nprint(rounded_avg(1,\
    \ 28))\nprint(rounded_avg(1, 29))\nprint(rounded_avg(1, 30))\nprint(rounded_avg(1,\
    \ 31))\nprint(rounded_avg(1, 32))\nprint(rounded_avg(1, 33))\nprint(rounded_avg(1,\
    \ 34))\nprint(rounded_avg(1, 35))\nprint(rounded_avg(1, 36))\nprint(rounded_avg(1,\
    \ 37))\nprint(rounded_avg(1, 38))\nprint(rounded_avg(1, 39))\nprint(rounded_avg(1,\
    \ 40))\nprint(rounded_avg(1, 41))\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if n > m:\n \
    \       return -1\n    else:\n        return bin(round((n + m) / 2))\n", "   \
    \ if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n    else:\n\
    \        avg = round((n + m) / 2)\n        return bin(avg)\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))\n", "  \
    \  if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(1, 2)) # 1\nprint(rounded_avg(1,\
    \ 3)) # 2\nprint(rounded_avg(1, 4)) # 2\nprint(rounded_avg(1, 5)) # 3\nprint(rounded_avg(1,\
    \ 6)) # 3\nprint(rounded_avg(1, 7)) # 4\nprint(rounded_avg(1, 8)) # 4\nprint(rounded_avg(1,\
    \ 9)) # 5\nprint(rounded_avg(1, 10)) # 5\nprint(rounded_avg(1, 11)) # 6\nprint(rounded_avg(1,\
    \ 12)) # 6\nprint(rounded_avg(1, 13)) # 7\nprint(rounded_avg(1, 14)) # 7\nprint(rounded_avg(1,\
    \ 15)) # 8\nprint(rounded_avg(1, 16)) # 8\nprint(rounded_avg(1, 17)) # 9\nprint(rounded_avg(1,\
    \ 18)) # 9\nprint(rounded_avg(1, 19)) # 10\nprint(rounded_avg(1, 20)) # 10\nprint(rounded_avg(1,\
    \ 21)) # 11\nprint(rounded_avg(1, 22)) # 11\nprint(rounded_avg(1, 23)) # 12\n\
    print(rounded_avg(1, 24)) # 12\nprint(rounded_avg(1, 25)) # 13\nprint(rounded_avg(1,\
    \ 26)) # 13\nprint(rounded_avg(1, 27)) # 14\nprint(rounded_avg(1, 28)) # 14\n\
    print(rounded_avg(1, 29)) # 15\nprint(rounded_avg(1, 30)) # 15\nprint(rounded_avg(1,\
    \ 31)) # 16\nprint(rounded_avg(1, 32)) # 16\nprint(rounded_avg(1, 33)) # 17\n\
    print(rounded_avg(1, 34)) # 17\nprint(rounded_avg(1, 35)) # 18\nprint(rounded_",
  "    if n > m:\n        return -1\n    return bin(round((n + m) / 2))[2:]\n", " \
    \   if n > m:\n        return -1\n    else:\n        return bin(round((n + m)\
    \ / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(3, 7))\nprint(rounded_avg(7, 3))\n\
    print(rounded_avg(2, 4))\nprint(rounded_avg(4, 2))\nprint(rounded_avg(1, 1))\n\
    print(rounded_avg(1, 2))\nprint(rounded_avg(2, 1))\nprint(rounded_avg(1, 3))\n\
    print(rounded_avg(3, 1))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(4, 1))\n\
    print(rounded_avg(1, 5))\nprint(rounded_avg(5, 1))\nprint(rounded_avg(1, 6))\n\
    print(rounded_avg(6, 1))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(7, 1))\n\
    print(rounded_avg(1, 8))\nprint(rounded_avg(8, 1))\nprint(rounded_avg(1, 9))\n\
    print(rounded_avg(9, 1))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(10, 1))\n\
    print(rounded_avg(1, 11))\nprint(rounded_avg(11, 1))\nprint(rounded_avg(1, 12))\n\
    print(rounded_avg(12, 1))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(13, 1))\n\
    print(rounded_avg(1, 14))\nprint(rounded_avg(14, 1))\nprint(rounded_avg(1, 15))\n\
    print(rounded_avg(15, 1))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(16, 1))\n\
    print(rounded_avg(1, 17))\nprint(rounded_avg(17, 1))\nprint(rounded_avg(1, 18))\n\
    print(rounded_avg(18, 1))\nprint(rounded_avg(1, 19))\n", "    if n > m:\n    \
    \    return -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n\nprint(rounded_avg(3, 7))\nprint(rounded_avg(7, 3))\n\
    print(rounded_avg(3, 3))\nprint(rounded_avg(3, 5))\nprint(rounded_avg(3, 4))\n\
    print(rounded_avg(3, 6))\nprint(rounded_avg(3, 8))\nprint(rounded_avg(3, 9))\n\
    print(rounded_avg(3, 10))\nprint(rounded_avg(3, 11))\nprint(rounded_avg(3, 12))\n\
    print(rounded_avg(3, 13))\nprint(rounded_avg(3, 14))\nprint(rounded_avg(3, 15))\n\
    print(rounded_avg(3, 16))\nprint(rounded_avg(3, 17))\nprint(rounded_avg(3, 18))\n\
    print(rounded_avg(3, 19))\nprint(rounded_avg(3, 20))\nprint(rounded_avg(3, 21))\n\
    print(rounded_avg(3, 22))\nprint(rounded_avg(3, 23))\nprint(rounded_avg(3, 24))\n\
    print(rounded_avg(3, 25))\nprint(rounded_avg(3, 26))\nprint(rounded_avg(3, 27))\n\
    print(rounded_avg(3, 28))\nprint(rounded_avg(3, 29))\nprint(rounded_avg(3, 30))\n\
    print(rounded_avg(3, 31))\nprint(rounded_avg(3, 32))\nprint(rounded_avg(3, 33))\n\
    print(rounded_avg(3, 34))\nprint(rounded_avg(3, 35))\nprint(rounded_avg(3, 36))\n\
    print(rounded_avg(3, 37))\nprint(rounded_avg(3, 38))\nprint(rounded_avg(3, 39))\n\
    print(rounded_avg(3, 40))\nprint(rounded_avg(3, 41))\n", "    if n > m:\n    \
    \    return -1\n    else:\n        return bin(round((n + m) / 2))\n", "    if\
    \ n > m:\n        return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n  \
    \      return -1\n    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(4,\
    \ 6))\nprint(rounded_avg(6, 4))\nprint(rounded_avg(5, 5))\nprint(rounded_avg(1,\
    \ 2))\nprint(rounded_avg(2, 1))\nprint(rounded_avg(1, 1))\nprint(rounded_avg(1,\
    \ 3))\nprint(rounded_avg(3, 1))\nprint(rounded_avg(1, 4))\nprint(rounded_avg(4,\
    \ 1))\nprint(rounded_avg(1, 5))\nprint(rounded_avg(5, 1))\nprint(rounded_avg(1,\
    \ 6))\nprint(rounded_avg(6, 1))\nprint(rounded_avg(1, 7))\nprint(rounded_avg(7,\
    \ 1))\nprint(rounded_avg(1, 8))\nprint(rounded_avg(8, 1))\nprint(rounded_avg(1,\
    \ 9))\nprint(rounded_avg(9, 1))\nprint(rounded_avg(1, 10))\nprint(rounded_avg(10,\
    \ 1))\nprint(rounded_avg(1, 11))\nprint(rounded_avg(11, 1))\nprint(rounded_avg(1,\
    \ 12))\nprint(rounded_avg(12, 1))\nprint(rounded_avg(1, 13))\nprint(rounded_avg(13,\
    \ 1))\nprint(rounded_avg(1, 14))\nprint(rounded_avg(14, 1))\nprint(rounded_avg(1,\
    \ 15))\nprint(rounded_avg(15, 1))\nprint(rounded_avg(1, 16))\nprint(rounded_avg(16,\
    \ 1))\nprint(rounded_avg(1, 17))\nprint(rounded_avg(17, 1))\nprint(rounded_avg(1,\
    \ 18))\nprint(rounded_avg(18, 1))\nprint(rounded_avg(1, 19))\nprint(rounded_avg(19,\
    \ 1))\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n \
    \       return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n\
    \        return -1\n    else:\n        return bin(round((n + m) / 2))\n", "  \
    \  if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n        return bin(round((n\
    \ + m) / 2))\n", "    if n > m:\n        return -1\n    else:\n        return\
    \ bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]", "    if n > m:\n        return -1\n\
    \    else:\n        return bin(round((n + m) / 2))\n\nprint(rounded_avg(2, 4))\n\
    print(rounded_avg(2, 5))\nprint(rounded_avg(5, 2))", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))", "    if n > m:\n   \
    \     return -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n", " \
    \   if n>m:\n        return -1\n    else:\n        return bin(round((n+m)/2))[2:]",
  "    if n > m:\n        return -1\n    else:\n        return bin(round((n + m) /\
    \ 2))\n\nprint(rounded_avg(3, 5))", "    if n > m:\n        return -1\n    else:\n\
    \        return bin(round((n + m) / 2))[2:]\n", "    if n > m:\n        return\
    \ -1\n    else:\n        return bin(round((n + m) / 2))[2:]\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

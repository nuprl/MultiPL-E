name: HumanEval_57_monotonic
language: py
prompt: "from typing import List\n\ndef monotonic(l: List[int]) -> bool:\n    \"\"\
  \"Return True is list elements are monotonically increasing or decreasing.\n   \
  \             \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 2, 4, 10]) == True\n    assert\
  \ candidate([1, 2, 4, 20]) == True\n    assert candidate([1, 20, 4, 10]) == False\n\
  \    assert candidate([4, 1, 0, -10]) == True\n    assert candidate([4, 1, 1, 0])\
  \ == True\n    assert candidate([1, 2, 3, 2, 5, 60]) == False\n    assert candidate([1,\
  \ 2, 3, 4, 5, 60]) == True\n    assert candidate([9, 9, 9, 9]) == True\n\ndef test_check():\n\
  \    check(monotonic)\n\ntest_check()\n"
completions: ["    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n   \
    \     return increasing(l)\n    if l[0] > l[1]:\n        return decreasing(l)\n\
    \    return False\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) == 1:\n \
    \       return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n\
    \            if l[i] > l[i + 1]:\n                return False\n    else:\n  \
    \      for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n     \
    \           return False\n    return True\n", "    if len(l) <= 2:\n        return\
    \ True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n        \
    \    if l[i] > l[i + 1]:\n                return False\n    else:\n        for\
    \ i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n              \
    \  return False\n    return True\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] >\
    \ l[1]:\n        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n   \
    \     return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n        return\
    \ decreasing(l)\n    else:\n        return monotonic(l[1:])\n", "    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n\n", "    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        for i in range(len(l) - 1):\n            if l[i] > l[i\
    \ + 1]:\n                return False\n    else:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] < l[i + 1]:\n                return False\n    return\
    \ True\n", "    if len(l) <= 1:\n        return True\n    else:\n        if l[0]\
    \ < l[1]:\n            for i in range(1, len(l) - 1):\n                if l[i]\
    \ > l[i + 1]:\n                    return False\n        elif l[0] > l[1]:\n \
    \           for i in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n\
    \                    return False\n        else:\n            return monotonic(l[1:])\n\
    \    return True\n", "    if len(l) <= 1:\n        return True\n    if l[0] <\
    \ l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n     \
    \   return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    else:\n\
    \        if l[0] < l[1]:\n            for i in range(len(l)-1):\n            \
    \    if l[i] > l[i+1]:\n                    return False\n        elif l[0] >\
    \ l[1]:\n            for i in range(len(l)-1):\n                if l[i] < l[i+1]:\n\
    \                    return False\n        else:\n            return monotonic(l[1:])\n\
    \    return True\n", "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n\
    \        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n        return\
    \ monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n", "  \
    \  return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or \\\n           all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    # Your\
    \ code here\n    return False\n", "    if len(l) <= 2:\n        return True\n\
    \    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ > l[i + 1]:\n                return False\n    else:\n        for i in range(1,\
    \ len(l) - 1):\n            if l[i] < l[i + 1]:\n                return False\n\
    \    return True\n", "    if len(l) <= 1:\n        return True\n    if l[0] <\
    \ l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n     \
    \   return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ > l[i + 1]:\n                return False\n    else:\n        for i in range(1,\
    \ len(l) - 1):\n            if l[i] < l[i + 1]:\n                return False\n\
    \    return True\n", "    if len(l) <= 2:\n        return True\n    else:\n  \
    \      if l[0] < l[1]:\n            for i in range(len(l)-1):\n              \
    \  if l[i] > l[i+1]:\n                    return False\n        else:\n      \
    \      for i in range(len(l)-1):\n                if l[i] < l[i+1]:\n        \
    \            return False\n    return True\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n        \
    \    if l[i] > l[i + 1]:\n                return False\n    else:\n        for\
    \ i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n              \
    \  return False\n    return True\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return\
    \ all(l[i] <= l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i]\
    \ >= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <= l[i+1] for i\
    \ in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "  \
    \  if len(l) <= 1:\n        return True\n    elif l[0] < l[1]:\n        return\
    \ monotonic_increasing(l)\n    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n \
    \   elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n   \
    \     return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        return increasing(l)\n    else:\n        return\
    \ decreasing(l)\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or\
    \ all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 1:\n        return True\n    else:\n        if l[0] < l[1]:\n\
    \            return monotonic_increasing(l)\n        elif l[0] > l[1]:\n     \
    \       return monotonic_decreasing(l)\n        else:\n            return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    direction = l[1] - l[0]\n    for\
    \ i in range(2, len(l)):\n        if direction == 0:\n            direction =\
    \ l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n      \
    \          return False\n    return True\n", "    return all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    direction = l[1] - l[0]\n    for\
    \ i in range(2, len(l)):\n        if direction == 0:\n            direction =\
    \ l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ > l[i + 1]:\n                return False\n    else:\n        for i in range(1,\
    \ len(l) - 1):\n            if l[i] < l[i + 1]:\n                return False\n\
    \    return True\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n\nprint(monotonic([1,2,3,4,5]))\n\
    print(monotonic([1,2,3,4,5,4,3,2,1]))\nprint(monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n    else:\n\
    \        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l)\
    \ <= 1:\n        return True\n    else:\n        if l[0] < l[1]:\n           \
    \ for i in range(len(l)-1):\n                if l[i] > l[i+1]:\n             \
    \       return False\n        else:\n            for i in range(len(l)-1):\n \
    \               if l[i] < l[i+1]:\n                    return False\n    return\
    \ True\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i]\
    \ >= l[i+1] for i in range(len(l)-1))\n", "    return (all(l[i] <= l[i + 1] for\
    \ i in range(len(l) - 1)) or\n            all(l[i] >= l[i + 1] for i in range(len(l)\
    \ - 1)))\n\nprint(monotonic([1,2,3,4,5,6,7,8,9]))\nprint(monotonic([9,8,7,6,5,4,3,2,1]))\n\
    print(monotonic([1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n   \
    \             return False\n    return True\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0]\
    \ > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    else:\n\
    \        return (all(l[i] <= l[i+1] for i in range(len(l)-1)) or\n           \
    \     all(l[i] >= l[i+1] for i in range(len(l)-1)))\n", "    if len(l) < 2:\n\
    \        return True\n    if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n\
    \                return False\n    else:\n        for i in range(len(l) - 1):\n\
    \            if l[i] < l[i + 1]:\n                return False\n    return True\n\
    \n", "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return\
    \ monotonic_increasing(l)\n    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0]\
    \ > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n\
    \        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 1:\n \
    \       return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif\
    \ l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n        return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n\
    \nprint(monotonic([1,2,3,4,5]))\nprint(monotonic([1,2,3,4,5,4,3,2,1]))\nprint(monotonic([1,2,3,4,5,5,5,5,5]))\n\
    print(monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 1:\n \
    \       return True\n    elif l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if l == sorted(l):\n        return True\n\
    \    elif l == sorted(l, reverse=True):\n        return True\n    else:\n    \
    \    return False\n", "    return (all(l[i] <= l[i + 1] for i in range(len(l)\
    \ - 1)) or\n            all(l[i] >= l[i + 1] for i in range(len(l) - 1)))\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    else:\n\
    \        if l[0] < l[1]:\n            return monotonic_increasing(l)\n       \
    \ elif l[0] > l[1]:\n            return monotonic_decreasing(l)\n        else:\n\
    \            return monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i\
    \ in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "  \
    \  if len(l) <= 1:\n        return True\n    elif l[0] < l[1]:\n        return\
    \ monotonic_increasing(l)\n    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0]\
    \ > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        for i in range(len(l) - 1):\n            if l[i] > l[i\
    \ + 1]:\n                return False\n    else:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] < l[i + 1]:\n                return False\n    return\
    \ True\n", "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n  \
    \      for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n        \
    \        return False\n    else:\n        for i in range(len(l) - 1):\n      \
    \      if l[i] < l[i + 1]:\n                return False\n    return True\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n\
    \        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    return (all(l[i] <= l[i + 1] for i in range(len(l) - 1)) or\n            all(l[i]\
    \ >= l[i + 1] for i in range(len(l) - 1)))\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif\
    \ l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    else:\n\
    \        return (all(l[i] <= l[i+1] for i in range(len(l)-1)) or\n           \
    \     all(l[i] >= l[i+1] for i in range(len(l)-1)))\n", "    if len(l) <= 1:\n\
    \        return True\n    if l[0] <= l[1]:\n        return monotonic_increasing(l)\n\
    \    else:\n        return monotonic_decreasing(l)\n", "    if len(l) <= 1:\n\
    \        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 2:\n \
    \       return True\n    else:\n        if l[0] < l[1]:\n            for i in\
    \ range(1, len(l) - 1):\n                if l[i] > l[i + 1]:\n               \
    \     return False\n        else:\n            for i in range(1, len(l) - 1):\n\
    \                if l[i] < l[i + 1]:\n                    return False\n    return\
    \ True\n", "    if len(l) <= 2:\n        return True\n    if l[0] < l[1]:\n  \
    \      for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n        \
    \        return False\n    else:\n        for i in range(len(l) - 1):\n      \
    \      if l[i] < l[i + 1]:\n                return False\n    return True\n",
  "    if len(l) <= 2:\n        return True\n    elif l[0] < l[1]:\n        for i\
    \ in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 2:\n        return True\n    else:\n\
    \        if l[0] < l[1]:\n            for i in range(1, len(l) - 1):\n       \
    \         if l[i] > l[i + 1]:\n                    return False\n        else:\n\
    \            for i in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n\
    \                    return False\n    return True\n", "    return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n\
    \        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n        return\
    \ decreasing(l)\n    else:\n        return monotonic(l[1:])\n", "    if len(l)\
    \ <= 2:\n        return True\n    if l[0] < l[1]:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n      \
    \          return False\n    return True\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n        \
    \    if l[i] > l[i + 1]:\n                return False\n    else:\n        for\
    \ i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n              \
    \  return False\n    return True\n", "    if len(l) <= 2:\n        return True\n\
    \    direction = l[1] - l[0]\n    for i in range(2, len(l)):\n        if direction\
    \ == 0:\n            direction = l[i] - l[i - 1]\n            continue\n     \
    \   if breaks_direction(direction, l[i - 1], l[i]):\n            return False\n\
    \    return True\n", "    if len(l) <= 1:\n        return True\n    if l[0] <\
    \ l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n        return decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        for i in range(len(l) - 1):\n    \
    \        if l[i] > l[i + 1]:\n                return False\n    else:\n      \
    \  for i in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n            \
    \    return False\n    return True\n", "    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    return\
    \ (all(l[i] <= l[i + 1] for i in range(len(l) - 1)) or\n            all(l[i] >=\
    \ l[i + 1] for i in range(len(l) - 1)))\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif\
    \ l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i] > l[i +\
    \ 1]:\n                return False\n    else:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] < l[i + 1]:\n                return False\n    return\
    \ True\n", "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n  \
    \      return increasing(l)\n    elif l[0] > l[1]:\n        return decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n \
    \           if l[i] > l[i + 1]:\n                return False\n    else:\n   \
    \     for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n      \
    \          return False\n    return True\n", "    if len(l) <= 2:\n        return\
    \ True\n    else:\n        if l[0] < l[1]:\n            for i in range(1, len(l)\
    \ - 1):\n                if l[i] > l[i + 1]:\n                    return False\n\
    \        elif l[0] > l[1]:\n            for i in range(1, len(l) - 1):\n     \
    \           if l[i] < l[i + 1]:\n                    return False\n        else:\n\
    \            return False\n    return True\n", "    return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 2:\n        return True\n    if l[0] < l[1]:\n        return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 2:\n        return True\n  \
    \  if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n\
    \        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 2:\n        return True\n    else:\n        if l[0] < l[1]:\n\
    \            for i in range(1, len(l) - 1):\n                if l[i] > l[i + 1]:\n\
    \                    return False\n        else:\n            for i in range(1,\
    \ len(l) - 1):\n                if l[i] < l[i + 1]:\n                    return\
    \ False\n    return True\n", "    if len(l) <= 2:\n        return True\n    direction\
    \ = l[1] - l[0]\n    for i in range(2, len(l)):\n        if direction == 0:\n\
    \            direction = l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    return\
    \ all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) <= 2:\n        return True\n    if l[0]\
    \ < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n    else:\n\
    \        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n   \
    \             return False\n    return True\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0]\
    \ > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n   \
    \             return False\n    return True\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0]\
    \ > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i] > l[i +\
    \ 1]:\n                return False\n    else:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] < l[i + 1]:\n                return False\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n   \
    \     for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n         \
    \       return False\n    else:\n        for i in range(len(l) - 1):\n       \
    \     if l[i] < l[i + 1]:\n                return False\n    return True\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return\
    \ monotonic_increasing(l)\n    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    else:\n        return (all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or\n                all(l[i] >= l[i+1] for i in range(len(l)-1)))\n", "    if\
    \ len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(1,\
    \ len(l) - 1):\n            if l[i] > l[i + 1]:\n                return False\n\
    \    else:\n        for i in range(1, len(l) - 1):\n            if l[i] < l[i\
    \ + 1]:\n                return False\n    return True\n", "    if len(l) <= 1:\n\
    \        return True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif\
    \ l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(1, len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ < l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    elif l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    else:\n        return (all(l[i] <= l[i+1] for i in range(len(l)-1)) or\n\
    \                all(l[i] >= l[i+1] for i in range(len(l)-1)))\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return\
    \ increasing(l)\n    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n\
    \        return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n  \
    \      return decreasing(l)\n    else:\n        return monotonic(l[1:])\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(1, len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ < l[i + 1]:\n                return False\n    return True\n", "    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    elif l[0] > l[1]:\n        for i in range(len(l) - 1):\n        \
    \    if l[i] < l[i + 1]:\n                return False\n    return True\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return\
    \ increasing(l)\n    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n\
    \        return monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 1:\n \
    \       return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 1:\n \
    \       return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n\
    \            if l[i] > l[i + 1]:\n                return False\n    else:\n  \
    \      for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n     \
    \           return False\n    return True\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n\
    \        return decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 2:\n        return True\n    direction = l[1] - l[0]\n    for\
    \ i in range(2, len(l)):\n        if direction == 0:\n            direction =\
    \ l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    if len(l)\
    \ <= 2:\n        return True\n    else:\n        if l[0] < l[1]:\n           \
    \ for i in range(1, len(l) - 1):\n                if l[i] > l[i + 1]:\n      \
    \              return False\n        else:\n            for i in range(1, len(l)\
    \ - 1):\n                if l[i] < l[i + 1]:\n                    return False\n\
    \    return True\n", "    if len(l) <= 2:\n        return True\n    else:\n  \
    \      if l[0] < l[1]:\n            return monotonic_increasing(l)\n        elif\
    \ l[0] > l[1]:\n            return monotonic_decreasing(l)\n        else:\n  \
    \          return monotonic(l[1:])\n", "    if len(l) <= 2:\n        return True\n\
    \    else:\n        if l[0] < l[1]:\n            for i in range(1, len(l) - 1):\n\
    \                if l[i] > l[i + 1]:\n                    return False\n     \
    \   else:\n            for i in range(1, len(l) - 1):\n                if l[i]\
    \ < l[i + 1]:\n                    return False\n    return True\n", "    if len(l)\
    \ <= 2:\n        return True\n    direction = l[1] - l[0]\n    for i in range(2,\
    \ len(l)):\n        if direction == 0:\n            direction = l[i] - l[i - 1]\n\
    \            continue\n        if breaks_direction(direction, l[i - 1], l[i]):\n\
    \            return False\n    return True\n", "    return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n\
    \    if l[0] > l[1]:\n        return monotonic(l[1:]) and all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n    else:\n        return monotonic(l[1:]) and all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n\nprint(monotonic([1,2,3,4,5]))\nprint(monotonic([5,4,3,2,1]))\n\
    print(monotonic([1,2,3,4,5,4,3,2,1]))\nprint(monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n    else:\n\
    \        return (all(l[i] <= l[i+1] for i in range(len(l)-1)) or\n           \
    \     all(l[i] >= l[i+1] for i in range(len(l)-1)))", "    return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n        return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif l[0] > l[1]:\n\
    \        return monotonic_decreasing(l)\n    else:\n        return monotonic(l[1:])\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(1, len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ < l[i + 1]:\n                return False\n    return True\n", "    return (all(l[i]\
    \ <= l[i + 1] for i in range(len(l) - 1)) or\n            all(l[i] >= l[i + 1]\
    \ for i in range(len(l) - 1)))\n", "    if len(l) <= 2:\n        return True\n\
    \    direction = l[1] - l[0]\n    for i in range(2, len(l)):\n        if direction\
    \ == 0:\n            direction = l[i] - l[i - 1]\n            continue\n     \
    \   if breaks_direction(direction, l[i - 1], l[i]):\n            return False\n\
    \    return True\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 2:\n \
    \       return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n\
    \            if l[i] > l[i + 1]:\n                return False\n    else:\n  \
    \      for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n     \
    \           return False\n    return True\n", "    if len(l) <= 2:\n        return\
    \ True\n    direction = l[1] - l[0]\n    for i in range(2, len(l)):\n        if\
    \ direction == 0:\n            direction = l[i] - l[i - 1]\n            continue\n\
    \        if breaks_direction(direction, l[i - 1], l[i]):\n            return False\n\
    \    return True\n", "    if len(l) <= 2:\n        return True\n    else:\n  \
    \      if l[0] < l[1]:\n            for i in range(1, len(l) - 1):\n         \
    \       if l[i] > l[i + 1]:\n                    return False\n        else:\n\
    \            for i in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n\
    \                    return False\n    return True\n", "    return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    else:\n        return decreasing(l)\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n    elif\
    \ l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    if len(l) <= 1:\n        return True\n    if l[0]\
    \ < l[1]:\n        return increasing(l)\n    elif l[0] > l[1]:\n        return\
    \ decreasing(l)\n    else:\n        return monotonic(l[1:])\n", "    if len(l)\
    \ <= 1:\n        return True\n    else:\n        return (all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1)) or\n                all(l[i] >= l[i+1] for i in range(len(l)-1)))\n",
  "    if len(l) <= 2:\n        return True\n    else:\n        if l[0] < l[1]:\n\
    \            return all(l[i] <= l[i+1] for i in range(len(l)-1))\n        elif\
    \ l[0] > l[1]:\n            return all(l[i] >= l[i+1] for i in range(len(l)-1))\n\
    \        else:\n            return monotonic(l[1:])\n", "    if len(l) <= 2:\n\
    \        return True\n    if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1))\n    elif l[0] > l[1]:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n    else:\n        return monotonic(l[1:])\n", " \
    \   if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n        return increasing(l)\n\
    \    elif l[0] > l[1]:\n        return decreasing(l)\n    else:\n        return\
    \ monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 2:\n \
    \       return True\n    direction = l[1] - l[0]\n    for i in range(2, len(l)):\n\
    \        if direction == 0:\n            direction = l[i] - l[i - 1]\n       \
    \     continue\n        if breaks_direction(direction, l[i - 1], l[i]):\n    \
    \        return False\n    return True\n", "    return all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1)) or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 2:\n        return True\n    else:\n        if l[0] < l[1]:\n\
    \            for i in range(1, len(l) - 1):\n                if l[i] > l[i + 1]:\n\
    \                    return False\n        elif l[0] > l[1]:\n            for\
    \ i in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n          \
    \          return False\n        else:\n            return False\n    return True\n",
  "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1] for\
    \ i in range(len(l)-1))\n", "    if len(l) <= 2:\n        return True\n    else:\n\
    \        if l[0] < l[1]:\n            for i in range(1, len(l) - 1):\n       \
    \         if l[i] > l[i + 1]:\n                    return False\n        else:\n\
    \            for i in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n\
    \                    return False\n    return True\n", "    if len(l) <= 2:\n\
    \        return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) -\
    \ 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n   \
    \             return False\n    return True\n", "    if len(l) <= 2:\n       \
    \ return True\n    else:\n        if l[0] < l[1]:\n            for i in range(1,\
    \ len(l) - 1):\n                if l[i] > l[i + 1]:\n                    return\
    \ False\n            return True\n        elif l[0] > l[1]:\n            for i\
    \ in range(1, len(l) - 1):\n                if l[i] < l[i + 1]:\n            \
    \        return False\n            return True\n        else:\n            return\
    \ monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\
    \ or all(l[i] >= l[i+1] for i in range(len(l)-1))\n", "    if l[0] < l[1]:\n \
    \       for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n       \
    \         return False\n    else:\n        for i in range(len(l) - 1):\n     \
    \       if l[i] < l[i + 1]:\n                return False\n    return True\n",
  "    if len(l) <= 2:\n        return True\n    else:\n        if l[0] < l[1]:\n\
    \            for i in range(len(l)-1):\n                if l[i] > l[i+1]:\n  \
    \                  return False\n        elif l[0] > l[1]:\n            for i\
    \ in range(len(l)-1):\n                if l[i] < l[i+1]:\n                   \
    \ return False\n        else:\n            return False\n    return True\n", " \
    \   if len(l) <= 2:\n        return True\n    direction = l[1] - l[0]\n    for\
    \ i in range(2, len(l)):\n        if direction == 0:\n            direction =\
    \ l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    if len(l)\
    \ <= 2:\n        return True\n    if l[0] < l[1]:\n        for i in range(1, len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n   \
    \             return False\n    return True\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n \
    \           if l[i] > l[i + 1]:\n                return False\n    else:\n   \
    \     for i in range(1, len(l) - 1):\n            if l[i] < l[i + 1]:\n      \
    \          return False\n    return True\n\nprint(monotonic([1, 2, 3, 4, 5]))\n\
    print(monotonic([5, 4, 3, 2, 1]))\nprint(monotonic([1, 2, 3, 4, 5, 4, 3, 2, 1]))\n\
    print(monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\
    \ 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,\
    \ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\
    \ 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\
    \ 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,\
    \ 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,", "    if len(l) <= 1:\n\
    \        return True\n    if l[0] < l[1]:\n        return monotonic_increasing(l)\n\
    \    elif l[0] > l[1]:\n        return monotonic_decreasing(l)\n    else:\n  \
    \      return monotonic(l[1:])\n", "    return (all(l[i] <= l[i + 1] for i in\
    \ range(len(l) - 1)) or\n            all(l[i] >= l[i + 1] for i in range(len(l)\
    \ - 1)))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i]\
    \ >= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(1, len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(1, len(l) - 1):\n            if l[i]\
    \ < l[i + 1]:\n                return False\n    return True\n", "    if l ==\
    \ sorted(l) or l == sorted(l, reverse=True):\n        return True\n    else:\n\
    \        return False\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n\nprint(monotonic([1,2,3,4,5]))\nprint(monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        return _increasing(l)\n\
    \    elif l[0] > l[1]:\n        return _decreasing(l)\n    else:\n        return\
    \ _monotonic(l[1:])\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_19_sort_numbers
language: py
results:
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptwy89ywz.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmptwy89ywz.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptwy89ywz.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdyfyyk7_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpdyfyyk7_.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdyfyyk7_.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg83ze_l4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpg83ze_l4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg83ze_l4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpg83ze_l4.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpg83ze_l4.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa0o5jw1y.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpa0o5jw1y.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa0o5jw1y.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk16jz4l5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk16jz4l5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpk16jz4l5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpk16jz4l5.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpk16jz4l5.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit[number] for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[number] for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo6hbh8uw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpo6hbh8uw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpo6hbh8uw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpo6hbh8uw.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit[number] for number in\
    \ numbers]\n  File \"/tmp/tmpo6hbh8uw.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit[number] for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqufawwgh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqufawwgh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqufawwgh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqufawwgh.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpqufawwgh.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptw07xpwf.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptw07xpwf.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptw07xpwf.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptw07xpwf.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmptw07xpwf.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb5d_3g46.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpb5d_3g46.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpb5d_3g46.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpb5d_3g46.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpb5d_3g46.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num2digit[num] for num in numbers]\n\
    \    numbers.sort()\n    return ' '.join([digit2num[num] for num in numbers])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp34dd3loh.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp34dd3loh.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp34dd3loh.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp34dd3loh.py\"\
    , line 7, in sort_numbers\n    numbers = [num2digit[num] for num in numbers]\n\
    \  File \"/tmp/tmp34dd3loh.py\", line 7, in <listcomp>\n    numbers = [num2digit[num]\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [num for num in num_list]\n    return ' '.join(num_list)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwt4z865j.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpwt4z865j.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwt4z865j.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpwt4z865j.py\"\
    , line 11, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    return ' '.join([num for num in sorted(num_list)])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmxywasnt.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpmxywasnt.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmxywasnt.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmxywasnt.py\"\
    , line 8, in sort_numbers\n    return ' '.join([num for num in sorted(num_list)])\n\
    TypeError: sequence item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ij3hwb2.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6ij3hwb2.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6ij3hwb2.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6ij3hwb2.py\"\
    , line 7, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmp6ij3hwb2.py\", line 7, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split('\
    \ ')\n    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpen1um1_5.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpen1um1_5.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpen1um1_5.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpen1um1_5.py\"\
    , line 8, in sort_numbers\n    num_list.sort(key=lambda x: num_dict[x])\n  File\
    \ \"/tmp/tmpen1um1_5.py\", line 8, in <lambda>\n    num_list.sort(key=lambda x:\
    \ num_dict[x])\nKeyError: ''\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0apz_lkp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0apz_lkp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0apz_lkp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0apz_lkp.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp0apz_lkp.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxdyd7uxj.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpxdyd7uxj.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxdyd7uxj.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7hl5ixoj.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp7hl5ixoj.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7hl5ixoj.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi9mdqwsv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpi9mdqwsv.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpi9mdqwsv.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[n] for n in numbers]\n    return '\
    \ '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbha_6xrb.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbha_6xrb.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbha_6xrb.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbha_6xrb.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \  File \"/tmp/tmpbha_6xrb.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[n])\
    \ for n in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpipiyt0t_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpipiyt0t_.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpipiyt0t_.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num2int[num] for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int2num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyuc1q3x5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpyuc1q3x5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyuc1q3x5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyuc1q3x5.py\"\
    , line 7, in sort_numbers\n    numbers = [num2int[num] for num in numbers]\n \
    \ File \"/tmp/tmpyuc1q3x5.py\", line 7, in <listcomp>\n    numbers = [num2int[num]\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num2words(num) for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbq09gtrr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbq09gtrr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbq09gtrr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbq09gtrr.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \  File \"/tmp/tmpbq09gtrr.py\", line 7, in <listcomp>\n    numbers = [int(num2words(num))\
    \ for num in numbers]\nNameError: name 'num2words' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers.sort(key=lambda x: int(num2words(x)))\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq7begys.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpxq7begys.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxq7begys.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxq7begys.py\"\
    , line 7, in sort_numbers\n    numbers.sort(key=lambda x: int(num2words(x)))\n\
    \  File \"/tmp/tmpxq7begys.py\", line 7, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(num2words(x)))\nNameError: name 'num2words' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq3a0j_c_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpq3a0j_c_.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpq3a0j_c_.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  nums = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six':\
    \ 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list\
    \ = [nums[num] for num in num_list]\n    num_list.sort()\n    num_list = [str(num)\
    \ for num in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy6f0ecwq.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpy6f0ecwq.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpy6f0ecwq.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj21ktpx7.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpj21ktpx7.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpj21ktpx7.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_7fra497.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_7fra497.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_7fra497.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7cw01fxh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7cw01fxh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7cw01fxh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7cw01fxh.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmp7cw01fxh.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    return ' '.join([str(num) for num in sorted(num_list)])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuez63k0v.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpuez63k0v.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpuez63k0v.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [word_to_num(word) for word in numbers]\n\
    \    numbers.sort()\n    numbers = [num_to_word(num) for num in numbers]\n   \
    \ return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_bibddx9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_bibddx9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_bibddx9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_bibddx9.py\"\
    , line 7, in sort_numbers\n    numbers = [word_to_num(word) for word in numbers]\n\
    \  File \"/tmp/tmp_bibddx9.py\", line 7, in <listcomp>\n    numbers = [word_to_num(word)\
    \ for word in numbers]\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuxtnx2ou.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpuxtnx2ou.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpuxtnx2ou.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpuxtnx2ou.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpuxtnx2ou.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfr3mlb_l.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpfr3mlb_l.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfr3mlb_l.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpph70in7u.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpph70in7u.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpph70in7u.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_q3surpv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_q3surpv.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_q3surpv.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[x] for x in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(x) for x in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0paf39xd.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp0paf39xd.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0paf39xd.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(str(number))\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprck0nnzs.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmprck0nnzs.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprck0nnzs.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmprck0nnzs.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmprck0nnzs.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd7w1r7rq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpd7w1r7rq.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpd7w1r7rq.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpd7w1r7rq.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpd7w1r7rq.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppgf6ys85.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppgf6ys85.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppgf6ys85.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppgf6ys85.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmppgf6ys85.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  # convert string to list of words\n    numbers = numbers.split()\n    # convert\
    \ words to numbers\n    numbers = [word_to_num(number) for number in numbers]\n\
    \    # sort numbers\n    numbers.sort()\n    # convert numbers to words\n    numbers\
    \ = [num_to_word(number) for number in numbers]\n    # convert list to string\n\
    \    numbers = ' '.join(numbers)\n    return numbers\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoobh86cv.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpoobh86cv.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpoobh86cv.py\", line\
    \ 21, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpoobh86cv.py\"\
    , line 9, in sort_numbers\n    numbers = [word_to_num(number) for number in numbers]\n\
    \  File \"/tmp/tmpoobh86cv.py\", line 9, in <listcomp>\n    numbers = [word_to_num(number)\
    \ for number in numbers]\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_dict[num]) for num in\
    \ numbers]\n    numbers.sort()\n    numbers = [number_dict[num] for num in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmb9khudz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmb9khudz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmb9khudz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmb9khudz.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpmb9khudz.py\", line 7, in <listcomp>\n    numbers = [int(number_dict[num])\
    \ for num in numbers]\nNameError: name 'number_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5hvj14fl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5hvj14fl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5hvj14fl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5hvj14fl.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp5hvj14fl.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    return ' '.join([num for num in sorted(num_list)])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbpkh_4x6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpbpkh_4x6.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbpkh_4x6.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbpkh_4x6.py\"\
    , line 8, in sort_numbers\n    return ' '.join([num for num in sorted(num_list)])\n\
    TypeError: sequence item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaexbyod2.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpaexbyod2.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpaexbyod2.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [num for num in num_list]\n    return ' '.join(num_list)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_svk6mgk.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_svk6mgk.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_svk6mgk.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_svk6mgk.py\"\
    , line 11, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int[number] for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number[number] for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe4rkj1kg.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpe4rkj1kg.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpe4rkj1kg.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpe4rkj1kg.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int[number] for number in\
    \ numbers]\n  File \"/tmp/tmpe4rkj1kg.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int[number] for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8nmtxyou.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp8nmtxyou.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8nmtxyou.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa3uvb9ko.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpa3uvb9ko.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa3uvb9ko.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa3uvb9ko.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpa3uvb9ko.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpshmeqky8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpshmeqky8.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpshmeqky8.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int_to_num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp85sr89e1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp85sr89e1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp85sr89e1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp85sr89e1.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \  File \"/tmp/tmp85sr89e1.py\", line 7, in <listcomp>\n    numbers = [int(num_to_int[num])\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxrfvr8rx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpxrfvr8rx.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxrfvr8rx.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx8dgsv6o.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpx8dgsv6o.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx8dgsv6o.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpx8dgsv6o.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpx8dgsv6o.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [num_dict[num] for num in num_list]\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdvqf793a.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpdvqf793a.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdvqf793a.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdvqf793a.py\"\
    , line 10, in sort_numbers\n    num_list = [num_dict[num] for num in num_list]\n\
    \  File \"/tmp/tmpdvqf793a.py\", line 10, in <listcomp>\n    num_list = [num_dict[num]\
    \ for num in num_list]\nKeyError: 3\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpggvmkpol.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpggvmkpol.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpggvmkpol.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsskwvm5y.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpsskwvm5y.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsskwvm5y.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpsskwvm5y.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpsskwvm5y.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwq76__cl.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpwq76__cl.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwq76__cl.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [digit2num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5tunvwz1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5tunvwz1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5tunvwz1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5tunvwz1.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmp5tunvwz1.py\", line 7, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [number_dict[str(number)] for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0qt7bka0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0qt7bka0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0qt7bka0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0qt7bka0.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp0qt7bka0.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_dict[number]) for number in numbers]\nNameError: name 'number_dict'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1fqsotar.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp1fqsotar.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1fqsotar.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \nprint(sort_numbers('zero one two three four five six seven eight nine'))\nprint(sort_numbers('nine\
    \ eight seven six five four three two one zero'))\nprint(sort_numbers('one two\
    \ three four five six seven eight nine zero'))\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: "zero one two three four five six seven eight nine\nzero one two three four\
    \ five six seven eight nine\nzero one two three four five six seven eight nine\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbnjbm18c.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbnjbm18c.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbnjbm18c.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbnjbm18c.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpbnjbm18c.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_uv5kjj8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_uv5kjj8.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_uv5kjj8.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n\
    \    numbers = [num_dict[num] for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [str(num) for num in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5fxsaqvm.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp5fxsaqvm.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5fxsaqvm.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[x] for x in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(x) for x in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwhkjrr05.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpwhkjrr05.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwhkjrr05.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnty1sxm_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpnty1sxm_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpnty1sxm_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpnty1sxm_.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpnty1sxm_.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7yu0nbn1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7yu0nbn1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7yu0nbn1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7yu0nbn1.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp7yu0nbn1.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n\
    \    numbers = [num_dict[num] for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [str(num) for num in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9_4eocfj.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp9_4eocfj.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9_4eocfj.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n\
    \    numbers = [num_dict[num] for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [num for num in num_dict if num_dict[num] in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_digit[num]) for num in\
    \ numbers]\n    numbers.sort()\n    numbers = [digit_to_num[str(num)] for num\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnsnt9b0x.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpnsnt9b0x.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpnsnt9b0x.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpnsnt9b0x.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpnsnt9b0x.py\", line 7, in <listcomp>\n    numbers = [int(num_to_digit[num])\
    \ for num in numbers]\nNameError: name 'num_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyv94w8a.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmptyv94w8a.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptyv94w8a.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmput8pxcs0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmput8pxcs0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmput8pxcs0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_int[n]) for n in numbers]\n\
    \    numbers.sort()\n    numbers = [int_to_num[n] for n in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp007p8pws.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp007p8pws.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp007p8pws.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp007p8pws.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_int[n]) for n in numbers]\n\
    \  File \"/tmp/tmp007p8pws.py\", line 7, in <listcomp>\n    numbers = [int(num_to_int[n])\
    \ for n in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [digit2num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpce9e9z3d.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpce9e9z3d.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpce9e9z3d.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpce9e9z3d.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpce9e9z3d.py\", line 7, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num_dict[num] for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8008uvqv.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8008uvqv.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8008uvqv.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8008uvqv.py\"\
    , line 7, in sort_numbers\n    numbers = [num_dict[num] for num in numbers]\n\
    \  File \"/tmp/tmp8008uvqv.py\", line 7, in <listcomp>\n    numbers = [num_dict[num]\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl9l11ds_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpl9l11ds_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl9l11ds_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpl9l11ds_.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpl9l11ds_.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqad396qe.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqad396qe.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqad396qe.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfl3f5chr.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpfl3f5chr.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfl3f5chr.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvtd8jnmx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvtd8jnmx.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvtd8jnmx.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp65p991yv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp65p991yv.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp65p991yv.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpolecrspl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpolecrspl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpolecrspl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpolecrspl.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpolecrspl.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9qyjxmvn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9qyjxmvn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9qyjxmvn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9qyjxmvn.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp9qyjxmvn.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyts5kptm.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpyts5kptm.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyts5kptm.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyts5kptm.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpyts5kptm.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    return ' '.join([num for num in sorted(num_list)])\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2a4jawm.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpp2a4jawm.py\", line 18,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp2a4jawm.py\", line\
    \ 12, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpp2a4jawm.py\"\
    , line 8, in sort_numbers\n    return ' '.join([num for num in sorted(num_list)])\n\
    TypeError: sequence item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2z9rbwd1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z9rbwd1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2z9rbwd1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2z9rbwd1.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp2z9rbwd1.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9reeyv12.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp9reeyv12.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9reeyv12.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp38vylin7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp38vylin7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp38vylin7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp38vylin7.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmp38vylin7.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgulx7s0_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgulx7s0_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgulx7s0_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgulx7s0_.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpgulx7s0_.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt1oalw1l.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpt1oalw1l.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt1oalw1l.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpt1oalw1l.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpt1oalw1l.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmmxur50n.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmmxur50n.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmmxur50n.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmmxur50n.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpmmxur50n.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0p3cadpu.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0p3cadpu.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0p3cadpu.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0p3cadpu.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp0p3cadpu.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpflsz2cic.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpflsz2cic.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpflsz2cic.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpflsz2cic.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpflsz2cic.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf7fhupac.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpf7fhupac.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf7fhupac.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf7fhupac.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpf7fhupac.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_digit[num]) for num in\
    \ numbers]\n    numbers.sort()\n    numbers = [digit_to_num[str(num)] for num\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm0bskhpo.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpm0bskhpo.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpm0bskhpo.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpm0bskhpo.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpm0bskhpo.py\", line 7, in <listcomp>\n    numbers = [int(num_to_digit[num])\
    \ for num in numbers]\nNameError: name 'num_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2digits[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [digits2num[str(num)] for num in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp87bnurlp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp87bnurlp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp87bnurlp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp87bnurlp.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2digits[num]) for num in numbers]\n\
    \  File \"/tmp/tmp87bnurlp.py\", line 7, in <listcomp>\n    numbers = [int(num2digits[num])\
    \ for num in numbers]\nNameError: name 'num2digits' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2words(number)) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [num2words(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfebj7x1t.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpfebj7x1t.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfebj7x1t.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfebj7x1t.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2words(number)) for number in\
    \ numbers]\n  File \"/tmp/tmpfebj7x1t.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(num2words(number)) for number in numbers]\nNameError: name 'num2words'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaqteosz2.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpaqteosz2.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpaqteosz2.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [num for num in num_list]\n    return ' '.join(num_list)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplz90odj9.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmplz90odj9.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmplz90odj9.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmplz90odj9.py\"\
    , line 11, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptr0ufitw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptr0ufitw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptr0ufitw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptr0ufitw.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmptr0ufitw.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkpkd4u0i.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpkpkd4u0i.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkpkd4u0i.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe872ih_m.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpe872ih_m.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpe872ih_m.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2digit(num)) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [digit2num(num) for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2s8hrkas.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2s8hrkas.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2s8hrkas.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2s8hrkas.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2digit(num)) for num in numbers]\n\
    \  File \"/tmp/tmp2s8hrkas.py\", line 7, in <listcomp>\n    numbers = [int(num2digit(num))\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr5addycl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpr5addycl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpr5addycl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpr5addycl.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpr5addycl.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7sceg42.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpn7sceg42.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn7sceg42.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpn7sceg42.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpn7sceg42.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbnjm33s.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmptbnjm33s.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptbnjm33s.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[number]) for number in\
    \ numbers]\n    numbers.sort()\n    numbers = [NUMBERS[number] for number in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzkl6cc7z.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzkl6cc7z.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzkl6cc7z.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzkl6cc7z.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmpzkl6cc7z.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2words(number)) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [num2words(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp472z0cco.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp472z0cco.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp472z0cco.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp472z0cco.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2words(number)) for number in\
    \ numbers]\n  File \"/tmp/tmp472z0cco.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(num2words(number)) for number in numbers]\nNameError: name 'num2words'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ilatge5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5ilatge5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5ilatge5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5ilatge5.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp5ilatge5.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [number_dict_reverse[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplw32y2v6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmplw32y2v6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmplw32y2v6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmplw32y2v6.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n  File \"/tmp/tmplw32y2v6.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_dict[number]) for number in numbers]\nNameError: name 'number_dict'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    return ' '.join([str(num) for num in sorted(num_list)])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr5gx8344.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpr5gx8344.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpr5gx8344.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjbhqg_vl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjbhqg_vl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjbhqg_vl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjbhqg_vl.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpjbhqg_vl.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptfwth14s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptfwth14s.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptfwth14s.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjc_5zakp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjc_5zakp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjc_5zakp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(n)) for n in\
    \ numbers]\n    numbers.sort()\n    numbers = [digit_to_number(n) for n in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppgppliz9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppgppliz9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppgppliz9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppgppliz9.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(n)) for n in numbers]\n\
    \  File \"/tmp/tmppgppliz9.py\", line 7, in <listcomp>\n    numbers = [int(number_to_digit(n))\
    \ for n in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [convert_to_int(num) for num in numbers]\n\
    \    numbers.sort()\n    return ' '.join([convert_to_str(num) for num in numbers])\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpym7j77_n.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpym7j77_n.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpym7j77_n.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpym7j77_n.py\"\
    , line 7, in sort_numbers\n    numbers = [convert_to_int(num) for num in numbers]\n\
    \  File \"/tmp/tmpym7j77_n.py\", line 7, in <listcomp>\n    numbers = [convert_to_int(num)\
    \ for num in numbers]\nNameError: name 'convert_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(numeral_to_number(num)) for num\
    \ in numbers]\n    numbers.sort()\n    numbers = [number_to_numeral(num) for num\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz3f0fckd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpz3f0fckd.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpz3f0fckd.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpz3f0fckd.py\"\
    , line 7, in sort_numbers\n    numbers = [int(numeral_to_number(num)) for num\
    \ in numbers]\n  File \"/tmp/tmpz3f0fckd.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(numeral_to_number(num)) for num in numbers]\nNameError: name 'numeral_to_number'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [word_to_num(number) for number in\
    \ numbers]\n    numbers.sort()\n    numbers = [num_to_word(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm1hjdgyr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpm1hjdgyr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpm1hjdgyr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpm1hjdgyr.py\"\
    , line 7, in sort_numbers\n    numbers = [word_to_num(number) for number in numbers]\n\
    \  File \"/tmp/tmpm1hjdgyr.py\", line 7, in <listcomp>\n    numbers = [word_to_num(number)\
    \ for number in numbers]\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbp1svkb3.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbp1svkb3.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbp1svkb3.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbp1svkb3.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpbp1svkb3.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphrwng6_5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmphrwng6_5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphrwng6_5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmphrwng6_5.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmphrwng6_5.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [word_to_num(word) for word in numbers]\n\
    \    numbers.sort()\n    numbers = [num_to_word(num) for num in numbers]\n   \
    \ return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5shk3333.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5shk3333.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5shk3333.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5shk3333.py\"\
    , line 7, in sort_numbers\n    numbers = [word_to_num(word) for word in numbers]\n\
    \  File \"/tmp/tmp5shk3333.py\", line 7, in <listcomp>\n    numbers = [word_to_num(word)\
    \ for word in numbers]\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7qqa8mog.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp7qqa8mog.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7qqa8mog.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  # convert string to list\n    numbers = numbers.split()\n    # convert words\
    \ to numbers\n    numbers = [word_to_number(number) for number in numbers]\n \
    \   # sort list\n    numbers.sort()\n    # convert numbers to words\n    numbers\
    \ = [number_to_word(number) for number in numbers]\n    # convert list to string\n\
    \    numbers = ' '.join(numbers)\n    return numbers\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1n6bnn4y.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1n6bnn4y.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1n6bnn4y.py\", line\
    \ 21, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1n6bnn4y.py\"\
    , line 9, in sort_numbers\n    numbers = [word_to_number(number) for number in\
    \ numbers]\n  File \"/tmp/tmp1n6bnn4y.py\", line 9, in <listcomp>\n    numbers\
    \ = [word_to_number(number) for number in numbers]\nNameError: name 'word_to_number'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxcqavro9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxcqavro9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxcqavro9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxcqavro9.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpxcqavro9.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers.sort(key=lambda x: int(x))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy7ajb0ti.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpy7ajb0ti.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpy7ajb0ti.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpy7ajb0ti.py\"\
    , line 7, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpy7ajb0ti.py\"\
    , line 7, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int[number] for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number[number] for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ozp2apn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7ozp2apn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7ozp2apn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7ozp2apn.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int[number] for number in\
    \ numbers]\n  File \"/tmp/tmp7ozp2apn.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int[number] for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [num for num in num_list]\n    return ' '.join(num_list)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk1vedgb6.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpk1vedgb6.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpk1vedgb6.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpk1vedgb6.py\"\
    , line 11, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppe2t6yha.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmppe2t6yha.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppe2t6yha.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjkqdiyd.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqjkqdiyd.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqjkqdiyd.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_qlacubb.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_qlacubb.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_qlacubb.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp492u22ps.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp492u22ps.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp492u22ps.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp492u22ps.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp492u22ps.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1fa3n2tv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp1fa3n2tv.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1fa3n2tv.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[i] for\
    \ i in numbers.split()]\n    num_list.sort()\n    return ' '.join([str(i) for\
    \ i in num_list])\n\ndef check(candidate):\n    assert candidate('') == ''\n \
    \   assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqi173gw0.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpqi173gw0.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqi173gw0.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp833hh14q.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp833hh14q.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp833hh14q.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp833hh14q.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp833hh14q.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[n] for n in numbers]\n    return '\
    \ '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcraxc_ev.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcraxc_ev.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpcraxc_ev.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpcraxc_ev.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \  File \"/tmp/tmpcraxc_ev.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[n])\
    \ for n in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[i] for i in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(i) for i in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe1a34m8n.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpe1a34m8n.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpe1a34m8n.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[str(num)] for num in numbers]\n \
    \   return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8_00vckq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8_00vckq.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8_00vckq.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8_00vckq.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmp8_00vckq.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    num_list.sort()\n    return ' '.join([num for\
    \ num in num_list])\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjzvad5d.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpbjzvad5d.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbjzvad5d.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbjzvad5d.py\"\
    , line 9, in sort_numbers\n    return ' '.join([num for num in num_list])\nTypeError:\
    \ sequence item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_jqella.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpn_jqella.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn_jqella.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpn_jqella.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpn_jqella.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[n] for\
    \ n in numbers.split()]\n    return ' '.join([k for k, v in num_dict.items() if\
    \ v in sorted(num_list)])\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num2words(num) for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0uic5wv7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0uic5wv7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0uic5wv7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0uic5wv7.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \  File \"/tmp/tmp0uic5wv7.py\", line 7, in <listcomp>\n    numbers = [int(num2words(num))\
    \ for num in numbers]\nNameError: name 'num2words' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoq90m9ho.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpoq90m9ho.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpoq90m9ho.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpoq90m9ho.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpoq90m9ho.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzgl8od4g.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpzgl8od4g.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzgl8od4g.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(i) for i in numbers]\n    numbers.sort()\n\
    \    numbers = [str(i) for i in numbers]\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpizod_gez.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpizod_gez.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpizod_gez.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpizod_gez.py\"\
    , line 7, in sort_numbers\n    numbers = [int(i) for i in numbers]\n  File \"\
    /tmp/tmpizod_gez.py\", line 7, in <listcomp>\n    numbers = [int(i) for i in numbers]\n\
    ValueError: invalid literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_op60uci.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_op60uci.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_op60uci.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv63ge7xa.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpv63ge7xa.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv63ge7xa.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv63ge7xa.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpv63ge7xa.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    num_list.sort()\n    return ' '.join([num_dict.keys()[num_dict.values().index(num)]\
    \ for num in num_list])\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp79ga52wx.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp79ga52wx.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp79ga52wx.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp79ga52wx.py\"\
    , line 9, in sort_numbers\n    return ' '.join([num_dict.keys()[num_dict.values().index(num)]\
    \ for num in num_list])\n  File \"/tmp/tmp79ga52wx.py\", line 9, in <listcomp>\n\
    \    return ' '.join([num_dict.keys()[num_dict.values().index(num)] for num in\
    \ num_list])\nAttributeError: 'dict_values' object has no attribute 'index'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjecyytum.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjecyytum.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjecyytum.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjecyytum.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_dict[num]) for num in numbers]\n\
    \  File \"/tmp/tmpjecyytum.py\", line 7, in <listcomp>\n    numbers = [int(num_dict[num])\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp958c458b.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp958c458b.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp958c458b.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmputs9ceqe.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmputs9ceqe.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmputs9ceqe.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num2int[num] for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int2num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmvd9xlyp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmvd9xlyp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmvd9xlyp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmvd9xlyp.py\"\
    , line 7, in sort_numbers\n    numbers = [num2int[num] for num in numbers]\n \
    \ File \"/tmp/tmpmvd9xlyp.py\", line 7, in <listcomp>\n    numbers = [num2int[num]\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num_dict[num] for num in numbers]\n\
    \    numbers.sort()\n    numbers = [num_dict_inv[num] for num in numbers]\n  \
    \  return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpycf5v80y.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpycf5v80y.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpycf5v80y.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpycf5v80y.py\"\
    , line 7, in sort_numbers\n    numbers = [num_dict[num] for num in numbers]\n\
    \  File \"/tmp/tmpycf5v80y.py\", line 7, in <listcomp>\n    numbers = [num_dict[num]\
    \ for num in numbers]\nNameError: name 'num_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [num2int[num] for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int2num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpypj2b8it.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpypj2b8it.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpypj2b8it.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpypj2b8it.py\"\
    , line 7, in sort_numbers\n    numbers = [num2int[num] for num in numbers]\n \
    \ File \"/tmp/tmpypj2b8it.py\", line 7, in <listcomp>\n    numbers = [num2int[num]\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers.sort(key=lambda x: int(x))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvokm4vz7.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpvokm4vz7.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvokm4vz7.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvokm4vz7.py\"\
    , line 7, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpvokm4vz7.py\"\
    , line 7, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[x] for x in num_list]\n    num_list.sort()\n    num_list\
    \ = [str(x) for x in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp0xpr8r5.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpp0xpr8r5.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp0xpr8r5.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg7k3mizr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpg7k3mizr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg7k3mizr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpg7k3mizr.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpg7k3mizr.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit(number)) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0gz5wq1s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0gz5wq1s.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0gz5wq1s.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0gz5wq1s.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmp0gz5wq1s.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo1em2_u_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpo1em2_u_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpo1em2_u_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpo1em2_u_.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpo1em2_u_.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_to_digit[number]) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number[str(number)]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp15g_sf5v.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp15g_sf5v.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp15g_sf5v.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp15g_sf5v.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp15g_sf5v.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = [num_dict[num]\
    \ for num in numbers.split()]\n    num_list.sort()\n    return ' '.join([num for\
    \ num in num_list])\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgpe8efci.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpgpe8efci.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgpe8efci.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgpe8efci.py\"\
    , line 9, in sort_numbers\n    return ' '.join([num for num in num_list])\nTypeError:\
    \ sequence item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx5_xdc_6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpx5_xdc_6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx5_xdc_6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpx5_xdc_6.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpx5_xdc_6.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list.sort(key=lambda x: num_dict[x])\n    return ' '.join(num_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpop2dbavk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpop2dbavk.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpop2dbavk.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpop2dbavk.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpop2dbavk.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp13n7vcc8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp13n7vcc8.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp13n7vcc8.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [number_dict[str(number)] for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwohqv28r.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpwohqv28r.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwohqv28r.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpwohqv28r.py\"\
    , line 7, in sort_numbers\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpwohqv28r.py\", line 7, in <listcomp>\n    numbers\
    \ = [int(number_dict[number]) for number in numbers]\nNameError: name 'number_dict'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfv4d13i.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfv4d13i.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfv4d13i.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfv4d13i.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpmfv4d13i.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq8ktf7q6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpq8ktf7q6.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpq8ktf7q6.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpq8ktf7q6.py\"\
    , line 7, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpq8ktf7q6.py\", line 7, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int_to_num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppqa6a0os.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppqa6a0os.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppqa6a0os.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppqa6a0os.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \  File \"/tmp/tmppqa6a0os.py\", line 7, in <listcomp>\n    numbers = [int(num_to_int[num])\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbls3oqf6.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpbls3oqf6.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbls3oqf6.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpltaad770.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpltaad770.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpltaad770.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_digit(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number) for\
    \ number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7uvx_epw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7uvx_epw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7uvx_epw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7uvx_epw.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmp7uvx_epw.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [NUMBERS[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf4txzvbv.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpf4txzvbv.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf4txzvbv.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf4txzvbv.py\"\
    , line 7, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpf4txzvbv.py\", line 7, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqsbseofa.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqsbseofa.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqsbseofa.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqsbseofa.py\"\
    , line 7, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpqsbseofa.py\", line 7, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  numbers = numbers.split()\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \    numbers.sort()\n    numbers = [int_to_num[num] for num in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkl532_pt.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpkl532_pt.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkl532_pt.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpkl532_pt.py\"\
    , line 7, in sort_numbers\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \  File \"/tmp/tmpkl532_pt.py\", line 7, in <listcomp>\n    numbers = [int(num_to_int[num])\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \"\"\"\n  \
    \  num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n\
    \    num_list = [num_dict[num] for num in num_list]\n    num_list.sort()\n   \
    \ num_list = [str(num) for num in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj6y8oy0p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpj6y8oy0p.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpj6y8oy0p.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception

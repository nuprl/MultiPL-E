name: HumanEval_122_add_elements
language: r
prompt: "# Given a non-empty vector of integers arr and an integer k, return\n# the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  # Example:\n# >>> add_elements(c(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n# 24\n# Constraints:\n\
  # 1. 1 <= len(arr) <= 100\n# 2. 1 <= k <= len(arr)\nadd_elements <- function(arr,\
  \ k) {"
tests: "test_humaneval <- function() {\ncandidate <- add_elements\n    if(!identical(candidate(c(1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99), 3), -4)){quit('no', 1)}\n    if(!identical(candidate(c(111,\
  \ 121, 3, 4000, 5, 6), 2), 0)){quit('no', 1)}\n    if(!identical(candidate(c(11,\
  \ 21, 3, 90, 5, 6, 7, 8, 9), 4), 125)){quit('no', 1)}\n    if(!identical(candidate(c(111,\
  \ 21, 3, 4000, 5, 6, 7, 8, 9), 4), 24)){quit('no', 1)}\n    if(!identical(candidate(c(1),\
  \ 1), 1)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  \n  sum <- 0\n  \n  for(i in 1:k) {\n    \n    sum <- sum + arr[i]\n\
    \    \n  }\n  \n  return(sum)\n}\n", "\n  sum <- 0\n  for(i in 1:k) {\n    sum\
    \ <- sum + arr[i]\n  }\n  return(sum)\n}\n</cell>\n<cell>", "\n  sum(arr[1:k])\n\
    }\n</cell>\n<cell>", "\n  sum(arr[1:k])\n}\n</cell>\n<cell>", "\n  k <- min(k,\
    \ length(arr))\n  sum <- 0\n  for(i in 1:k) {\n    sum <- sum + arr[i]\n  }\n\
    \  return(sum)\n}\n", "\n  k <- min(k, length(arr))\n  sum <- 0\n  for(i in 1:k)\
    \ {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n}\n", "\n  \n  sum <- 0\n  \n\
    \  for(i in 1:k) {\n    \n    sum <- sum + arr[i]\n    \n  }\n  \n  return(sum)\n\
    }\n", "\n  sum(arr[1:k])\n}\n", "\n  k <- min(k, length(arr))\n  sum <- 0\n  for(i\
    \ in 1:k) {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n}\n</cell>\n<cell>",
  "\n  sum <- 0\n  for(i in 1:k) {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n\
    }\n", "\n  k <- as.integer(k)\n  sum <- 0\n  for(i in 1:k) {\n    sum <- sum +\
    \ arr[i]\n  }\n  return(sum)\n}\n", "\n  \n  sum <- 0\n  \n  for(i in 1:k) {\n\
    \    \n    sum <- sum + arr[i]\n    \n  }\n  \n  return(sum)\n}\n", "\n  \n  if(k\
    \ > length(arr)) {\n    return(0)\n  }\n  \n  if(k == 1) {\n    return(sum(arr[1:k]))\n\
    \  }\n  \n  if(k == length(arr)) {\n    return(sum(arr))\n  }\n  \n  return(sum(arr[1:k]\
    \ + arr[k+1:length(arr)]))\n}\n", "\n  \n  result <- 0\n  \n  for(i in 1:k) {\n\
    \    result <- result + arr[i]\n  }\n  \n  return(result)\n}\n", "\n  sum <- 0\n\
    \  for(i in 1:k) {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n}\n", "\n  sum(arr[seq(1,\
    \ k, by = 2)]) + sum(arr[seq(2, k, by = 2)])\n}\n</cell>\n<cell>", "\n  sum(arr[1:k])\n\
    }\n</cell>\n<cell>", "\n  \n  sum <- 0\n  \n  for(i in 1:k) {\n    \n    sum <-\
    \ sum + arr[i]\n    \n  }\n  \n  return(sum)\n}\n</cell>\n<cell>", "\n  sum <-\
    \ 0\n  for(i in 1:k) {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n}\n", "\n\
    \  sum <- 0\n  for(i in 1:k) {\n    sum <- sum + arr[i]\n  }\n  return(sum)\n\
    }\n"]
stop_tokens:
- "\n#"
- "\n```"

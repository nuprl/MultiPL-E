name: HumanEval_103_rounded_avg
language: r
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# '0b11'\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# '0b1111'\n# >>> rounded_avg(20, 33)\n#\
  \ '0b11010'\nrounded_avg <- function(n, m) {"
tests: "test_humaneval <- function() {\ncandidate <- rounded_avg\n    if(!identical(candidate(1,\
  \ 5), '0b11')){quit('no', 1)}\n    if(!identical(candidate(7, 13), '0b1010')){quit('no',\
  \ 1)}\n    if(!identical(candidate(964, 977), '0b1111001010')){quit('no', 1)}\n\
  \    if(!identical(candidate(996, 997), '0b1111100100')){quit('no', 1)}\n    if(!identical(candidate(560,\
  \ 851), '0b1011000010')){quit('no', 1)}\n    if(!identical(candidate(185, 546),\
  \ '0b101101110')){quit('no', 1)}\n    if(!identical(candidate(362, 496), '0b110101101')){quit('no',\
  \ 1)}\n    if(!identical(candidate(350, 902), '0b1001110010')){quit('no', 1)}\n\
  \    if(!identical(candidate(197, 233), '0b11010111')){quit('no', 1)}\n    if(!identical(candidate(7,\
  \ 5), -1)){quit('no', 1)}\n    if(!identical(candidate(5, 1), -1)){quit('no', 1)}\n\
  \    if(!identical(candidate(5, 5), '0b101')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)", "\n  \n  # Write your code here\n  \n  \n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)",
  "\n  if(n > m) return(-1)\n  return(as.character(round(as.integer(n) + as.integer(m)/2,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ > m, n, m)\n  n <- ceiling(n / 2)\n  m <- ceiling(m / 2)\n  n <- ifelse(n <\
    \ m, n, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)", "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  return(sprintf('0b%b', n %/% m))\n}\n",
  "\n  if(n > m) return(-1)\n  return(paste0(\"0b\", round(n / (m - n) * 8)))\n}\n",
  "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n + (m - n)/2, 0)),\
    \ collapse=\"\"))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)", "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a tags=r,rounding,binary\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `rounded_avg(-5, 5)`\n\
    <|/ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| a |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n\
    \  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n\
    <|/ a dscore=3 tags=r,rounding,binary |>\n<| a tags=r,rounding,binary |>\n<code>\n\
    rounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=2\
    \ |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a tags=r,rounding,binary\
    \ |>\n<| a dscore=2 |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n\
    \  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n\
    <|/ a tags=r,rounding,binary |>\n<| a tags=r,rounding,binary |>\n<code>\nrounded_avg\
    \ <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)", "\n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  return(paste0(round(n\
    \ + (m - n)/2, 0), collapse = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m\
    \ <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if (n > m) {\n    n <- m\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n\
    \ <- as.integer(binary.convert(n, base = 2))\n  m <- as.integer(binary.convert(m,\
    \ base = 2))\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  m <- as.integer(binary.convert(m, base = 2))\n  \n  n <- n + m\n\
    \  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2\n  \n  n\
    \ <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  \n  n <- n + m\n  \n  n <- as.integer(binary.convert(n, base =\
    \ 2))\n  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n\
    \  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n\
    \ <- n + m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n /\
    \ 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n * 2\n  \n\
    \  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n + m\n  \n  n <-\
    \ as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n, base =\
    \ 2))\n  \n  n <- n + m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n\
    \  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n\
    \ <- n * 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n +\
    \ m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2", "\n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n    n <- 0\n    m <-\
    \ 1\n  }\n  \n  n <- sprintf('%b', n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n\
    \  m <- m[-length(m)] \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n\
    \ <- paste0('0b', n)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  result <- 0\n  \n  for(i in n:m) {\n    result <- result\
    \ + i\n  }\n  \n  result <- result / 2\n  \n  result <- as.character(result)\n\
    \  \n  result <- paste0(\"0b\", result)\n  \n  return(result)\n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    -1\n  } else {\n\
    \    n <- as.integer(n)\n    m <- as.integer(m)\n    \n    n <- n + (m - n)\n\
    \    n <- n / 2\n    n <- formatC(as.integer(n), width = 2, format = \"d\", flag\
    \ = \"0\")\n    n <- paste0(\"0b\", n)\n  }\n  \n  return(n)\n}\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the factorial of a number. \nThe factorial of a number is defined as the product\
    \ of all the integers up to and including the number itself. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 x 1 = 120. \nThe function should return the factorial as a string.\
    \ \nIf the input number is negative, return -1.\nIf n is greater than or equal\
    \ to 0, return 1.\nIf n is 0, return 1.\nExamples:\n>>> factorial(5)\n'120'\n\
    >>> factorial(10)\n'3628800'\n>>> factorial(-1)\n-1\n>>> factorial(0)\n1\n>>>\
    \ factorial(1)\n1\n>>> factorial(2)\n2\n\n</text>\n<cell>\nfactorial <- function(n)\
    \ {\n  n <- as.integer(n)\n  \n  if(n < 0) {\n    -1\n  } else {\n    n <- as.integer(n)\n\
    \    \n    n <- n * factorial(n-1)\n  }\n  \n  return(n)\n}\n</cell>\n<cell>\n\
    factorial(5)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the\
    \ number of ways to choose k items from n items. \nThe function should return\
    \ the number of ways as a string. \nIf k is greater than n, return -1.\nIf k is\
    \ 0, return 1.\nIf n is less than or equal to 0, return 0.\nExamples:\n>>> choose_k(5,\
    \ 3)\n'2'\n>>> choose_k(2, 0)\n'1'\n>>> choose_k(2, 1)\n'1'\n>>> choose_k(2, 2)\n\
    '0'\n\n</text>\n<cell>\nchoose_k <- function(n, k) {\n  n <- as.integer(n)\n \
    \ k <- as.integer(k)\n  \n  if(n < 0) {\n    -1\n  } else {\n    n <- as.integer(n)\n\
    \    k <- as.integer(k)\n    \n    n <- n - k\n    n <- n / factorial(n)\n  }\n\
    \  \n  ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if (n > m) {\n    return(-1)\n\
    \  }\n  n <- n - 1\n  m <- m - 1\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n\
    \ / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8\
    \ + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m\
    \ / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m\
    \ * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <-\
    \ m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <-\
    \ m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <-\
    \ m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <-\
    \ m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= 0) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(as.character(round(n / (m - n) * 2, 0)), collapse =\
    \ \"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m)\
    \ {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n", "\n  \n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    \n    n <- n + 1\n    m <- m -\
    \ 1\n    \n    n <- paste0(\"0b\", n)\n    m <- paste0(\"0b\", m)\n    \n    n\
    \ <- n[-length(n)]\n    m <- m[-length(m)] \n    \n    n <- paste0(n, m)\n   \
    \ \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n\
    \    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n\
    \    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m /\
    \ 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.character(n)\n\
    \  m <- as.character(m)\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n\
    \  \n  return(paste0(m, n))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  if (n > m) {\n    n <- m\n  }\n  n <- n + 1\n  m <- m + 1\n  n <- n - (n %%\
    \ 2)\n  m <- m - (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n\
    \ + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m\
    \ %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n\
    \  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <-\
    \ n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m\
    \ %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n\
    \  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <-\
    \ n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  n\
    \ <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n > m) {\n    return(-1)\n  }\n  n <- n + 1\n  m\
    \ <- m + 1\n  s <- 0\n  while (n <= m) {\n    s <- s + n\n    n <- n + 1\n  }\n\
    \  return(as.character(bin(round(s/m), 2)))\n}\n", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep=\"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n >= m) {\n    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n\
    \    s <- 0\n    \n    while(n <= m) {\n      s <- s + n\n      n <- n + 1\n \
    \   }\n    \n    s <- s / m\n    \n    s <- paste0(s, 'b')\n    \n    s <- substr(s,\
    \ 1, nchar(s))\n    \n    s <- substr(s, (nchar(s) - 1), nchar(s))\n    \n   \
    \ s\n  }\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(round(n / m), collapse\
    \ = \"\"))\n}\n", "\n  if(n >= m) return(-1)\n  n <- n\n  m <- m\n  n <- n + 1\n\
    \  m <- m + 1\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n\
    \  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n +\
    \ (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n\
    \  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m -\
    \ (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n\
    \  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n -\
    \ (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n\
    \  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m +\
    \ (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n\
    \  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n +\
    \ (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n\
    \  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m -\
    \ (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n\
    \  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n -\
    \ (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n\
    \  n <- n - (n %% 10)\n  m <- ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n\
    \    n <- n - (n %% 10)\n    m <- m - (m %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %%\
    \ 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %%\
    \ 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n\
    \ + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <-\
    \ m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n\
    \    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %%\
    \ 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %%\
    \ 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n\
    \ + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <-\
    \ m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n\
    \    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n +\
    \ (m - n) / 2, 0)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n\
    \ == m) return(as.character(n))\n  if(n == m) return(-1)\n  if(n == 0) return(0)\n\
    \  if(n == 1) return(1)\n  if(n == -1) return(-1)\n  if(n == -2) return(-1)\n\
    \  if(n == -3) return(-1)\n  if(n == -4) return(-1)\n  if(n == -5) return(-1)\n\
    \  if(n == -6) return(-1)\n  if(n == -7) return(-1)\n  if(n == -8) return(-1)\n\
    \  if(n == -9) return(-1)\n  if(n == -10) return(-1)\n  if(n == -11) return(-1)\n\
    \  if(n == -12) return(-1)\n  if(n == -13) return(-1)\n  if(n == -14) return(-1)\n\
    \  if(n == -15) return(-1)\n  if(n == -16) return(-1)\n  if(n == -17) return(-1)\n\
    \  if(n == -18) return(-1)\n  if(n == -19) return(-1)\n  if(n == -20) return(-1)\n\
    \  if(n == -21) return(-1)\n  if(n == -22) return(-1)\n  if(n == -23) return(-1)\n\
    \  if(n == -24) return(-1)\n  if(n == -25) return(-1)\n  if(n == -26) return(-1)\n\
    \  if(n == -27) return(-1)\n  if(n == -28) return(-1)\n  if(n == -29) return(-1)\n\
    \  if(n == -30) return(-1)\n  if(n == -31) return(-1)\n  if(n == -32) return(-1)\n\
    \  if(n == -33) return(-1)\n  if(n == -34) return(-1)\n  if(n == -35) return(-1)\n\
    \  if(n == -36) return(-1)\n  if(n == -37) return(-1)\n  if(n == -38) return(-1)\n\
    \  if(n == -39) return(-1)\n  if(n == -40) return(-1)\n  if(n == -41) return(-1)\n\
    \  if(n == -42) return(-1)\n  if(n == -43) return(-1)\n  if(n == -44) return(-1)\n\
    \  if(n == -45) return(-1)\n  if(n == -46) return(-1)\n  if(n == -47) return(-1)\n\
    \  if(n == -48) return(-1)\n  ", "\n  \n  if(n >= m) return(-1)\n  \n  return(paste0(round(m/n),'b'))\n\
    }\n", "\n  if(n >= m) return(-1)\n  return(paste0(round(m/n), collapse=\"\"))\n\
    }\n", "\n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 8\n  m <- m * 8\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 16\n  m <- m * 16\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 32\n  m <- m * 32\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 64\n  m <- m * 64\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 128\n  m <- m * 128\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 256\n  m <- m * 256\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 512\n  m <- m * 512\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 1024\n  m <- m * 1024\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 2048\n  m <- m * 2048\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 4096\n  m <- m * 4096\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 8192\n  m <- m * 8192\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 16384\n  m <- m * 16384\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  ", "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n", "\n  if(n > m) return(-1)\n  return(sprintf('0b%b',\
    \ round(n / (m - n) * m)))\n}\n", "\n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  return(as.character(round(n/m, 0)))\n}\n", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n   \
    \ n <- seq(from=n, to=m, by=1)\n  }\n  \n  n <- n[order(n)]\n  m <- m[order(m)]\n\
    \  \n  n <- n[1]\n  m <- m[1]\n  \n  return(paste0(\"0b\", sprintf(\"%0*d\", length(m)-1,\
    \ m), collapse=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n   \
    \ n <- 0\n    m <- 1\n  }\n  \n  n <- n - (m %% n)\n  m <- m - (n %% m)\n  \n\
    \  n <- paste0(\"0b\", sprintf(\"%0*d\", n, m))\n  \n  return(n)\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_", "\n  if(n >= m)\
    \ return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)", "\n  \n  if(n > m) return(-1)\n  \n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ sprintf('%b', n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n  m <-\
    \ m[-length(m)] \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n <- paste0('0b',\
    \ n)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n * 2\n  m <- m * 2\n  \n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(", "\n  if(n > m) {\n    return(-1)\n  }\n  return(paste0(floor(n\
    \ + (m - n)/2), \"b\", ceiling(m)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ n / 2\n  m <- m / 2\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n,\
    \ m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m\
    \ / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n \
    \ \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n\
    \  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n\
    \  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  n <-\
    \ round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <-\
    \ as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n\
    \  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n\
    \ / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n,\
    \ m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m\
    \ / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n \
    \ \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m",
  "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n -\
    \ 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m\
    \ <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <-\
    \ m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m -\
    \ 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n\
    \  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n\
    \ <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <=\
    \ m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m)\
    \ return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n\
    \  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n\
    \  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n\
    \ <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <-\
    \ n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n\
    \ - 1\n  m <- m - 1\n  \n  if(n <= m) ", "\n  \n  if(n > m) {\n    \n    return(-1)\n\
    \    \n  } else {\n    \n    sum <- 0\n    \n    for(i in seq(from=n, to=m)) {\n\
    \      \n      sum <- sum + i\n      \n    }\n    \n    avg <- round(sum/(n+m))\n\
    \    \n    bin(avg)\n    \n  }\n  \n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ceiling(n / 2)\n  m <- ceiling(m / 2)\n  n <- ifelse(n <\
    \ m, n, m)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)"]
stop_tokens:
- "\n#"
- "\n```"

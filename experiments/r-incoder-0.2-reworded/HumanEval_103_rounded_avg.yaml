name: HumanEval_103_rounded_avg
language: r
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# '0b11'\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# '0b1111'\n# >>> rounded_avg(20, 33)\n#\
  \ '0b11010'\nrounded_avg <- function(n, m) {"
tests: "test_humaneval <- function() {\ncandidate <- rounded_avg\n    if(!identical(candidate(1,\
  \ 5), '0b11')){quit('no', 1)}\n    if(!identical(candidate(7, 13), '0b1010')){quit('no',\
  \ 1)}\n    if(!identical(candidate(964, 977), '0b1111001010')){quit('no', 1)}\n\
  \    if(!identical(candidate(996, 997), '0b1111100100')){quit('no', 1)}\n    if(!identical(candidate(560,\
  \ 851), '0b1011000010')){quit('no', 1)}\n    if(!identical(candidate(185, 546),\
  \ '0b101101110')){quit('no', 1)}\n    if(!identical(candidate(362, 496), '0b110101101')){quit('no',\
  \ 1)}\n    if(!identical(candidate(350, 902), '0b1001110010')){quit('no', 1)}\n\
  \    if(!identical(candidate(197, 233), '0b11010111')){quit('no', 1)}\n    if(!identical(candidate(7,\
  \ 5), -1)){quit('no', 1)}\n    if(!identical(candidate(5, 1), -1)){quit('no', 1)}\n\
  \    if(!identical(candidate(5, 5), '0b101')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)", "\n  \n  # Write your code here\n  \n  \n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)",
  "\n  if(n > m) return(-1)\n  return(as.character(round(as.integer(n) + as.integer(m)/2,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ > m, n, m)\n  n <- ceiling(n / 2)\n  m <- ceiling(m / 2)\n  n <- ifelse(n <\
    \ m, n, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < 0, -1,\
    \ n)\n  m <- ifelse(m < 0, -1, m)", "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  return(sprintf('0b%b', n %/% m))\n}\n",
  "\n  if(n > m) return(-1)\n  return(paste0(\"0b\", round(n / (m - n) * 8)))\n}\n",
  "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n + (m - n)/2, 0)),\
    \ collapse=\"\"))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)", "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a tags=r,rounding,binary\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `rounded_avg(-5, 5)`\n\
    <|/ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| c |>\nIt works for negative numbers. Try `rounded_avg(-5, 5)`\n<|/\
    \ c |>\n<| a |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n\
    \  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n\
    <|/ a dscore=3 tags=r,rounding,binary |>\n<| a tags=r,rounding,binary |>\n<code>\n\
    rounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=2\
    \ |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a tags=r,rounding,binary\
    \ |>\n<| a dscore=2 |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)\n\
    \  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n\
    <|/ a tags=r,rounding,binary |>\n<| a tags=r,rounding,binary |>\n<code>\nrounded_avg\
    \ <- function(n, m) {\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nrounded_avg <- function(n, m) {\n  if(n > m) return(-1)", "\n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  return(paste0(round(n\
    \ + (m - n)/2, 0), collapse = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m\
    \ <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if (n > m) {\n    n <- m\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n\
    \ <- as.integer(binary.convert(n, base = 2))\n  m <- as.integer(binary.convert(m,\
    \ base = 2))\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  m <- as.integer(binary.convert(m, base = 2))\n  \n  n <- n + m\n\
    \  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2\n  \n  n\
    \ <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  \n  n <- n + m\n  \n  n <- as.integer(binary.convert(n, base =\
    \ 2))\n  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n\
    \  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n\
    \ <- n + m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n /\
    \ 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n * 2\n  \n\
    \  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n + m\n  \n  n <-\
    \ as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n,\
    \ base = 2))\n  \n  n <- n * 2\n  \n  n <- as.integer(binary.convert(n, base =\
    \ 2))\n  \n  n <- n + m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n\
    \  \n  n <- n / 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n\
    \ <- n * 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n +\
    \ m\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  n <- n / 2", "\n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n    n <- 0\n    m <-\
    \ 1\n  }\n  \n  n <- sprintf('%b', n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n\
    \  m <- m[-length(m)] \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n\
    \ <- paste0('0b', n)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  result <- 0\n  \n  for(i in n:m) {\n    result <- result\
    \ + i\n  }\n  \n  result <- result / 2\n  \n  result <- as.character(result)\n\
    \  \n  result <- paste0(\"0b\", result)\n  \n  return(result)\n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    -1\n  } else {\n\
    \    n <- as.integer(n)\n    m <- as.integer(m)\n    \n    n <- n + (m - n)\n\
    \    n <- n / 2\n    n <- formatC(as.integer(n), width = 2, format = \"d\", flag\
    \ = \"0\")\n    n <- paste0(\"0b\", n)\n  }\n  \n  return(n)\n}\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the factorial of a number. \nThe factorial of a number is defined as the product\
    \ of all the integers up to and including the number itself. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 x 1 = 120. \nThe function should return the factorial as a string.\
    \ \nIf the input number is negative, return -1.\nIf n is greater than or equal\
    \ to 0, return 1.\nIf n is 0, return 1.\nExamples:\n>>> factorial(5)\n'120'\n\
    >>> factorial(10)\n'3628800'\n>>> factorial(-1)\n-1\n>>> factorial(0)\n1\n>>>\
    \ factorial(1)\n1\n>>> factorial(2)\n2\n\n</text>\n<cell>\nfactorial <- function(n)\
    \ {\n  n <- as.integer(n)\n  \n  if(n < 0) {\n    -1\n  } else {\n    n <- as.integer(n)\n\
    \    \n    n <- n * factorial(n-1)\n  }\n  \n  return(n)\n}\n</cell>\n<cell>\n\
    factorial(5)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the\
    \ number of ways to choose k items from n items. \nThe function should return\
    \ the number of ways as a string. \nIf k is greater than n, return -1.\nIf k is\
    \ 0, return 1.\nIf n is less than or equal to 0, return 0.\nExamples:\n>>> choose_k(5,\
    \ 3)\n'2'\n>>> choose_k(2, 0)\n'1'\n>>> choose_k(2, 1)\n'1'\n>>> choose_k(2, 2)\n\
    '0'\n\n</text>\n<cell>\nchoose_k <- function(n, k) {\n  n <- as.integer(n)\n \
    \ k <- as.integer(k)\n  \n  if(n < 0) {\n    -1\n  } else {\n    n <- as.integer(n)\n\
    \    k <- as.integer(k)\n    \n    n <- n - k\n    n <- n / factorial(n)\n  }\n\
    \  \n  ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if (n > m) {\n    return(-1)\n\
    \  }\n  n <- n - 1\n  m <- m - 1\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n\
    \ / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8\
    \ + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m\
    \ / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m\
    \ * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <-\
    \ m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <-\
    \ m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  n <- n * 8 + n\n  m <- m * 8 + m\n  n <- n / 8\n  m <-\
    \ m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- n * 8 + n\n  m <-\
    \ m * 8 + m\n  n <- n / 8\n  m <- m / 8\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- n * ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= 0) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(as.character(round(n / (m - n) * 2, 0)), collapse =\
    \ \"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m)\
    \ {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m\
    \ - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n  m <- as.integer(floor(m/2))\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(floor(n/2))\n\
    \  m <- as.integer(floor(m/2))\n", "\n  \n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    \n    n <- n + 1\n    m <- m -\
    \ 1\n    \n    n <- paste0(\"0b\", n)\n    m <- paste0(\"0b\", m)\n    \n    n\
    \ <- n[-length(n)]\n    m <- m[-length(m)] \n    \n    n <- paste0(n, m)\n   \
    \ \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n\
    \    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <-\
    \ n[-length(n)]\n    \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n \
    \   \n    n <- paste0(n, m)\n    \n    n <- n[-length(n)]\n    \n    n <- paste0(n,\
    \ m)\n    \n    n <- n[-length(n)]", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n\
    \    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m /\
    \ 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.character(n)\n\
    \  m <- as.character(m)\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n\
    \  \n  return(paste0(m, n))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  if (n > m) {\n    n <- m\n  }\n  n <- n + 1\n  m <- m + 1\n  n <- n - (n %%\
    \ 2)\n  m <- m - (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n\
    \ + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m\
    \ %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n\
    \  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <-\
    \ n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m\
    \ %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n\
    \  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  n <-\
    \ n + (n %% 2)\n  m <- m + (m %% 2)\n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n\
    \  n <- n ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  n\
    \ <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n > m) {\n    return(-1)\n  }\n  n <- n + 1\n  m\
    \ <- m + 1\n  s <- 0\n  while (n <= m) {\n    s <- s + n\n    n <- n + 1\n  }\n\
    \  return(as.character(bin(round(s/m), 2)))\n}\n", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep=\"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n >= m) {\n    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n\
    \    s <- 0\n    \n    while(n <= m) {\n      s <- s + n\n      n <- n + 1\n \
    \   }\n    \n    s <- s / m\n    \n    s <- paste0(s, 'b')\n    \n    s <- substr(s,\
    \ 1, nchar(s))\n    \n    s <- substr(s, (nchar(s) - 1), nchar(s))\n    \n   \
    \ s\n  }\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(round(n / m), collapse\
    \ = \"\"))\n}\n", "\n  if(n >= m) return(-1)\n  n <- n\n  m <- m\n  n <- n + 1\n\
    \  m <- m + 1\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n\
    \  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n +\
    \ (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n\
    \  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m -\
    \ (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n\
    \  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n -\
    \ (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n\
    \  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m +\
    \ (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n\
    \  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n +\
    \ (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n\
    \  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n  m <- m -\
    \ (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n - (n %% 10)\n\
    \  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n -\
    \ (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n\
    \  n <- n - (n %% 10)\n  m <- ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n\
    \    n <- n - (n %% 10)\n    m <- m - (m %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %%\
    \ 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %%\
    \ 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n\
    \ + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <-\
    \ m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n\
    \    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %%\
    \ 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %%\
    \ 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n\
    \ + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <-\
    \ m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n\
    \    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n\
    \    m <- m + (n %% 10)\n    \n    n <- n + (m %% 10)\n    m <- m + (n %% 10)\n\
    \    \n    n <- n + (m %% 10)\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n +\
    \ (m - n) / 2, 0)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n\
    \ == m) return(as.character(n))\n  if(n == m) return(-1)\n  if(n == 0) return(0)\n\
    \  if(n == 1) return(1)\n  if(n == -1) return(-1)\n  if(n == -2) return(-1)\n\
    \  if(n == -3) return(-1)\n  if(n == -4) return(-1)\n  if(n == -5) return(-1)\n\
    \  if(n == -6) return(-1)\n  if(n == -7) return(-1)\n  if(n == -8) return(-1)\n\
    \  if(n == -9) return(-1)\n  if(n == -10) return(-1)\n  if(n == -11) return(-1)\n\
    \  if(n == -12) return(-1)\n  if(n == -13) return(-1)\n  if(n == -14) return(-1)\n\
    \  if(n == -15) return(-1)\n  if(n == -16) return(-1)\n  if(n == -17) return(-1)\n\
    \  if(n == -18) return(-1)\n  if(n == -19) return(-1)\n  if(n == -20) return(-1)\n\
    \  if(n == -21) return(-1)\n  if(n == -22) return(-1)\n  if(n == -23) return(-1)\n\
    \  if(n == -24) return(-1)\n  if(n == -25) return(-1)\n  if(n == -26) return(-1)\n\
    \  if(n == -27) return(-1)\n  if(n == -28) return(-1)\n  if(n == -29) return(-1)\n\
    \  if(n == -30) return(-1)\n  if(n == -31) return(-1)\n  if(n == -32) return(-1)\n\
    \  if(n == -33) return(-1)\n  if(n == -34) return(-1)\n  if(n == -35) return(-1)\n\
    \  if(n == -36) return(-1)\n  if(n == -37) return(-1)\n  if(n == -38) return(-1)\n\
    \  if(n == -39) return(-1)\n  if(n == -40) return(-1)\n  if(n == -41) return(-1)\n\
    \  if(n == -42) return(-1)\n  if(n == -43) return(-1)\n  if(n == -44) return(-1)\n\
    \  if(n == -45) return(-1)\n  if(n == -46) return(-1)\n  if(n == -47) return(-1)\n\
    \  if(n == -48) return(-1)\n  ", "\n  \n  if(n >= m) return(-1)\n  \n  return(paste0(round(m/n),'b'))\n\
    }\n", "\n  if(n >= m) return(-1)\n  return(paste0(round(m/n), collapse=\"\"))\n\
    }\n", "\n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 8\n  m <- m * 8\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 16\n  m <- m * 16\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 32\n  m <- m * 32\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 64\n  m <- m * 64\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 128\n  m <- m * 128\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 256\n  m <- m * 256\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 512\n  m <- m * 512\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 1024\n  m <- m * 1024\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 2048\n  m <- m * 2048\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 4096\n  m <- m * 4096\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 8192\n  m <- m * 8192\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 16384\n  m <- m * 16384\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  ", "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n", "\n  if(n > m) return(-1)\n  return(sprintf('0b%b',\
    \ round(n / (m - n) * m)))\n}\n", "\n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  return(as.character(round(n/m, 0)))\n}\n", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n   \
    \ n <- seq(from=n, to=m, by=1)\n  }\n  \n  n <- n[order(n)]\n  m <- m[order(m)]\n\
    \  \n  n <- n[1]\n  m <- m[1]\n  \n  return(paste0(\"0b\", sprintf(\"%0*d\", length(m)-1,\
    \ m), collapse=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n   \
    \ n <- 0\n    m <- 1\n  }\n  \n  n <- n - (m %% n)\n  m <- m - (n %% m)\n  \n\
    \  n <- paste0(\"0b\", sprintf(\"%0*d\", n, m))\n  \n  return(n)\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_", "\n  if(n >= m)\
    \ return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)", "\n  \n  if(n > m) return(-1)\n  \n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ sprintf('%b', n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n  m <-\
    \ m[-length(m)] \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n <- paste0('0b',\
    \ n)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n * 2\n  m <- m * 2\n  \n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(", "\n  if(n > m) {\n    return(-1)\n  }\n  return(paste0(floor(n\
    \ + (m - n)/2), \"b\", ceiling(m)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <-\
    \ n / 2\n  m <- m / 2\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n,\
    \ m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m\
    \ / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n \
    \ \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n\
    \  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n\
    \  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  n <-\
    \ round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <-\
    \ as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n\
    \  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n\
    \ / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n,\
    \ m))\n  m <- as.integer(binom(m, n))\n  \n  n <- round(n / 2)\n  m <- round(m\
    \ / 2)\n  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n \
    \ \n  n <- round(n / 2)\n  m <- round(m / 2)\n  \n  n <- as.integer(binom(n, m",
  "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n -\
    \ 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m\
    \ <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <-\
    \ m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m -\
    \ 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n\
    \  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n\
    \ <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <=\
    \ m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m)\
    \ return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n\
    \  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n\
    \  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n\
    \ <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <-\
    \ n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n\
    \ - 1\n  m <- m - 1\n  \n  if(n <= m) ", "\n  \n  if(n > m) {\n    \n    return(-1)\n\
    \    \n  } else {\n    \n    sum <- 0\n    \n    for(i in seq(from=n, to=m)) {\n\
    \      \n      sum <- sum + i\n      \n    }\n    \n    avg <- round(sum/(n+m))\n\
    \    \n    bin(avg)\n    \n  }\n  \n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ceiling(n / 2)\n  m <- ceiling(m / 2)\n  n <- ifelse(n <\
    \ m, n, m)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n\
    \ < 2, n, 2)\n  m <- ifelse(m < 2, m, 2)\n  n <- ifelse(n < 2, n, 2)\n  m <- ifelse(m\
    \ < 2, m, 2)", "\n  if(n > m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n <- n\
    \ + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b',\
    \ n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep=\"\"))\n}\n", "\n\
    \  if(n > m) return(-1L)\n  \n  sum <- 0L\n  \n  for(i in seq_len(m)) {\n    sum\
    \ <- sum + i\n  }\n  \n  return(as.character(sum + n - m))\n}\n</cell>\n<cell>\n\
    rounded_avg(1, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(10,\
    \ 20)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(", "\n\
    \  if(n >= m) return(-1L)\n  n <- floor(n / 2)\n  m <- floor(m / 2)\n  return(n\
    \ + (m %% 2) * 2)\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n \
    \ \n  n <- n + 1\n  m <- m + 1\n  \n  return(sprintf('0b%b', round(n / (m - n)\
    \ * 8)))\n}\n", "\n  \n  if(n <= m) return(paste0(\"0b\", as.character(round(n/m,\
    \ 0))))\n  \n  return(paste0(\"0b\", as.character(round(n/m, 0))))\n}\n", "\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if (n <= m) {\n    n <- n +\
    \ 1\n    m <- m - 1\n  }\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- n / 2\n \
    \ m <- m / 2\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(m))\n  \n  n <- as.integer(binary.digits(n))\n\
    \  m <- as.integer(binary.digits(", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m,\
    \ n, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m\
    \ <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m\
    \ <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0,\
    \ -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n\
    \ <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n\
    \ <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m,\
    \ n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n\
    \ > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n\
    \ <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0,\
    \ -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m\
    \ <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m\
    \ <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n <= 0,\
    \ -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n <- ifelse(n\
    \ <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m, n, m)\n  n\
    \ <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n  n <- ifelse(n > m,\
    \ n, m)\n  n <- ifelse(n <= 0, -1, n)\n  m <- ifelse(m <= 0, -1, m)\n", "\n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n >= m) {\n    -1\n  } else\
    \ {\n    n <- n + (m - n)\n    n <- floor(n / 2)\n    n <- sprintf('0b%b', n)\n\
    \  }\n  \n  return(n)\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <-\
    \ m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n,\
    \ m, sep = ''))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(sprintf('0b%b',\
    \ n %/% m))\n}\n", "\n  if(n >= m) return(-1)\n  return(paste0(floor(n + (m -\
    \ n)/2), \"b\", floor(m - (n - m)/2)))\n}\n</code>\n<|/ a tags=r |>\n<| a dscore=0\
    \ |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\ndf <- data.frame(\n  n = c(1:5),\n\
    \  m = c(6:10)\n)\n\ndf %>% \n  mutate(\n    bin = str_glue(\"{n}b{m}\")\n  )\
    \ %>% \n  mutate(\n    bin = str_replace(bin, \"b\", \"\") %>% as.integer\n  )\
    \ %>% \n  mutate(\n    bin = ifelse(is.na(bin), -1, bin)\n  ) %>% \n  select(-n,\
    \ -m)\n\n  bin\n1    6\n2    7\n3    8\n4    9\n5   10\n</code>\n<|/ a tags=r\
    \ |>\n<| a dscore=0 |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\ndf <- data.frame(\n\
    \  n = c(1:5),\n  m = c(6:10)\n)\n\ndf %>% \n  mutate(\n    bin = str_glue(\"\
    {n}b{m}\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"b\", \"\") %>% as.integer\n\
    \  ) %>% \n  mutate(\n    bin = ifelse(is.na(bin), -1, bin)\n  ) %>% \n  select(-n,\
    \ -m)\n\n  bin\n1    6\n2    7\n3    8\n4    9\n5   10\n</code>\n<|/ a tags=r\
    \ |>\n<| a dscore=0 |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\ndf <- data.frame(\n\
    \  n = c(1:5),\n  m = c(6:10)\n)\n\ndf %>% \n  mutate(\n    bin = str_glue(\"\
    {n}b{m}\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"b\", \"\") %>% as.integer\n\
    \  ) %>% \n  mutate(\n    bin = ifelse(is.na(bin), -1, bin)\n  ) %>% \n  select(-n,\
    \ -m)\n\n  bin\n1    6\n2    7\n3    8\n4    9\n5   10\n</code>\n<|/ a tags=r\
    \ |>\n<| a tags=r |>", "\n  \n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(round(n/m, 0)))\n\
    \  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  if(n == m) return(as.character(n))\n  if(n == m) return(-1)\n\
    \  if(n>m) return(-1)\n  return(as.character(round(n + (m - n)/2, 0)))\n}\n</cell>\n\
    <cell>", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  return(paste0(as.character(floor(n + (m - n)/2)), collapse = \"\"))\n}\n",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must\
    \ be less than m\")\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  res <- 0\n  \n\
    \  while(n <= m) {\n    res <- res + n\n    n <- n + 1\n  }\n  \n  res <- round(res,\
    \ 0)\n  \n  res <- as.character(res)\n  \n  res <- paste0(\"0b\", res)\n  \n \
    \ return(res)\n}\n", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <-\
    \ m / 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n * 2\n  m\
    \ <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m\
    \ / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  ", "\n  n\
    \ <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  if(m <= 0) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n >= m) {\n    return(-1)\n  }\n  \n  n\
    \ <- n\n  m <- m\n  \n  if(n <= m) {\n    return(-1)\n  }\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- ",
  "\n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  \n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n\
    \    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n    while(n <= m) {\n\
    \      n <- n + 1\n      m <- m + 1\n    }\n    \n    n <- n - 1\n    m <- m -\
    \ 1\n    \n    while(n >= 1) {\n      n <- n - 1\n      m <- m - 1\n    }\n  \
    \  \n    n <- as.integer(sprintf('%b', n))\n    m <- as.integer(sprintf('%b',\
    \ m))\n    \n    n <- n + 1\n    m <- m + 1\n    \n    while(n <= m) {\n     \
    \ n <- n + 1\n      m <- m + 1\n    }\n    \n    n <- n - 1\n    m <- m - 1\n\
    \    \n    while(n >= 1) {\n      n <- n - 1\n      m <- m - 1\n    }\n    \n\
    \    n <- as.integer(sprintf('%b', n))\n    m <- as.integer(sprintf('%b', m))\n\
    \    \n    n <- n + 1\n    m <- m + 1\n    \n    while(n <= m) {\n      n <- n\
    \ + 1\n      m <- m + 1\n    }\n    \n    n <- n - 1\n    m <- m - 1\n    \n \
    \   while(n >= 1) {\n      n <- n - 1\n      m <- m - 1\n    }\n    \n    n <-\
    \ as.integer(sprintf('%b', n))\n    m <- as.integer(sprintf('%b', m))\n    \n\
    \    n <- n + 1\n    m <- m + 1\n    \n    while(n <= m) {\n      n <- n + 1\n\
    \      m <- m + 1\n    }\n    \n    n <- n - 1\n    m <- m - 1\n    \n    while(n\
    \ >= 1) {\n      n <- n - 1\n      m <- m - 1\n    }\n    \n    n <- as.integer(sprintf('%b',\
    \ n))\n    m <- as.integer(sprintf('%b', m))\n    \n    n <- n + 1\n    m <- m\
    \ + 1\n    \n    while(n <= m) {\n      n <- n + 1\n      m <- m + 1\n    }\n\
    \    \n    n <- n - 1\n    m <- m - 1\n    \n    while(n >= 1) {\n      n <- n\
    \ - 1\n      m <- m - 1\n    }\n    \n    n <- as.integer(sprint", "\n  \n  #\
    \ If n is greater than m, return -1\n  if (n > m) {\n    return(-1)\n  }\n  \n\
    \  # If n is equal to m, return n\n  if (n == m) {\n    return(n)\n  }\n  \n \
    \ # If n is less than m, return -1\n  if (n < m) {\n    return(-1)\n  }\n  \n\
    \  # If n is less than or equal to m, return n\n  return(n)\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if(n > m) {\n    -1\n  } else {\n    paste0(\n      sprintf(\"\
    0b%b\", \n        round(\n          (n + (m - n)) / (m - n) * \n          (2^length(as.character(m))\
    \ - 1), \n          0)), collapse = \"\")\n  }\n}\n</code>\n<|/ a |>\n<| c |>\n\
    I like this solution, but I feel like it could be improved. For example, `rounded_avg(20,\
    \ 33)` returns `0b11010`, but `0b1111` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned. Also, `rounded_avg(20,\
    \ 33)` should return `0b1111`, but `0b11010` should be returned.\n<|/ c |>\n<|\
    \ c |>\nI agree with you that `rounded_avg(20, 33)` should return `0b1111`, but\
    \ `0b11010` should be returned. I've updated the answer to reflect this and also\
    \ added a comment to the code to explain why it works.\n<|/ c |>\n<| c |>\nI see\
    \ what you mean. I've updated the answer to reflect this.\n<|/ c |>\n<| a dscore=1\
    \ |>\nHere's a solution using stringr::str_pad from the stringr package:\n<code>\n\
    library(stringr)\n", "\n  n <- n\n  m <- m\n  n <- n + 1\n  m <- m + 1\n  n <-\
    \ n / 2\n  m <- m / 2\n  n <- n * 2\n  m <- m * 2\n  n <- ceiling(n / 2)\n  m\
    \ <- ceiling(m / 2)\n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  n <- paste0(format(n, '0'), collapse = \"\")\n  m <- paste0(format(m,\
    \ '0'), collapse = \"\")\n  n <- paste0(format(n, 'b'), collapse = \"\")\n  m\
    \ <- paste0(format(m, 'b'), collapse = \"\")\n  return(ifelse(n <= m, n, -1))\n\
    }\n</code>\n<|/ a tags=binary,r |>\n<| c |>\nThis doesn't seem to work if n is\
    \ greater than m. For example, rounded_avg(20, 33) returns '0b11010' instead of\
    \ '0b1111'\n<|/ c |>\n<| c |>\nI added a test case for when n is greater than\
    \ m. Thanks for pointing that out.\n<|/ c |>\n<| c |>\nI added a test case for\
    \ when n is greater than m. Thanks for pointing that out.\n<|/ c |>\n<| a tags=binary,r\
    \ |>\nI wrote a function that does this for you. \n<code>\nbin2dec <- function(x)\
    \ {\n  x <- as.character(x)\n  x <- gsub(\"^0*\", \"\", x)\n  x <- gsub(\"^1\"\
    , \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x\
    \ <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\"\
    , \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x\
    \ <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\"\
    , \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1$\", \"\", x)\n  x\
    \ <- gsub(\"^1$\", \"\", x)\n  x <- gsub(\"^1", "\n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)", "\n\
    \  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m + 1\n\
    \  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m + (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m + (n / 2)\n  \n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  result <- 0\n  \n\
    \  for(i in n:m) {\n    result <- result + i\n  }\n  \n  result <- result / 2\n\
    \  \n  result <- paste0(round(result), collapse = \"\")\n  \n  result <- paste0(result,\
    \ collapse = \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result\
    \ <- paste0(result, collapse = \"0\")\n  \n  result <- paste0(result, collapse\
    \ = \"1\")\n  \n  result <- paste0(result, collapse = \"0\")\n  \n  result <-\
    \ paste0(result, collapse = \"1\")\n  \n  result <- paste0(result, collapse =\
    \ \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result <- paste0(result,\
    \ collapse = \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result\
    \ <- paste0(result, collapse = \"0\")\n  \n  result <- paste0(result, collapse\
    \ = \"1\")\n  \n  result <- paste0(result, collapse = \"0\")\n  \n  result <-\
    \ paste0(result, collapse = \"1\")\n  \n  result <- paste0(result, collapse =\
    \ \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result <- paste0(result,\
    \ collapse = \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result\
    \ <- paste0(result, collapse = \"0\")\n  \n  result <- paste0(result, collapse\
    \ = \"1\")\n  \n  result <- paste0(result, collapse = \"0\")\n  \n  result <-\
    \ paste0(result, collapse = \"1\")\n  \n  result <- paste0(result, collapse =\
    \ \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result <- paste0(result,\
    \ collapse = \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  result\
    \ <- paste0(result, collapse = \"0\")\n  \n  result <- paste0(result, collapse\
    \ = \"1\")\n  \n  result <- paste0(result, collapse = \"0\")\n  \n  result <-\
    \ paste0(result, collapse = \"1\")\n  \n  result <- paste0(result, collapse =\
    \ \"0\")\n  \n  result <- paste0(result, collapse = \"1\")\n  \n  ", "\n  if(n\
    \ >= m) return(-1)\n  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse\
    \ = \"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n >\
    \ m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n - 1\n \
    \ m <- m + 2\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  return(paste0(as.character(n\
    \ %/% m), as.character(n %% m)))\n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <-\
    \ ifelse(n > 1, ifelse(n < 2, paste0(\"0b\", n), paste0(\"0b\", n, \"1\")), paste0(\"\
    0b\", n, \"0\"))\n  return(n)\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n\
    library(bit64)\nlibrary(stringr)\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  sum <- 0\n  \n  for(i in n:m) {\n    sum <- sum + i\n  }\n\
    \  \n  return(sprintf(\"0b%b\", sum / m))\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=1 |>\nI came up with a solution using R's sprintf and gsub:\n<code>\n\
    rounded_avg <- function(n, m) {\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  sum <- 0\n  \n  for(i in n:m) {\n    sum <- sum + i\n  }\n\
    \  \n  return(sprintf(\"0b%b\", sum / m))\n}\n\nrounded_avg(7, 5)", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(n))\n\
    \  \n  return(as.character(round(n + (m - n)/2, 0)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  return(as.character(round(n + (m - n)/2, 0)))\n}\n",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must\
    \ be less than m\")\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n\
    \    n <- n\n  } else {\n    m <- m\n  }\n  \n  n <- n - (n %% 2)\n  m <- m -\
    \ (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %%\
    \ 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m +\
    \ (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %%\
    \ 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m +\
    \ (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %%\
    \ 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m +\
    \ (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %%\
    \ 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n\
    \  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m +\
    \ (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <- n + (m - n)\n  n\
    \ <- n / 2\n  n <- formatC(as.integer(n), width = 2, format = \"d\", flag = \"\
    0\")\n  n <- paste0(\"0b\", n)\n  \n  return(n)\n}\n", "\n  \n  if(n >= m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  if(n > m) return(-1)\n\
    \  return(paste0(round(m/n), collapse=\"\"))\n}\n", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- as.character(n)\n  m <- as.character(m)\n  \n  n <-\
    \ paste0(n, collapse = \"\")\n  m <- paste0(m, collapse = \"\")\n  \n  n <- paste0(\"\
    0b\", n)\n  m <- paste0(\"0b\", m)\n  \n  return(paste0(m, n))\n}\n", "\n  n <-\
    \ n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m\
    \ + 1\n  \n  n <- floor(n / 2)\n  m <- floor(m / 2)\n  \n  n <- n * 2\n  m <-\
    \ m * 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  m <- as.integer(binary.convert(m,\
    \ base = 2))\n  \n  n <- n + (m %% 2)\n  \n  n <- floor(n / 2)\n  \n  n <- n *\
    \ 2\n  \n  n <- as.integer(binary.convert(n, base = 2))\n  \n  return(n)\n}\n",
  "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- ifelse(n >= m, m, n)\n  \n  n <- ifelse(n >= 10, 10, n)\n  \n  n <-\
    \ ifelse(n >= 100, 100, n)\n  \n  n <- ifelse(n >= 1000, 1000, n)\n  \n  n <-\
    \ ifelse(n >= 10000, 10000, n)\n  \n  n <- ifelse(n >= 100000, 100000, n)\n  \n\
    \  n <- ifelse(n >= 1000000, 1000000, n)\n  \n  n <- ifelse(n >= 10000000, 10000000,\
    \ n)\n  \n  n <- ifelse(n >= 100000000, 100000000, n)\n  \n  n <- ifelse(n >=\
    \ 1000000000, 1000000000, n)\n  \n  n <- ifelse(n >= 10000000000, 10000000000,\
    \ n)\n  \n  n <- ifelse(n >= 100000000000, 100000000000, n)\n  \n  n <- ifelse(n\
    \ >= 1000000000000, 1000000000000, n)\n  \n  n <- ifelse(n >= 10000000000000,\
    \ 10000000000000, n)\n  \n  n <- ifelse(n >= 100000000000000, 100000000000000,\
    \ n)\n  \n  n <- ifelse(n >= 1000000000000000, 1000000000000000, n)\n  \n  n <-\
    \ ifelse(n >= 10000000000000000, 10000000000000000, n)\n  \n  n <- ifelse(n >=\
    \ 100000000000000000, 100000000000000000, n)\n  \n  n <- ifelse(n >= 1000000000000000000,\
    \ 1000000000000000000, n)\n  \n  n <- ifelse(n >= 10000000000000000000, 10000000000000000000,\
    \ n)\n  \n  n <- ifelse(n >= 1000000000000000000, 1000000000000000000, n)\n  \n\
    \  n <- ifelse(n >= 10000000000000000000, 10000000000000000000, n)\n  \n  n <-\
    \ ifelse(n >= 100000000000000000000, 100000000000000000000, n)\n  \n  n <- ifelse(n\
    \ >= 1000000000000000000000, 1000000000000000000000, n)\n  \n  n <- ifelse(n >=\
    \ 10000000000000000000000, 10000000000000000000000, n)\n  \n  n <- ifelse(n >=\
    \ 100000000000000000000000, 100000000000000000000000, n)\n  \n  n <- ifelse(n\
    \ >= 1000000000000000000000000, 1000000000000000000", "\n  if(n >= m) return(-1)\n\
    \  \n  n <- n\n  m <- m\n  \n  x <- 0\n  \n  for(i in n:m) {\n    x <- x + i\n\
    \  }\n  \n  x <- x / m\n  \n  return(as.character(x))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(paste0(as.character(n),\
    \ \n               ifelse(n > m, paste0(as.character(m), collapse = ''), \n  \
    \                    paste0(as.character(m), collapse = '0'))))\n}\n", "\n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  return(paste0(as.character(round(n + (m -\
    \ n)/2, 0)), collapse=\"\"))\n}\n", "\n  \n  if(n >= m) return(-1)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(floor(n/m)*m))\n\
    \  \n  return(as.character(floor(n/m)*m) + as.character(floor((n-m)/m)*m))\n}\n",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if (n > m) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(round(n / (m - n + 1), 2), \"b\", round(m / (m - n +\
    \ 1), 2)))\n}\n", "\n  if(n >= m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n\
    \ <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n\
    \ %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %%\
    \ m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %%\
    \ m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %%\
    \ m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %%\
    \ m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- n + (m %% n)", "\n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  if(n > m) return(-1)\n  s <- seq(n, m, 1)\n  s <- s[order(s)]\n\
    \  s <- s[-length(s)]\n  s <- paste0(s, 'b')\n  return(s)\n}\n", "\n  n <- n\n\
    \  m <- m\n  n <- n - 1\n  m <- m - 1\n  n <- n * 2\n  m <- m * 2\n  n <- ceiling(n\
    \ / 2)\n  m <- ceiling(m / 2)\n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m,\
    \ n))\n  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n \
    \ n <- gsub(\"0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  m <- gsub(\"0*\"\
    , \"\", m)\n  m <- gsub(\"1$\", \"\", m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.character(n)\n  m <- as.character(m)\n  n <- paste0(n, m)\n  n <- gsub(\"\
    0*\", \"\", n)\n  n <- gsub(\"1$\", \"\", n)\n  n <- as.integer(n)\n  m ", "\n\
    \  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <-\
    \ n + 1\n  m <- m + 1\n  \n  if(m > n) {\n    n <- m\n    m <- n\n  }\n  \n  n\
    \ <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m\
    \ %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n\
    \  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <-\
    \ n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %%\
    \ 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n\
    \  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <-\
    \ n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %%\
    \ 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n\
    \  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <-\
    \ n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %%\
    \ 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n\
    \  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <-\
    \ n - (n %% 2)\n  m <- m - (m %% 2)\n  \n  n <- n - (n %% 2)\n  m <- m - (m %%\
    \ 2)\n  \n  n <- n - (n ", "\n  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if(n > m) {\n    return(-1)\n  }\n  n <- n + 1\n  m <-\
    \ m + 1\n  n <- n - (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <-\
    \ m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n\
    \  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m\
    \ %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <-\
    \ n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n\
    \  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n\
    \ %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <-\
    \ m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n\
    \  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m\
    \ %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <-\
    \ n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n\
    \  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n\
    \ %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n  m <-\
    \ m + (n %% m)\n  n <- n + (m %% n)\n  m <- m + (n %% m)\n  n <- n + (m %% n)\n\
    \  m <- m + (n %% m)\n  n <- n + (", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n + (m %%\
    \ n)\n  m <- m - (n %% n)\n  \n  n <- as.character(n)\n  m <- as.character(m)\n\
    \  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n  \n  n <- n[-n]\n  m\
    \ <- m[-m]\n  \n  n <- paste0(n, m)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integ", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(binom(n,\
    \ m))\n  m <- as.integer(binom(m, n))\n  \n  n <- as.character(n)\n  m <- as.character(m)\n\
    \  \n  n <- paste0(n, m)\n  n <- paste0('0b', n)\n  \n  return(n)\n}\n", "\n \
    \ n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    -1\n  } else\
    \ {\n    ceiling(n / m) * m\n  }\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m)\
    \ {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >=\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m)\
    \ {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m)\
    \ {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= m)\
    \ {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  if(n >= ", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n <= m)\
    \ return(paste0(\"0b\", as.character(n)))\n  \n  n <- n - 1\n  m <- m - 1\n  \n\
    \  return(paste0(\"0b\", as.character(n), as.character(m)))\n}\n", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n - (n %% 10)\n\
    \  m <- m - (m %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n\
    \ <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m -\
    \ (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m\
    \ %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n\
    \  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m\
    \ <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <-\
    \ n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n\
    \ %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %%\
    \ 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n\
    \  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m\
    \ <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <-\
    \ n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n\
    \ %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %%\
    \ 10)\n  m <- m - (n %% 10)\n  \n  n <- n + (m %% 10)\n  m <- m - (n %% 10)\n\
    \  \n  n <- n + (m %% 10)\n  m ", "\n  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m", "\n  \n  if(n\
    \ >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ <= m) {\n    \n    sum <- 0\n    \n    for(i <- n:m) {\n      \n      sum <-\
    \ sum + i\n      \n    }\n    \n    avg <- sum / m\n    \n    bin.num <- as.integer(format(round(avg),\
    \ width = 2))\n    \n    return(bin.num)\n    \n  }\n  \n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  return(paste0(as.character(n),\
    \ as.character(m), sep = ''))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n +\
    \ (m - n)/2, 0)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n \
    \ if(n > m) {\n    -1\n  } else {\n    ceiling(n / m) * m\n  }\n}\n", "\n  if(n\
    \ >= m) return(-1)\n  return(as.character(round(n + (m - n)/2, 0)))\n}\n", "\n\
    \  if(n >= m) return(-1)\n  return(paste0(as.character(round(n/m, 0)), collapse\
    \ = \"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  n <- n\n  m <- m\n\
    \  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\
    \ + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b',\
    \ n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep = ''))\n}\n", "\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n +\
    \ 1\n    m <- m - 1\n  }\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n \
    \ n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m,\
    \ sep = ''))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n > m)\
    \ {\n    return(-1)\n  }\n  n <- n + 1\n  m <- m + 1\n  n <- n - (m %% n)\n  m\
    \ <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %%\
    \ n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n\
    \ + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n\
    \  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n\
    \ %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <-\
    \ m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m\
    \ %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <-\
    \ n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n\
    \  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n\
    \ %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <-\
    \ m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <- n + (m\
    \ %% n)\n  m <- m - (n %% m)\n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  n <-\
    \ n + (", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <-\
    \ n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(format(n,\
    \ \"b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- ifelse(n < 0, -1, n)\n\
    \  m <- ifelse(m < 0, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > m, -1, m)\n  \n  n <- ifelse(n < m, -1, n)\n  m <- ifelse(m > m, -1, m)\n\
    \  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n\
    \ < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n\
    \  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n\
    \  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n\
    \ < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n\
    \  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n\
    \  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n\
    \ < 0, -1, n)\n  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n\
    \  m <- ifelse(m > 0, -1, m)\n  \n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ > 0, -1, m)\n  \n  n <- ifelse", "\n  if(n >= m) return(-1)\n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse=\"\"))\n}\n</cell>\n<cell>\nrounded_avg(1, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(10, 20)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the factorial of a number. \nThe factorial of a non-negative integer n, written\
    \ n!, is defined as the product of n and all integers less than or equal to n.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that computes\
    \ the factorial of a non-negative integer n.\n\n\n</text>\n<cell>", "\n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <-\
    \ m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- n * 2\n  m <- m * 2\n  \n\
    \  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  return(paste0(as.character(n),\
    \ as.character(m)))\n}\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n\
    \  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m,\
    \ sep = ''))\n}\n", "\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    \n    result <- 0\n    \n    for(i\
    \ <- n :m) {\n      \n      result <- result + i\n      \n    }\n    \n    result\
    \ <- result / m\n    \n    result <- round(result, 0)\n    \n    result <- as.character(result)\n\
    \    \n    result <- paste0(\"0b\", result)\n    \n    return(result)\n    \n\
    \  } else {\n    \n    return(-1)\n    \n  }\n  \n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  return(sprintf('0b%b', n %/% m))\n}\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(", "\n\
    \  \n  # Your code here\n  \n}\n</cell>\n<cell>", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep = ''))\n}\n", "\n  \n  if(n > m) return(-1)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(floor(n/2)\
    \ + as.character(floor((n-m)/2))))\n  \n  return(as.character(floor(n/2) + as.character(floor((n-m)/2)\
    \ + 1)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n > m) {\n\
    \    return(-1)\n  }\n  return(sprintf('0b%b', round(n / (m - n) * m)))\n}\n",
  "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- n * 2\n\
    \  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.character(n)\n\
    \  m <- as.character(m)\n  \n  n <- paste0(n, collapse = \"\")\n  m <- paste0(m,\
    \ collapse = \"\")\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n \
    \ \n  return(paste0(n, m))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n \
    \   return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(round(n\
    \ / (m - n) * 2, 0), collapse = ''))\n}\n", "\n  if(n >= m) return(-1)\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(n\
    \ <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n, m)\n  n <-\
    \ ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n,\
    \ m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n\
    \ <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <-\
    \ ifelse(n <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m,\
    \ 0)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m\
    \ <= 0, m, 0)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <-\
    \ ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(n <= 0, n,\
    \ 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(n\
    \ <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n, m)\n  n <-\
    \ ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n <= m, n,\
    \ m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <- ifelse(n\
    \ <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m, 0)\n  n <-\
    \ ifelse(n <= m, n, m)\n  n <- ifelse(n <= 0, n, 0)\n  m <- ifelse(m <= 0, m,\
    \ 0)\n  n <- ifelse(n <= m, n, m)\n  n <- ifelse(", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  return(paste0(as.character(floor(n + (m - n)/2)), collapse = \"\"))\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n\
    \  \n  return(as.character(round(n + (m - n)/2, 0)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  res <- 0\n  \n  while(n <= m) {\n\
    \    res <- res + n\n    n <- n + 1\n  }\n  \n  res <- round(res, 0)\n  \n  res\
    \ <- paste0(\"0b\", res)\n  \n  return(res)\n}\n", "\n  n <- n\n  m <- m\n  \n\
    \  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n + (m\
    \ - n)/2, 0)))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- n +\
    \ (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n\
    \  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% ", "\n  n <-\
    \ n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n \
    \ n <- floor(n / 2)\n  m <- floor(m / 2)\n  \n  n <- sprintf('0b%b', n)\n  m <-\
    \ sprintf('0b%b', m)\n  \n  n <- paste0(n, m)\n  \n  n <- n[length(n) - 1]\n \
    \ \n  return(n)\n}\n", "\n  if(n >= m) return(-1)\n  return(paste0(round(n / (m\
    \ - n) * 8), \"0\", round(m / (m - n) * 8), \"0\"))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    ", "\n  n <- n\n\
    \  m <- m\n  \n  if(n >= m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m\
    \ + 1\n  \n  return(sprintf('0b%b', n / m))\n}\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    return(-1)\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + (m -\
    \ n) / 2\n  \n  n <- format(n, 'b')\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- n + (m - n) / 2\n  m <- m - (n - m) / 2\n  \n  n <- formatC(as.integer(n),\
    \ width = 2, flag = \"0\")\n  m <- formatC(as.integer(m), width = 2, flag = \"\
    0\")\n  \n  n <- paste0(n, m)\n  \n  n <- ifelse(n >= 2^31, -1, as.integer(n))\n\
    \  \n  n <- formatC(as.integer(n), width = 2, flag = \"0\")\n  \n  return(n)\n\
    }\n", "\n  if(n > m) {\n    -1\n  } else {\n    ceiling(n / m) * m\n  }\n}\n",
  "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n + (m - n)/2, 0)),\
    \ collapse = \"\"))\n}\n", "\n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <-\
    \ m / 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n * 2\n  m\
    \ <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m\
    \ / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n ",
  "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    -1\n  } else\
    \ {\n    n <- n + (m - n)\n    n <- n / 2\n    n <- format(n, 'b')\n  }\n  return(n)\n\
    }\n", "\n  if(n > m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m\
    \ <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m\
    \ <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep=\"\"))\n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  if (n >= m) return(-1)\n  \n  n <- n\
    \ + 1\n  m <- m + 1\n  \n  sum <- 0\n  \n  while (n <= m) {\n    sum <- sum +\
    \ n\n    n <- n + 1\n  }\n  \n  return(as.character(sum / 2))\n}\n", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  return(paste0(as.character(n),\
    \ \n               ifelse(n %% 2 == 0, paste0('0b', '1'), paste0('0b', '0'))))\n\
    }\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse = \"\"))\n}\n", "\n  \n  # Write your code here\n\
    \  \n}\n", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) return(as.character(round(n/m, 0)))\n  \n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n  \n  n <- n\
    \ + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b',\
    \ n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep = ''))\n}\n", "\n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  \n  if(n >= m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  i\
    \ <- 1\n  \n  while(i <= m) {\n    \n    i <- i + n\n    \n  }\n  \n  i <- i /\
    \ 2\n  \n  return(as.character(i))\n  \n}\n", "\n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  if(n == m) return(as.character(n))\n  if(n == m) return(-1)\n\
    \  if(n == 0) return(0)\n  if(n == 1) return(1)\n  if(n == -1) return(-1)\n  if(n\
    \ == -1) return(-1)\n  if(n == -2) return(-1)\n  if(n == -3) return(-1)\n  if(n\
    \ == -4) return(-1)\n  if(n == -5) return(-1)\n  if(n == -6) return(-1)\n  if(n\
    \ == -7) return(-1)\n  if(n == -8) return(-1)\n  if(n == -9) return(-1)\n  if(n\
    \ == -10) return(-1)\n  if(n == -11) return(-1)\n  if(n == -12) return(-1)\n \
    \ if(n == -13) return(-1)\n  if(n == -14) return(-1)\n  if(n == -15) return(-1)\n\
    \  if(n == -16) return(-1)\n  if(n == -17) return(-1)\n  if(n == -18) return(-1)\n\
    \  if(n == -19) return(-1)\n  if(n == -20) return(-1)\n  if(n == -21) return(-1)\n\
    \  if(n == -22) return(-1)\n  if(n == -23) return(-1)\n  if(n == -24) return(-1)\n\
    \  if(n == -25) return(-1)\n  if(n == -26) return(-1)\n  if(n == -27) return(-1)\n\
    \  if(n == -28) return(-1)\n  if(n == -29) return(-1)\n  if(n == -30) return(-1)\n\
    \  if(n == -31) return(-1)\n  if(n == -32) return(-1)\n  if(n == -33) return(-1)\n\
    \  if(n == -34) return(-1)\n  if(n == -35) return(-1)\n  if(n == -36) return(-1)\n\
    \  if(n == -37) return(-1)\n  if(n == -38) return(-1)\n  if(n == -39) return(-1)\n\
    \  if(n == -40) return(-1)\n  if(n == -41) return(-1)\n  if(n == -42) return(-1)\n\
    \  if(n == -43) return(-1)\n  if(n == -44) return(-1)\n  if(n == -45) return(-1)\n\
    \  if(n == -46) return(-1)\n  if(n == -47) return(-1)\n  if(n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(n))\n  \n  return(\n\
    \    paste0(\n      as.character(\n        round(\n          (\n            n\
    \ + (m - n) %/% 2\n          )\n          / 2\n        )\n      )\n    )\n  )\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n == m) return(as.character(n))\n\
    \  if(n == m) return(-1)\n  if(n == 0) return(0)\n  if(n == 1) return(1)\n  if(n\
    \ == 2) return(2)\n  if(n == 3) return(3)\n  if(n == 4) return(4)\n  if(n == 5)\
    \ return(5)\n  if(n == 6) return(6)\n  if(n == 7) return(7)\n  if(n == 8) return(8)\n\
    \  if(n == 9) return(9)\n  if(n == 10) return(10)\n  if(n == 11) return(11)\n\
    \  if(n == 12) return(12)\n  if(n == 13) return(13)\n  if(n == 14) return(14)\n\
    \  if(n == 15) return(15)\n  if(n == 16) return(16)\n  if(n == 17) return(17)\n\
    \  if(n == 18) return(18)\n  if(n == 19) return(19)\n  if(n == 20) return(20)\n\
    \  if(n == 21) return(21)\n  if(n == 22) return(22)\n  if(n == 23) return(23)\n\
    \  if(n == 24) return(24)\n  if(n == 25) return(25)\n  if(n == 26) return(26)\n\
    \  if(n == 27) return(27)\n  if(n == 28) return(28)\n  if(n == 29) return(29)\n\
    \  if(n == 30) return(30)\n  if(n == 31) return(31)\n  if(n == 32) return(32)\n\
    \  if(n == 33) return(33)\n  if(n == 34) return(34)\n  if(n == 35) return(35)\n\
    \  if(n == 36) return(36)\n  if(n == 37) return(37)\n  if(n == 38) return(38)\n\
    \  if(n == 39) return(39)\n  if(n == 40) return(40)\n  if(n == 41) return(41)\n\
    \  if(n == 42) return(42)\n  if(n == 43) return(43)\n  if(n == 44) return(44)\n\
    \  if(n == 45) return(45)\n  if(n == 46) return(46)\n  if(n == 47) return(47)\n\
    \  if", "\n  \n  # Write your code here\n  \n  \n}\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes a positive integer as input and returns the number\
    \ of leading zeroes in the binary representation of that integer.\n\n\n</text>\n\
    <cell>", "\n  n <- n\n  m <- m\n  \n  if(n >= m) {\n    n <- m\n    m <- n\n \
    \ }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- floor(n / 2)\n  m <- floor(m /\
    \ 2)\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n  \n  return(paste0(m,\
    \ n))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n\
    \    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m)\
    \ return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  return(paste0(as.character(n),\
    \ as.character(m)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n\
    \    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m\
    \ <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n\
    \  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <-\
    \ m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n\
    \  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n\
    \  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n\
    \ < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1)\
    \ {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n\
    \    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n\
    \ <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- n + (m - n) / 2\n  m <- m - (n - m) / 2\n  \n  n <- formatC(as.integer(n),\
    \ width = 2, flag = \"0b\") + formatC(as.integer(m), width = 2, flag = \"0b\"\
    )\n  \n  return(n)\n}\n</cell>\n<cell>\nrounded_avg(1, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(10, 20)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in two integers n and\
    \ m and returns the number of digits in m that are less than or equal to n.\n\n\
    \n</text>\n<cell>", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(paste0(round(m/n),\
    \ collapse = ''))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n \
    \ if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n + (m -\
    \ n)/2, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n   \
    \ m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n,\
    \ m, sep = ''))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  return(paste0(\n    sprintf(\"0b%b\", round(n\
    \ / (m - n + 1), 0)),\n    sprintf(\"0b%b\", round(n / (m - n + 1), 0))\n  ))\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"\
    n must be less than m\")\n  }\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= 0)\
    \ {\n    return(-1)\n  }\n  \n  return(sprintf(\"0b%b\", round(n / m) * m))\n\
    }\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- sprintf('%b', n)\n  m <- sprintf('%b',\
    \ m)\n  \n  n <- n[-length(n)]\n  m <- m[-length(m)] \n  \n  n <- paste0(n, m)\n\
    \  n <- n[-length(n)]\n  \n  n <- as.integer(n)\n  \n  n <- ifelse(n < 0, -1,\
    \ n)\n  \n  return(n)\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(as.character(round(n + (m\
    \ - n)/2, 0)))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the first n\
    \ prime numbers. \nThe function should take in a positive integer n and return\
    \ the prime numbers from 2 to n.\nThe function should return -1 if n is less than\
    \ 2.\n\n\n</text>\n<cell>", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    \n    n <- n + 1\n    m <- m -\
    \ 1\n    \n  }\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  return(paste0(as.character(n),\
    \ as.character(m)))\n  \n}\n", "\n  if(n > m) return(-1)\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <-\
    \ sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep=\"\
    \"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n\
    \    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  if(n > m) {\n    return(-1)\n  }\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- as.integ", "\n  n <- n\n \
    \ m <- m\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n < 0, -1, n)\n  n <- ifelse(n\
    \ < 0, -1, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <-\
    \ ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n\
    \  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m,\
    \ m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(n\
    \ > m, m, n)\n  n <- ifelse(n > m, m, n)\n  n <- ifelse(", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  return(paste0(as.integer(n), as.integer(m)))\n}\n", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n\
    \  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep = ''))\n}\n", "\n  if(n\
    \ <= m) return(as.character(round(n/m, 0)))\n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ > m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  n <- ifelse(n > 0, n, 0)\n  n <-\
    \ ifelse(n < 1, -1, n)\n  n <- ifelse(n > 1, n, 0)\n  n <- ifelse(n < 2, -1, n)\n\
    \  n <- ifelse(n > 2, n, 0)\n  n <- ifelse(n < 4, -1, n)\n  n <- ifelse(n > 4,\
    \ n, 0)\n  n <- ifelse(n < 8, -1, n)\n  n <- ifelse(n > 8, n, 0)\n  n <- ifelse(n\
    \ < 16, -1, n)\n  n <- ifelse(n > 16, n, 0)\n  n <- ifelse(n < 32, -1, n)\n  n\
    \ <- ifelse(n > 32, n, 0)\n  n <- ifelse(n < 64, -1, n)\n  n <- ifelse(n > 64,\
    \ n, 0)\n  n <- ifelse(n < 128, -1, n)\n  n <- ifelse(n > 128, n, 0)\n  n <- ifelse(n\
    \ < 256, -1, n)\n  n <- ifelse(n > 256, n, 0)\n  n <- ifelse(n < 512, -1, n)\n\
    \  n <- ifelse(n > 512, n, 0)\n  n <- ifelse(n < 1024, -1, n)\n  n <- ifelse(n\
    \ > 1024, n, 0)\n  n <- ifelse(n < 2048, -1, n)\n  n <- ifelse(n > 2048, n, 0)\n\
    \  n <- ifelse(n < 4096, -1, n)\n  n <- ifelse(n > 4096, n, 0)\n  n <- ifelse(n\
    \ < 8192, -1, n)\n  n <- ifelse(n > 8192, n, 0)\n  n <- ifelse(n < 16384, -1,\
    \ n)\n  n <- ifelse(n > 16384, n, 0)\n  n <- ifelse(n < 32768, -1, n)\n  n <-\
    \ ifelse(n > 32768, n, 0)\n  n <- ifelse(n < 65536, -1, n)\n  n <- ifelse(n >\
    \ 65536, n, 0)\n  n <- ifelse(n < 131072, -1, n)\n  n <- ifelse(n > 131072, n,\
    \ 0)\n  n <- ifelse(n < 262144, -1, n)\n  n <- ifelse(n > 262144, n, 0)\n  n <-\
    \ ifelse(n < 524288, -1, n)\n  ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n \
    \   n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= 0)\
    \ {\n    return(-1)\n  }\n  \n  return(paste0(\n    sprintf(\"%b\", round(n /\
    \ m)),\n    sprintf(\"%b\", round(n %% m))\n  ))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if (n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  sum <- 0\n  \n  for (i in n:m) {\n    sum <- sum\
    \ + i\n  }\n  \n  return(as.character(sum / 2))\n}\n", "\n  n <- n\n  m <- m\n\
    \  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n\
    \ >= m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n\
    \    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <-\
    \ m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n\
    \ <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n +\
    \ 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m\
    \ <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m +\
    \ 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n\
    \  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >=\
    \ m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n\
    \    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <-\
    \ m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n\
    \ <- n + 1\n  m <- m + 1\n  \n  if(n >= m) {\n    n <- m\n  }\n  \n  n <- n +\
    \ 1\n  m <- m + 1\n  \n  if(n >= m) {\n    ", "\n  n <- n\n  m <- m\n  \n  if(n\
    \ > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n", "\n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  ", "\n  \n  if(n >= m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  \n  if(n >= m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m +\
    \ 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"\
    0b\", m)\n  \n  return(paste0(m, n))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n\
    \  return(paste0(as.integer(n)/m, collapse = \"\"))\n}\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given integer. \nThe factorial of a non-negative integer n, denoted by\
    \ n!, is the product of all positive integers less than or equal to n. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that computes the factorial\
    \ of a given integer. \nThe factorial of a non-negative integer n, denoted by\
    \ n!, is the product of all positive integers less than or equal to n. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120. \nIf n is negative, return -1.\nIf n is 0 or 1,\
    \ return 1.\nIf n is greater than or equal to 2, return n.\nIf n is greater than\
    \ or equal to 3, return n * factorial(n-1). \nIf n is greater than or equal to\
    \ 4, return n * factorial(n-2) * factorial(n-3). \nIf n is greater than or equal\
    \ to 5, return n * factorial(n-4) * factorial(n-5) * factorial(n-6). \nIf n is\
    \ greater than or equal to 6, return n * factorial(n-7) * factorial(n-8) * factorial(n-9)\
    \ * factorial(n-10).\nIf n is greater than or equal to 7, return n * factorial(n-8)\
    \ * factorial(n-9) * factorial(n-10) * factorial(n-11) * factorial(n-12).\nIf\
    \ n is greater than or equal to 8, return n * factorial(n-9) * factorial(n-10)\
    \ * factorial(n-11) * factorial(n-12) * factorial(n-13) * factorial(n-14).\nIf\
    \ n is greater than or equal to 9, return n * factorial(n-10) * factorial(n-11)\
    \ * factorial(n-12) * factorial(n-13) * factorial(n-14) * factorial(n-15).\nIf\
    \ n is greater than or equal to 10, return n * factorial(n-11) * factorial(n-12)\
    \ * factorial(n-13) * factorial(n-14) * factorial(n-15) * factorial(n-16).\nIf\
    \ n is greater than or equal to 11, return n * factorial(n-12) * factorial(n-13)\
    \ * factorial(n-14) * factorial(n-15) * factorial(n-16) * factorial(n-17).\nIf\
    \ n is greater than or equal to 12, return n * ", "\n  if(n > m) return(-1)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m +\
    \ 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 8\n  m <- m * 8\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 8\n  m <- m * 8\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 8\n  m <- m * 8\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 4\n  m <- m * 4\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n * 8\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ > m) {\n    stop(\"n must be less than m\")\n  }\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  return(as.character(as.integer(ceiling(n\
    \ / m) * m) + as.integer(ceiling(n / m) * m)))\n}\n", "\n  n <- n\n  m <- m\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  n <- n + 1\n  m <- m + 1\n  \n\
    \  return(as.character(round(n/m, digits = 0)) + as.character(round(m/n, digits\
    \ = 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b',\
    \ n))\n  m <- as.integer(sprintf('%b', m))\n  \n  n <- n - (n %% 2)\n  m <- m\
    \ - (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n \
    \ \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n \
    \ \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n \
    \ \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n\
    \ %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n \
    \ \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <-\
    \ m + (m %% 2)\n  \n  n <- n + (n %% 2)\n  m <- m + (m %% 2)", "\n  if(n > m)\
    \ {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- n * 2\n\
    \  m <- m * 2\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n +\
    \ (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n\
    \  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m / 2)\n  m <- m - (n /\
    \ 2)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n", "\n  if(n > m) return(-1)\n\
    \  return(as.character(round(n + (m - n)/2, 0)))\n}\n", "\n  \n  # Write your\
    \ code here\n  \n  if(n > m){\n    return(-1)\n  }\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  \n  # Initialize sum and count\n  sum <- 0\n \
    \ count <- 0\n  \n  # Loop through n through m\n  for (i in n:m) {\n    \n   \
    \ # Add 1 to count\n    count <- count + 1\n    \n    # Add i to sum\n    sum\
    \ <- sum + i\n  }\n  \n  # Return -1\n  if (count > m) {\n    -1\n  } else {\n\
    \    \n    # Round the sum\n    round(sum / count)\n  }\n}\n", "\n  if(n >= m)\
    \ return(-1)\n  return(as.character(round(n + (m - n)/2, 0)))\n}\n", "\n  n <-\
    \ n\n  m <- m\n  \n  if(n >= m) return(-1)\n  \n  return(paste0(as.character(round(n\
    \ + (m - n)/2, 0)), collapse = \"\"))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

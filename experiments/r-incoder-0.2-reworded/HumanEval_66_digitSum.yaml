name: HumanEval_66_digitSum
language: r
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# >>> digitSum('')\n\
  # 0\n# >>> digitSum('abAB')\n# 131\n# >>> digitSum('abcCd')\n# 67\n# >>> digitSum('helloE')\n\
  # 69\n# >>> digitSum('woArBld')\n# 131\n# >>> digitSum('aAaaaXa')\n# 153\ndigitSum\
  \ <- function(s) {"
tests: "test_humaneval <- function() {\ncandidate <- digitSum\n    if(!identical(candidate(''),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate('abAB'), 131)){quit('no', 1)}\n\
  \    if(!identical(candidate('abcCd'), 67)){quit('no', 1)}\n    if(!identical(candidate('helloE'),\
  \ 69)){quit('no', 1)}\n    if(!identical(candidate('woArBld'), 131)){quit('no',\
  \ 1)}\n    if(!identical(candidate('aAaaaXa'), 153)){quit('no', 1)}\n    if(!identical(candidate('\
  \ How are yOu?'), 151)){quit('no', 1)}\n    if(!identical(candidate('You arE Very\
  \ Smart'), 327)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  sum(unlist(lapply(strsplit(s, ''), function(x) sum(as.integer(x)\
    \ > 64))))\n}\n", "\n  sum(gregexpr(\"[[:upper:]]\", s)[[1]])\n}\n", "\n  sum(unlist(lapply(strsplit(s,\
    \ ''), function(x) sum(as.integer(x) > 64))))\n}\n</cell>\n<cell>", "\n  sum <-\
    \ 0\n  for(i in 1:nchar(s)) {\n    sum <- sum + as.integer(substr(s, i, i)) +\
    \ as.integer(substr(s, i+1, i+1))\n  }\n  return(sum)\n}\n", "\n  sum(unlist(lapply(strsplit(s,\
    \ ''), function(x) sum(as.integer(x)[upper.case(x)])))\n}\n</cell>\n<cell>\ndigitSum('helloE')\n\
    </cell>\n<cell>\ndigitSum('woArBld')\n</cell>\n<cell>\ndigitSum('aAaaaXa')\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes a string as input and returns the\
    \ number of characters in the string that are uppercase letters.\nExamples:\n\
    >>> upperCaseCharCount('')\n0\n>>> upperCaseCharCount('abc')\n2\n>>> upperCaseCharCount('abC')\n\
    1\n>>> upperCaseCharCount('abCd')\n1\n>>> upperCaseCharCount('abCdE')\n2\n>>>\
    \ upperCaseCharCount('abCdEf')\n3\n>>> upperCaseCharCount('abCdEfG')\n4\n>>> upperCaseCharCount('abCdEfGh')\n\
    5\n>>> upperCaseCharCount('abCdEfGhI')\n6\n>>> upperCaseCharCount('abCdEfGhIj')\n\
    7\n>>> upperCaseCharCount('abCdEfGhIjK')\n8\n>>> upperCaseCharCount('abCdEfGhIjKl')\n\
    9\n>>> upperCaseCharCount('abCdEfGhIjKlM')\n10\n>>> upperCaseCharCount('abCdEfGhIjKlMno')\n\
    11\n>>> upperCaseCharCount('abCdEfGhIjKlMnoP')\n12\n>>> upperCaseCharCount('abCdEfGhIjKlMnoPq')\n\
    13\n>>> upperCaseCharCount('abCdEfGhIjKlMnoPqR')\n14\n>>> upperCaseCharCount('abCdEfGhIjKlMnoPqRsT')\n\
    15\n>>> upperCaseCharCount('abCdEfGhIjKlMnoPqRsTv')\n16\n>>> upperCaseCharCount('abCdEfGhIjKlMnoPqRsTvY')\n\
    17\n>>> upperCaseCharCount('abCdEfGhIjK", "\n  sum(unlist(strsplit(s, \"\")[[1]])[upper.case(unlist(strsplit(s,\
    \ \"\")[[1]])) == TRUE])\n}\n</cell>\n<cell>\ndigitSum('helloE')\n</cell>\n<cell>\n\
    digitSum('woArBld')\n</cell>\n<cell>\ndigitSum('aAaaaXa')\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are upper-case. For example, the string 'aBcDeF' has 4 upper-case\
    \ characters, so the function should return 4.\n\nHINT: You can use the function\
    \ strcount from the stringr package.\n\n\n</text>\n<cell>", "\n  sum(unlist(lapply(strsplit(s,\
    \ ''), function(x) sum(as.integer(x)[upper.case(x)])))\n}\ndigitSum('helloE')\n\
    digitSum('woArBld')\ndigitSum('aAaaaXa')\ndigitSum('abcCd')\ndigitSum('abAB')\n\
    digitSum('')\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nA solution using stringr\
    \ package:\n<code>\nlibrary(stringr)\n", "\n  s <- gsub(\"[^[:digit:]]\", \"\"\
    , s)\n  sum(as.integer(s))\n}\n</cell>\n<cell>", "\n  sum(gregexpr(\"[A-Z]\",\
    \ s)[[1]])\n}\n", "\n  sum(unlist(lapply(strsplit(s, ''), function(x) sum(as.integer(x)[upper.case(x)])))\n\
    }\n", "\n  sum(unlist(lapply(strsplit(s, ''), function(x) sum(as.integer(x)>96))))\n\
    }\n", "\n  sum(unlist(strsplit(s, \"\")))\n}\n", "\n  sum(unlist(lapply(strsplit(s,\
    \ ''), function(x) sum(as.integer(x) > 96))))\n}\n", "\n  sum(unlist(strsplit(s,\
    \ '')[[1]])[upper.case(unlist(strsplit(s, '')[[1]])) == TRUE])\n}\n", "\n  sum(unlist(strsplit(s,\
    \ \"\")[[1]])[upper.case(unlist(strsplit(s, \"\")[[1]])) == TRUE])\n}\n", "\n\
    \  sum(as.integer(gsub(\"[^A-Z]\", \"\", s)))\n}\n</cell>\n<cell>", "\n  sum(unlist(strsplit(s,\
    \ \"\")[[1]])[upper.case(unlist(strsplit(s, \"\")[[1]])) == TRUE])\n}\n", "\n\
    \  sum(as.integer(gsub(\"[^[:digit:]]\", \"\", s)))\n}\ndigitSum(letters)", "\n\
    \  sum(unlist(strsplit(s, \"\")[[1]])[upper.case(unlist(strsplit(s, \"\")[[1]]))\
    \ == TRUE])\n}\n", "\n  sum(unlist(strsplit(s, \"\")[[1]][grep(\"[[:upper:]]\"\
    , s)]))\n}\ndigitSum(\"aAaaaXa\")"]
stop_tokens:
- "\n#"
- "\n```"

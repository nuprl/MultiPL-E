name: HumanEval_36_fizz_buzz
language: r
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nfizz_buzz <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- fizz_buzz\n    if(!identical(candidate(50),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(78), 2)){quit('no', 1)}\n    if(!identical(candidate(79),\
  \ 3)){quit('no', 1)}\n    if(!identical(candidate(100), 3)){quit('no', 1)}\n   \
  \ if(!identical(candidate(200), 6)){quit('no', 1)}\n    if(!identical(candidate(4000),\
  \ 192)){quit('no', 1)}\n    if(!identical(candidate(10000), 639)){quit('no', 1)}\n\
  \    if(!identical(candidate(100000), 8026)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n\
    \  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<|\
    \ a |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/ a\
    \ dscore=4 tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0\
    \ & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0 &\
    \ n%%13!=0) return(3)\n}\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0\
    \ & n%%13!=0) return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=4 |>\n\
    <code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n\
    \  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/ a tags=r,fizz", "\n  n <-\
    \ as.integer(n)\n  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n", "\n\
    \  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a tags=r,recursion,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz <- function(n) {\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 13 != 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer! I really appreciate\
    \ it. I was wondering if there is a way to do this without using any loops. I\
    \ guess it would be more efficient to just use loops anyways.\n<|/ c |>\n<| c\
    \ |>\nI added a solution without loops.\n<|/ c |>\n<| c |>\nThanks again! I really\
    \ appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n){\n\
    \  if(n %% 11 == 0 | n %% 13 == 0){\n    return(0)\n  }\n  if(n %% 11 != 0){\n\
    \    return(1)\n  }\n  if(n %% 13 != 0){\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer! I really appreciate\
    \ it. I was wondering if there is a way to do this without using any loops. I\
    \ guess it would be more efficient to just use loops anyways.\n<|/ c |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n\
    \ %% 13 == 0){\n    return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n\
    \  if(n %% 13 != 0){\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer! I really appreciate it. I was wondering\
    \ if there is a way to do this without using any loops. I guess it would be more\
    \ efficient to just use loops anyways.\n<|/ c |>\n<| c |>\nI added a solution\
    \ without loops.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n){\n\
    \  if(n %% 11 == 0 | n %% 13 == 0){\n    return(0)\n  }\n  if(n %% 11 != 0){\n\
    \    return(1)\n  }\n  if(n %% 13 != 0){", "\n  n <- n\n  n <- ifelse(n %% 11\
    \ == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %%\
    \ 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<text>\nNow let's try it\
    \ out on some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100, 10))\n\
    </cell>\n<text>\nNow let's try it out on some random numbers:\n\n\n</text>\n<cell>\n\
    fizz_buzz(sample(1:100, 10))\n</cell>\n<text>\nNow let's try it out on some random\
    \ numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n<text>\n\
    Now let's try it out on some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100,\
    \ 10))\n</cell>\n<text>\nNow let's try it out on some random numbers:\n\n\n</text>\n\
    <cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n<text>\nNow let's try it out on\
    \ some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n\
    <text>\nNow let's try it out on some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100,\
    \ 10))\n</cell>\n<text>\nNow let's try it out on some random numbers:\n\n\n</text>\n\
    <cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n<text>\nNow let's try it out on\
    \ some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n\
    <text>\nNow let's try it out on some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100,\
    \ 10))\n</cell>\n<text>\nNow let's try it out on some random numbers:\n\n\n</text>\n\
    <cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n<text>\nNow let's try it out on\
    \ some random numbers:\n\n\n</text>\n<cell>\nfizz_buzz(sample(1:100, 10))\n</cell>\n\
    <text>\nNow let's try it out on some random numbers:\n\n\n</text>\n", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13\
    \ == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n\
    \  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n\
    <cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(1000)\n\
    </cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n<cell>\nfizz_buzz(100000)\n</cell>\n\
    <cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\nfizz_buzz(10000000)\n</cell>\n<cell>\n\
    fizz_buzz(100000000)\n</cell>\n<cell>\nfizz_buzz(1000000000)\n</cell>\n<cell>\n\
    fizz_buzz(10000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000)\n</cell>\n<cell>\n\
    fizz_buzz(1000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000)\n</cell>\n\
    <cell>\nfizz_buzz(100000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000000000)\n</cell", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n\
    \ %% 11 == 0 | n %% 13 == 0)))\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 &\
    \ n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0)\
    \ return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 1) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 1) {\n    return(2)\n  }\n  if(n %% 11 ==\
    \ 2) {\n    return(3)\n  }\n  if(n %% 13 == 2) {\n    return(4)\n  }\n  if(n %%\
    \ 11 == 3) {\n    return(5)\n  }\n  if(n %% 13 == 3) {\n    return(6)\n  }\n \
    \ if(n %% 11 == 4) {\n    return(7)\n  }\n  if(n %% 13 == 4) {\n    return(8)\n\
    \  }\n  if(n %% 11 == 5) {\n    return(9)\n  }\n  if(n %% 13 == 5) {\n    return(10)\n\
    \  }\n  if(n %% 11 == 6) {\n    return(11)\n  }\n  if(n %% 13 == 6) {\n    return(12)\n\
    \  }\n  if(n %% 11 == 7) {\n    return(13)\n  }\n  if(n %% 13 == 7) {\n    return(14)\n\
    \  }\n  if(n %% 11 == 8) {\n    return(15)\n  }\n  if(n %% 13 == 8) {\n    return(16)\n\
    \  }\n  if(n %% 11 == 9) {\n    return(17)\n  }\n  if(n %% 13 == 9) {\n    return(18)\n\
    \  }\n  if(n %% 11 == 10) {\n    return(19)\n  }\n  if(n %% 13 == 10) {\n    return(20)\n\
    \  }\n  if(n %% 11 == 11) {\n    return(21)\n  }\n  if(n %% 13 == 11) {\n    return(22)\n\
    \  }\n  if(n %% 11 == 12) {\n    return(23)\n  }\n  if(n %% 13 == 12) {\n    return(24)\n\
    \  }\n  if(n %% 11 == 13) {\n    return(25)\n  }\n  if(n %% 13 == 13) {\n    return(26)\n\
    \  }\n  if(n %% 11 == 14) {\n    return(27)\n  }\n  if(n %% 13 == 14) {\n    return(28)\n\
    \  }\n  if(n %% 11 == 15) {\n    return(29)\n  }\n  if(n %% 13 == 15) {\n    return(30)\n\
    \  }\n  if(n %% 11 == 16) {\n    return(31)\n  }\n  if(n %% 13 == 16) {\n    return(32)\n\
    \  }\n  if(n %% 11 == 17) {\n    return(33)\n  }\n  if(n %% 13 == 17) {\n    return(34",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add\
    \ some explanation to your answer such that others can learn from it\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=", "\n  return(as.integer(n %% 11) + as.integer(n\
    \ %% 13))\n}\n</cell>\n<text>\nNow let's test our function:\n\n\n</text>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nWe can also use ifelse to simplify our code:\n\n\n</text>\n<cell>\n\
    fizz_buzz <- function(n) {\n  return(ifelse(as.integer(n %% 11) == 0, 0,\n   \
    \             ifelse(as.integer(n %% 13) == 0, 1,\n                       as.integer(n\
    \ %% 11) + as.integer(n %% 13))))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nWe can\
    \ also use ifelse to simplify our code:\n\n\n</text>\n<cell>\nfizz_buzz <- function(n)\
    \ {\n  return(ifelse(as.integer(n %% 11) == 0, 0,\n                ifelse(as.integer(n\
    \ %% 13) == 0, 1,\n                       as.integer(n %% 11) + as.integer(n %%\
    \ 13))))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nWe can also use ifelse to simplify\
    \ our code:\n\n\n</text>\n<cell>\nfizz_buzz <- function(n) {\n  return(ifelse(as.integer(n\
    \ %% 11) == 0, 0,\n                ifelse(as.integer(n %% 13) == 0, 1,\n     \
    \                  as.integer(n %% 11) + as.integer(n %% 13))))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nWe can also use ifelse to simplify our code:\n\n\n</text>\n<cell>\n\
    fizz_buzz <- function(n) {\n  return(ifelse(as.integer(", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\n\
    Please add some explanation to your answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nPlease add some\
    \ explanation to your answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <-\
    \ function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n \
    \ if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n \
    \ if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n\
    <| c |>\nThanks for pointing that out. I fixed the code so it now works.\n<|/\
    \ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 tags=r |>\n<| c |>\nThis doesn't work.\
    \ Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I fixed the code so it now works.\n<|/ c |>\n<| a tags=r |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(50)`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the code so it now works.\n\
    <|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0 tags=r |>\n<| c |>\nThis\
    \ doesn't work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\nI like using dplyr and purrr for these kinds of problems.\
    \ \n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n\ndf <- data.frame(n\
    \ = c(1:100))\n\ndf %>% \n  mutate(fizz_buzz = map(n, fizz_buzz))\n</code>\n<|/\
    \ a tags=r,dplyr |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a tags=r,dplyr\
    \ |>\n<| a tags=r,dplyr |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,dplyr\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(as.integer(n %% 11) + as.integer(n\
    \ %% 13))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| a tags=r,dplyr\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n \
    \ if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| c |>\nPlease add some explanation to your answer\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| c |>\nPlease add some explanation to your answer\n<|/ c |>\n<| a |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz d", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r |>\n<| c |>\n\
    This doesn't seem to work. `fizz_buzz(50)` returns `0`, but `fizz_buzz(78)` returns\
    \ `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the answer\
    \ with a new function that works.\n<|/ c |>\n<| a tags=r |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=r |>\n<code>\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0\
    \ & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\
    \ else {\n    return(n)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0)\
    \ {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n\
    \  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nPlease add some explanation\
    \ to your answer.\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question.\
    \ Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26859463)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26859463)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n\
    \ %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\nHere's a solution using\
    \ dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n \
    \   return(n %% 13)\n  }\n  return(n %% 11)\n}\n\ndf <- data.frame(number = 1:100)\n\
    \ndf %>% \n  mutate(fizz_buzz = map_int(number, fizz_buzz))\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n\nfizz_buzz(50)\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n\
    \ %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n\
    \ %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n %% 13))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(123)\n</cell>\n<cell>\n\
    fizz_buzz(125)\n</cell>\n<cell>\nfizz_buzz(126)\n</cell>\n<cell>\nfizz_buzz(127)\n\
    </cell>\n<cell>\nfizz_buzz(128)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\n\
    fizz_buzz(130)\n</cell>\n<cell>\nfizz_buzz(131)\n</cell>\n<cell>\nfizz_buzz(132)\n\
    </cell>\n<cell>\nfizz_buzz(133)\n</cell>\n<cell>\nfizz_buzz(134)\n</cell>\n<cell>\n\
    fizz_buzz(135)\n</cell>\n<cell>\nfizz_buzz(136)\n</cell>\n<cell>\nfizz_buzz(137)\n\
    </cell>\n<cell>\nfizz_buzz(138)\n</cell>\n<cell>\nfizz_buzz(139)\n</cell>\n<cell>\n\
    fizz_buzz(140)\n</cell>\n<cell>\nfizz_buzz(141)\n</cell>\n<cell>\nfizz_buzz(142)\n\
    </cell>\n<cell>\nfizz_buzz(143)\n</cell>\n<cell>\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n\
    \  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n\
    \ %% 11) + fizz_buzz(n %% 13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\nHere's a solution using recursion:\n<code>\nfizzbuzz <- function(n) {\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(fizzbuzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizzbuzz(n\
    \ %% 13))\n  }\n  return(fizzbuzz(n %% 11) + fizzbuzz(n %% 13))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\nHere's a recursive solution:\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(fizzbuzz(n %% 11))\n  }\n  if(n %% 13 != 0)\
    \ {\n    return(fizzbuzz(n %% 13))\n  }\n  return(fizzbuzz(n %% 11) + fizzbuzz(n\
    \ %% 13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\n\
    Here's a recursive solution:\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11\
    \ == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizzbuzz(n\
    \ %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizzbuzz(n %% 13))\n  }\n  return(fizzbuzz(n\
    \ %% 11) + fizzbuzz(n %% 13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a dscore=1 |>\nHere's a recursive solution:\n<code>\nfizzbuzz <", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n  return(as.integer(n%%11)\
    \ + as.integer(n%%13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r |>\n<| c |>\nPlease add some explanation to your answer such that\
    \ others can learn from it\n<|/ c |>\n<| c |>\nThis does not provide an answer\
    \ to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26590192)\n<|/ c |>\n<| c |>\nThis\
    \ does provide an answer to the question. How does it not provide an answer?\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26590192)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ takes a vector of numbers and returns the number of times the digit 7 appears\
    \ in each number.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n\nfizzbuzz(50)\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0)\
    \ return(2)\n  return(3)\n}\n\nfizzbuzz(50)\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0)\
    \ return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n\
    }\n\nfizzbuzz(50)\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n\nfizzbuzz(50)\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0\
    \ & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n\
    \  return(3)\n}\n\nfizzbuzz(50)\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n\
    \  if", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 ==\
    \ 0) return(2)\n  return(as.integer(n %% 11) + 1)\n}\n", "\n  n <- n\n  n <- ifelse(n\
    \ %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0 & n %% 13 != 0,\
    \ n, 0)\n  n <- ifelse(n %% 11 != 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %%\
    \ 11 != 0 & n %% 13 != 0, n, 0)\n  n\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  n <- ifelse(n %% 11 == 0\
    \ & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0 & n %% 13 != 0, n, 0)\n  n\
    \ <- ifelse(n %% 11 != 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 != 0 & n\
    \ %% 13 != 0, n, 0)\n  n\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  n <- ifelse(n %% 11 == 0\
    \ & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0 & n %% 13 != 0, n, 0)\n  n\
    \ <- ifelse(n %% 11 != 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 != 0 & n\
    \ %% 13 != 0, n, 0)\n  n\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  n <- ifelse(n %% 11 == 0\
    \ & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0 & n %% 13 != 0, n, 0)\n  n\
    \ <- ifelse(n %% 11 != 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 != 0 & n\
    \ %% 13 != 0, n, 0)\n  n\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  n <- ifelse(n %% 11 == ",
  "\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the number of integers that are divisible by 7 and are also divisible\
    \ by 11.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n   \
    \ return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n\
    \ %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18178053)\n\
    <|/ c |>\n<| c |>\nThe question was \"How can I use R to count the number of times\
    \ a digit appears in an integer less than n?\" The answer was \"Use a loop and\
    \ a counter.\" The code I posted was a solution to the question \"How can I use\
    \ R to count the number of times a digit appears in an integer less than n?\"\
    \ The code I posted was a solution to the question \"How can I use R to count\
    \ the number of times a digit appears in an integer less than n?\" The code I\
    \ posted was a solution to the question \"How can I use R to count the number\
    \ of times a digit appears in an integer less than n?\" The code I posted was\
    \ a solution to the question \"How can I use R to count the number of times a\
    \ digit appears in an integer less than n?\" The code I posted was a solution\
    \ to the question \"How can I use R to count the number of times a digit appears\
    \ in an integer less than n?\" The code I posted was a solution to the question\
    \ \"How can I use R to count the number of times a digit appears in an integer\
    \ less than n?\" The code I posted was a solution to the question \"How can I\
    \ use R to count the number of times a digit appears in an integer less than n?\"\
    \ The code I posted was a solution to the question \"How can I use R to count\
    \ the number of times a digit appears in an integer less than n?\" The code I\
    \ posted was a solution to the question \"How can I use R to count the number\
    \ of times a digit appears in an integer less than n?\" The code I posted was\
    \ a solution to the question \"How can I use R to count the number of times a\
    \ digit appears in an integer less than n?\" The code I posted was a solution\
    \ to the question \"How can I use R to count the number of times a digit appears\
    \ in an integer less than n?\" The code I posted was a solution to the question\
    \ \"How can I use R to count the number of times a digit appears in an integer\
    \ less than n?\" The code I posted was a solution to the question \"How can I\
    \ use R to count the number of times a digit appears in an integer less than n?\"\
    \ The code I posted was ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c\
    \ |>\nThanks, this was very helpful.\n<|/ c |>\n<| a dscore=1 |>\nA simple solution\
    \ is to use ifelse to return different values based on the conditions.\n<code>\n\
    fizz_buzz <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0, 0,\n       \
    \  ifelse(n %% 11 == 0 & n %% 13 != 0, 1,\n                ifelse(n %% 11 != 0\
    \ & n %% 13 == 0, 2,\n                       ifelse(n %% 11 != 0 & n %% 13 !=\
    \ 0, 3, n))))\n}\n</code>\n<|/ a tags=r,if-statement |>\n<| a tags=r,if-statement\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0,\
    \ 0,\n         ifelse(n %% 11 == 0 & n %% 13 != 0, 1,\n                ifelse(n\
    \ %% 11 != 0 & n %% 13 == 0, 2,\n                       ifelse(n %% 11 != 0 &\
    \ n %% 13 != 0, 3, n))))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,if-statement\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0,\
    \ 0,\n         ifelse(n %% 11 == 0 & n %% 13 != 0, 1,\n                ifelse(n\
    \ %% 11 != 0 & n %% 13 == 0, 2,\n                       ifelse(n %% 11 != 0 &\
    \ n %% 13 != 0, 3, n))))\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0, 0,\n       \
    \  ifelse(n %% 11 == 0 & n %% 13 != 0, 1,\n                ifelse(n %% 11 != 0\
    \ & n %% 13 == 0, 2,\n                       ", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 1) {\n   \
    \ return(1)\n  }\n  if(n %% 13 == 1) {\n    return(2)\n  }\n  return(3)\n}\n",
  "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a |>\n<| c |>\nThanks\
    \ so much! I really appreciate it!\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0\
    \ tags=r,fizzbuzz |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding how and/or why it solves the problem would improve\
    \ the answer's long-term value.\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value.\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz dscore=0\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(as.integer(n %% 11))\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13 and\
    \ which are also divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- n\n  return(\n\
    \    sum(\n      ifelse(\n        n %% 11 == 0 | n %% 13 == 0,\n        1,\n \
    \       0\n      )\n    )\n  )\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n\
    </cell>\n<cell>\nfizz_buzz(101)\n</cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\n\
    fizz_buzz(103)\n</cell>\n<cell>\nfizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n\
    </cell>\n<cell>\nfizz_buzz(106)\n</cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\n\
    fizz_buzz(108)\n</cell>\n<cell>\nfizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n\
    </cell>\n<cell>\nfizz_buzz(111)\n</cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\n\
    fizz_buzz(113)\n</cell>\n<cell>\nfizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n\
    </cell>\n<cell>\nfizz_buzz(116)\n</cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\n\
    fizz_buzz(118)\n</cell>\n<cell>\nfizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n\
    </cell>\n<cell>\nfizz_buzz(121)\n</cell>\n<cell>\nfizz_buzz(122)\n</cell>\n<cell>\n\
    fizz_buzz(123)\n</cell>\n<cell>\nfizz_bu", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n\
    \ %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| c |>\nThanks so much! This was\
    \ really helpful.\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 | x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 != 0){\n    return(x %% 11)\n  }\n  if(x %% 13 != 0){\n    return(x %%\
    \ 13)\n  }\n  return(x %% 11)\n}\n\nfizzbuzz(50)\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 | x %% 13\
    \ == 0){\n    return(0)\n  }\n  if(x %% 11 != 0){\n    return(x %% 11)\n  }\n\
    \  if(x %% 13 != 0){\n    return(x %% 13)\n  }\n  return(x %% 11)\n}\n\nfizzbuzz(50)\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 | x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 != 0){\n    return(x %% 11)\n  }\n  if(x %% 13 != 0){\n    return(x %%\
    \ 13)\n  }\n  return(x %% 11)\n}\n\nfizzbuzz(50)\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 |\
    \ x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 != 0){\n    return(x %% 11)\n\
    \  }\n  if(x %% 13 != 0){\n    return(x %% 13)\n  }\n  return(x %% 11)\n}\n\n\
    fizzbuzz(", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n   \
    \ return(0)\n  }\n  if(n %% 11 == 1) {\n    return(1)\n  }\n  if(n %% 13 == 1)\
    \ {\n    return(2)\n  }\n  return(3)\n}\n</cell>\n<text>\nThe function fizz_buzz\
    \ takes one argument, n, which represents the number to be tested. The function\
    \ returns an integer which represents the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. For example, fizz_buzz(50)\
    \ returns 0 because 50 is divisible by 11 and 0 times 7 is divisible by 13. fizz_buzz(78)\
    \ returns 2 because 78 is divisible by 11 and 2 times 7 is divisible by 13. fizz_buzz(79)\
    \ returns 3 because 79 is divisible by 11 and 3 times 7 is divisible by 13. fizz_buzz(100)\
    \ returns 0 because 100 is not divisible by 11 and 0 times 7 is divisible by 13.\
    \ fizz_buzz(1000) returns 2 because 1000 is not divisible by 11 and 2 times 7\
    \ is divisible by 13. fizz_buzz(10000) returns 3 because 10000 is not divisible\
    \ by 11 and 3 times 7 is divisible by 13. fizz_buzz(100000) returns 4 because\
    \ 100000 is not divisible by 11 and 4 times 7 is divisible by 13. fizz_buzz(1000000)\
    \ returns 5 because 1000000 is not divisible by 11 and 5 times 7 is divisible\
    \ by 13. fizz_buzz(100000000) returns 6 because 100000000 is not divisible by\
    \ 11 and 6 times 7 is divisible by 13. fizz_buzz(1000000000) returns 7 because\
    \ 1000000000 is not divisible by 11 and 7 times 7 is divisible by 13. fizz_buzz(10000000000)\
    \ returns 8 because 10000000000 is not divisible by 11 and 8 times 7 is divisible\
    \ by 13. fizz_buzz(100000000000) returns 9 because 100000000000 is not divisible\
    \ by 11 and 9 times 7 is divisible by 13. fizz_buzz(1000000000000) returns 10\
    \ because 1000000000000 is not divisible by 11 and 10 times 7 is divisible by\
    \ 13. fizz_buzz(10000000000000) returns 11 because 10000000000000 is not divisible\
    \ by 11 and 11 times 7 is divisible by 13. fizz_buzz(100", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(1)\n  }\n  if(n %% 13 != 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(1)\n  }\n  if(x %% 13 !=\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(x %% 11 != 0) {\n    return(1)\n  }\n  if(x %% 13 != 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop dscore=2 |>\n<|\
    \ a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11\
    \ == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(1)\n\
    \  }\n  if(x %% 13 != 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n\
    \    return(1)\n  }\n  if(x %% 13 != 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n\
    \    return(1)\n  }\n  if(x %% 13 != 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=2 |>\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n\
    </cell>\n<text>\nThe if-else statement\nThe if-else statement is a conditional\
    \ statement that evaluates a condition and then executes code depending on the\
    \ result. \nThe conditional statement is of the form:\n\nif (condition) {\n  statements\n\
    } else {\n  statements\n}\nThe condition is evaluated in an if-else statement\
    \ as shown in the following example:\n\n\n</text>\n<cell>\nif (TRUE) {\n  print(\"\
    The condition is TRUE\")\n} else {\n  print(\"The condition is FALSE\")\n}\n</cell>\n\
    <cell>\nif (FALSE) {\n  print(\"The condition is TRUE\")\n} else {\n  print(\"\
    The condition is FALSE\")\n}\n</cell>\n<text>\nThe if-else statement is often\
    \ used to control the flow of program execution. \nFor example, an if-else statement\
    \ can be used to control the flow of program execution based on the value of a\
    \ variable or an expression. \nThe if-else statement is of the form:\n\nif (condition)\
    \ {\n  statements\n} else {\n  statements\n}\nThe condition is evaluated in an\
    \ if-else statement as shown in the following example:\n\n\n</text>\n<cell>\n\
    if (TRUE) {\n  print(\"The condition is TRUE\")\n} else {\n  print(\"The condition\
    \ is FALSE\")\n}\n</cell>\n<cell>\nif (FALSE) {\n  print(\"The condition is TRUE\"\
    )\n} else {\n  print(\"The condition is FALSE\")\n}\n</cell>\n<text>\nThe if-else\
    \ statement is often used to control the flow of program execution. \nFor example,\
    \ an if-else statement can be used to control the flow of program execution based\
    \ on the value of a variable or an expression. \nThe if-else statement is of the\
    \ form:\n\nif (condition) {\n  statements\n} else {\n  statements\n}\nThe condition\
    \ is evaluated in an if-else statement as shown in the following example:\n\n\n\
    </text>\n<cell>\nif (TRUE) {\n  print(\"The condition is TRUE\")\n} else {\n \
    \ print(\"The condition is FALSE\")\n}\n</cell>\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste(\"Fizz\", if(n%%13==0)\
    \ \"Buzz\" else \"\", sep = \"\"))\n  if(n%%13==0) return(paste(\"FizzBuzz\",\
    \ if(n%%11==0) \"Buzz\" else \"\", sep = \"\"))\n}\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers and returns the number of\
    \ times each number appears in the vector.\n\n\n</text>\n<cell>", "\n  n <- n\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| c |>\n\
    Thanks so much for the help! I really appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz,recursion\
    \ |>\nHere's a recursive solution:\n<code>\nfizzbuzz <- function(n) {\n  if (n\
    \ %% 11 == 0) return(0)\n  if (n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11)\
    \ + fizzbuzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,recursion\
    \ |>\nHere's a recursive solution:\n<code>\nfizzbuzz <- function(n) {\n  if (n\
    \ %% 11 == 0) return(0)\n  if (n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11)\
    \ + fizzbuzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\nHere's a recursive\
    \ solution:\n<code>\nfizzbuzz <- function(n) {\n  if (n %% 11 == 0) return(0)\n\
    \  if (n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11) + fizzbuzz(n/13))\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,recursion dscore=2 |>\n<| a dscore=1 |>\nHere's\
    \ a recursive solution:\n<code>\nfizzbuzz <- function(n) {\n  if (n %% 11 == 0)\
    \ return(0)\n  if (n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11) + fizzbuzz(n/13))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| a dscore=1 |>\nHere's a recursive\
    \ solution:\n<code>\nfizzbuzz <- function(n) {\n  if (n %% 11 == 0) return(0)\n\
    \  if (n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11) + fizzbuzz(n/13))\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| a tags=r,fizzbuzz,recursion |>\n\
    Here's a recursive ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns a vector of the same length with each element being the sum of the\
    \ integers up to and including that element.\n\nFor example, if the input vector\
    \ is c(1,2,3,4,5,6,7,8,9,10) then the output vector should be c(1,3,6,10,15,21,28,36,45,55).\n\
    \n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n \
    \   return(0)\n  }\n  if(n%%11==0) {\n    return(1)\n  }\n  if(n%%13==0) {\n \
    \   return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\n\
    This doesn't work for me. `fizz_buzz(50)` returns `1` instead of `0`.\n<|/ c |>\n\
    <| c |>\nIt works for me on R 3.2.2 on Windows. What version of R are you using?\n\
    <|/ c |>\n<| c |>\nI'm using R 3.2.2 on OS X. Maybe it's my version of R?\n<|/\
    \ c |>\n<| c |>\nI updated my answer to include a version that works on R 3.2.2\
    \ on OS X. Can you try it again?\n<|/ c |>\n<| c |>\nI still get `1` for `fizz_buzz(50)`.\
    \ I'm running R 3.2.2 on OS X.\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    return(0)\n  }\n \
    \ if(n%%11==0) {\n    return(1)\n  }\n  if(n%%13==0) {\n    return(2)\n  }\n \
    \ return(3)\n}\n</code>\n<|/ a dscore=3 tags=r,fizzbuzz |>\n<| a dscore=3 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0)\
    \ {\n    return(0)\n  }\n  if(n%%11==0) {\n    return(1)\n  }\n  if(n%%13==0)\
    \ {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<|\
    \ a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) {\n    return(0)\n  }\n  if(n%%11==0) {\n    return(1)\n\
    \  }\n  if(n%%13==0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=3\
    \ |>\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13\
    \ != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) +\
    \ fizz_buzz(n %% 13))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ answer! I didn't know that `%%` could be used like that. I'm still learning\
    \ R and I appreciate your help.\n<|/ c |>\n<| c |>\nNo problem! The `%%` operator\
    \ is very useful in R. For example, `5 %% 2` returns `0` because `5` is evenly\
    \ divisible by `2`. `5 %% 3` returns `1` because `5` is divisible by `3`. `5 %%\
    \ 4` returns `1` because `5` is divisible by `4`. `5 %% 5` returns `0` because\
    \ `5` is divisible by `5`. `5 %% 6` returns `1` because `5` is divisible by `6`.\
    \ `5 %% 7` returns `1` because `5` is divisible by `7`. `5 %% 8` returns `1` because\
    \ `5` is divisible by `8`. `5 %% 9` returns `1` because `5` is divisible by `9`.\
    \ `5 %% 10` returns `1` because `5` is divisible by `10`. `5 %% 11` returns `1`\
    \ because `5` is divisible by `11`. `5 %% 12` returns `1` because `5` is divisible\
    \ by `12`. `5 %% 13` returns `1` because `5` is divisible by `13`. `5 %% 14` returns\
    \ `1` because `5` is divisible by `14`. `5 %% 15` returns `1` because `5` is divisible\
    \ by `15`. `5 %% 16` returns `1` because `5` is divisible by `16`. `5 %% 17` returns\
    \ `1` because `5` is divisible by `17`. `5 %% 18` returns `1` because `5` is divisible\
    \ by `18`. `5 %% 19` returns `1` because `5` is divisible by `19`. `", "\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n\
    \nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, ", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(NA)\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13 and\
    \ which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, ", "\n  return(sum(n %% 11 == 0 & n %% 13 ==\
    \ 0))\n}\n", "\n  n <- n\n  return(\n    sum(\n      ifelse(\n        n %% 11\
    \ == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n          n %% 11 == 0 |\
    \ n %% 13 == 0,\n          2,\n          ifelse(\n            n %% 11 == 0 & n\
    \ %% 13 == 1,\n            3,\n            ifelse(\n              n %% 11 == 1\
    \ | n %% 13 == 1,\n              4,\n              ifelse(\n                n\
    \ %% 11 == 0 | n %% 13 == 1,\n                5,\n                ifelse(\n  \
    \                n %% 11 == 1 & n %% 13 == 1,\n                  6,\n        \
    \          ifelse(\n                    n %% 11 == 1 | n %% 13 == 1,\n       \
    \             7,\n                    ifelse(\n                      n %% 11 ==\
    \ 1 & n %% 13 == 0,\n                      8,\n                      ifelse(\n\
    \                        n %% 11 == 0 | n %% 13 == 0,\n                      \
    \  9,\n                        ifelse(\n                          n %% 11 == 1\
    \ & n %% 13 == 1,\n                          10,\n                          ifelse(\n\
    \                            n %% 11 == 0 | n %% 13 == 0,\n                  \
    \          11,\n                            ifelse(\n                        \
    \      n %% 11 == 1 & n %% 13 == 0,\n                              12,\n     \
    \                         ifelse(\n                                n %% 11 ==\
    \ 0 | n %% 13 == 0,\n                                13,\n                   \
    \             ifelse(\n                                  n %% 11 == 1 & n %% 13\
    \ == 1,\n                                  14,\n                             \
    \     ifelse(\n                                    n %% 11 == 0 | n %% 13 == 0,\n\
    \                                    15,\n                                   \
    \ ifelse(\n                                      n %% 11 == 1 & n %% 13 == 0,\n\
    \                                      16,\n                                 \
    \     ifelse(\n                                        n %% 11 == 0 | n %% 13\
    \ == 0,\n                                        17,\n                       \
    \                 ifelse(\n                                          n %% 11 ==\
    \ 1 & n %% 13 == 1,\n                                          18,\n         \
    \                                 ifelse(\n                                  \
    \          n %% 11 == 0 | n %% 13 == 0,\n                                    \
    \        19,\n                                            ifelse(\n          \
    \                                    n %% 11 == 1 & n %% 13 == 0,\n          \
    \                                    20,\n                                   \
    \           ifelse(\n                                                n %% 11 ==\
    \ 0 | n %% 13 == 0,\n                                                21,\n   \
    \                                             ifelse(\n                      \
    \                            n %% 11 == 1 & n %% 13 == 0,\n                  \
    \                                22,\n                                       \
    \           ifelse(\n                                                    n %%\
    \ 11 == 0 | n %% 13 == 0,\n                                                  \
    \  23,\n                                                    ifelse(\n        \
    \                                              n %% 11 == 1 & n %% 13 == 1,\n\
    \                                                      24,\n                 \
    \                                     ifelse(\n                              \
    \                          n %% ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your answer. I'm still a beginner at R and I didn't\
    \ know about `%in%`. However, I did try your solution and it didn't work. I got\
    \ `Error in fizz_buzz(50) : object 'n' not found`. Any ideas?\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to include a complete working example. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your help. I really appreciate it!\n<|/ c |>\n<|\
    \ a dscore=0 |>\nHere's a solution using dplyr and purrr:\n<code>\nlibrary(dplyr)\n\
    library(purrr)\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 !=\
    \ 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\ndf <- data.frame(\n\
    \  n = c(1:100)\n)\n\ndf %>% \n  mutate(\n    buzz = map_int(n, fizz_buzz)\n \
    \ )\n</code>\n<|/ a tags=r,for-loop,if-statement |>\n<| a tags=r,for-loop,if-statement\
    \ |>\nHere's a solution using base R:\n<code>\nfizz_buzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n\nn <- c(1:100)\n\nn <- ", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers and returns the sum\
    \ of the squares of the numbers in the vector.\n\n\n</text>\n<cell>", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13\
    \ == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n\
    \  }\n}\n\nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\nfizz_buzz(100)\nfizz_buzz(101)\n\
    fizz_buzz(102)\nfizz_buzz(103)\nfizz_buzz(104)\nfizz_buzz(105)\nfizz_buzz(106)\n\
    fizz_buzz(107)\nfizz_buzz(108)\nfizz_buzz(109)\nfizz_buzz(110)\nfizz_buzz(111)\n\
    fizz_buzz(112)\nfizz_buzz(113)\nfizz_buzz(114)\nfizz_buzz(115)\nfizz_buzz(116)\n\
    fizz_buzz(117)\nfizz_buzz(118)\nfizz_buzz(119)\nfizz_buzz(120)\nfizz_buzz(121)\n\
    fizz_buzz(122)\nfizz_buzz(123)\nfizz_buzz(124)\nfizz_buzz(125)\nfizz_buzz(126)\n\
    fizz_buzz(127)\nfizz_buzz(128)\nfizz_buzz(129)\nfizz_buzz(130)\nfizz_buzz(131)\n\
    fizz_buzz(132)\nfizz_buzz(133)\nfizz_buzz(134)\nfizz_buzz(135)\nfizz_buzz(136)\n\
    fizz_buzz(137)\nfizz_buzz(138)\nfizz_buzz(139)\nfizz_buzz(140)\nfizz_buzz(141)\n\
    fizz_buzz(142)\nfizz_buzz(143)\nfizz_buzz(144)\n", "\n  return(length(grep(\"\
    7\", as.character(n), value = TRUE)) %/% 11 + length(grep(\"7\", as.character(n),\
    \ value = TRUE)) %/% 13)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n\
    \ %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n\
    \ %% 11) + fizz_buzz(n %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe Fibonacci\
    \ Sequence\nThe Fibonacci sequence is a sequence of numbers, $0, 1, 1, 2, 3, 5,\
    \ 8, 13, 21, 34, 55, 89, 144, ...$, that repeats every $n$ times. For example,\
    \ fibonacci(3) returns $0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...$.\n\n\
    The Fibonacci sequence is commonly used in mathematics and computer science, and\
    \ is one of the oldest and most well-known sequences.\n\nThe Fibonacci sequence\
    \ is defined as:\n\n$$Fn = \\begin{cases}\n0 & \\text{if } n = 0, \\\n1 & \\text{if\
    \ } n = 1, \\\nF{n-1} + F_{n-2} & \\text{otherwise}\n\\end{cases}$$\n\nwhere $F_n$\
    \ is the $n$th term of the sequence.\n\nThe first few terms of the sequence are:\n\
    \n$$F_0 = 0$$\n$$F_1 = 1$$\n$$F_2 = 1$$\n\nThe next few terms are:\n\n$$F_3 =\
    \ 2$$\n$$F_5 = 5$$\n$$F_8 = 10$$\n\nand so on. By continuing this sequence, we\
    \ obtain the Fibonacci sequence:\n\n$$F_n = F{n-1} + F_{n-2}$$\n\nFor example,\
    \ fibonacci(0) returns 0, fibonacci(1) returns 1, and fibonacci(2) returns 1.\n\
    \nThe first few terms of the Fibonacci sequence are:\n\n$$F_0 = 0$$\n$$F_1 = 1$$\n\
    $$F_2 = 1$$\n\nThe next few terms are:\n\n$$F_3 = 2$$\n$$F_5 = 5$$\n$$F_8 = 10$$\n\
    \nand so on. By continuing this sequence, we obtain the Fibon", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <-\
    \ n\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n\
    <cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n\
    \ <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    return(0)\n  }\n  if(n%%11==0)\
    \ {\n    return(1)\n  }\n  if(n%%13==0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) {\n    return(0)\n\
    \  }\n  if(x%%11==0) {\n    return(1)\n  }\n  if(x%%13==0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x%%11==0 & x%%13==0) {\n    return(0)\n  }\n  if(x%%11==0)\
    \ {\n    return(1)\n  }\n  if(x%%13==0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) {\n    return(0)\n\
    \  }\n  if(x%%11==0) {\n    return(1)\n  }\n  if(x%%13==0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) {\n    return(0)\n\
    \  }\n  if(x%%11==0) {\n    return(1)\n  }\n  if(x%%13==0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) {\n    return(0)\n\
    \  }\n  if(x%%11==0) {\n    return(1)\n  }\n  if(x%%13==0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fi", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n\
    </cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\n\
    fizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n\
    </cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\n\
    fizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n\
    </cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\n\
    fizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n</cell>\n<cell>\nfizz_buzz(116)\n\
    </cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\nfizz_buzz(118)\n</cell>\n<cell>\n\
    fizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n</cell>\n<cell>\nfizz_buzz(121)\n\
    </cell>\n<cell>\nfizz_buzz(122)\n</cell>\n<cell>\nfizz_buzz(123)\n", "\n  return(sum(as.integer(n%%11==0)|as.integer(n%%13==0)))\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 and are also divisible by 3.\n\n\n</text>\n<cell>", "\n  n <- n\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n\
    }\nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\nfizz_buzz(100)\nfizz_buzz(101)\n\
    fizz_buzz(102)\nfizz_buzz(103)\nfizz_buzz(104)\nfizz_buzz(105)\nfizz_buzz(106)\n\
    fizz_buzz(107)\nfizz_buzz(108)\nfizz_buzz(109)\nfizz_buzz(110)\nfizz_buzz(111)\n\
    fizz_buzz(112)\nfizz_buzz(113)\nfizz_buzz(114)\nfizz_buzz(115)\nfizz_buzz(116)\n\
    fizz_buzz(117)\nfizz_buzz(118)\nfizz_buzz(119)\nfizz_buzz(120)\nfizz_buzz(121)\n\
    fizz_buzz(122)\nfizz_buzz(123)\nfizz_buzz(124)\nfizz_buzz(125)\nfizz_buzz(126)\n\
    fizz_buzz(127)\nfizz_buzz(128)\nfizz_buzz(129)\nfizz_buzz(130)\nfizz_buzz(131)\n\
    fizz_buzz(132)\nfizz_buzz(133)\nfizz_buzz(134)\nfizz_buzz(135)\nfizz_buzz(136)\n\
    fizz_buzz(137)\nfizz_buzz(138)\nfizz_buzz(139)\nfizz_buzz(140)\nfizz_buzz(141)\n\
    fizz_buzz(142)\nfizz_buzz(143)\nfizz_buzz(144)\nfizz_buzz(145)\nfizz_buzz(146)\n\
    fizz_buzz(147)\nfizz_buzz(148)\nfizz_buzz(149)\n", "\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n\
    \ %% 11 == 0 | n %% 13 == 0)))\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0)\
    \ {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\", if(n%%13==0) \"\
    Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"FizzBuzz\", if(n%%11==0) \"\
    Buzz\" else \"\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement |>\n\
    <| c |>\nThanks so much for this! I really appreciate it!\n<|/ c |>\n<| c |>\n\
    No problem! I added a more efficient version that doesn't require a loop.\n<|/\
    \ c |>\n<| a dscore=2 |>\nHere's a solution that doesn't require a loop:\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(paste0(\"Fizz\", if(n%%13==0) \"Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"\
    FizzBuzz\", if(n%%11==0) \"Buzz\" else \"\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<| a |>\nHere's a solution that doesn't require a loop:\n<code>\nfizz_buzz\
    \ <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\", if(n%%13==0) \"Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"FizzBuzz\"\
    , if(n%%11==0) \"Buzz\" else \"\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement\
    \ dscore=2 |>\n<| a dscore=1 |>\nHere's a solution that doesn't require a loop:\n\
    <code>\nfizz_buzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(paste0(\"Fizz\", if(n%%13==0) \"Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"\
    FizzBuzz\", if(n%%11==0) \"Buzz\" else \"\"))\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a |>\n<| a |>\nI like using dplyr for these kinds of\
    \ problems. \n<code>\nlibrary(dplyr)\nlibrary(magrittr)\n\nfizz_buzz <- function(n){\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n \
    \   return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n\
    \ %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\n\
    fizz_buzz(1000)\n</cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n<cell>\nfizz_buzz(100000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\nfizz_buzz(10000000)\n</cell>\n\
    <cell>\nfizz_buzz(100000000)\n</cell>\n<cell>\nfizz_buzz(1000000000)\n</cell>\n\
    <cell>\nfizz_buzz(10000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000)\n</cell>\n\
    <cell>\nfizz_buzz(1000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n\
    </cell>\n<cell", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\
    \ else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n  }\n}\n", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 and 13. Test your function with n = 50 and n = 78.\n\
    \n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Thanks so much for your help! I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n  return(as.integer(n%%11)\
    \ + as.integer(n%%13))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code\
    \ may answer the question, providing additional context regarding why and/or how\
    \ this code answers the question improves its long-term value.\n<|/ c |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 || n%%13==0) return(0)\n  return(as.integer(n%%11) + as.integer(n%%13))\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how ", "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)|as.integer(n%%13==0))))\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and which are also divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + 1)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</code>\n<|/ a tags=recursion,r,fizzbuzz |>\n<| c |>\nThis doesn't seem to\
    \ work. `fizz_buzz(50)` returns `0`, but `fizz_buzz(78)` returns `2`.\n<|/ c |>\n\
    <| c |>\nThanks for catching that. I've fixed it now.\n<|/ c |>\n<| c |>\nI see\
    \ that your solution works, but I still don't understand why my solution doesn't\
    \ work. Could you please explain why my solution doesn't work?\n<|/ c |>\n<| c\
    \ |>\nThe reason your solution doesn't work is that you're not actually recursing\
    \ into your function. You're just calling the function again and again until it\
    \ hits the base case. Your function doesn't actually recurse into itself. It just\
    \ calls the function again and again until it hits the base case. That's why it\
    \ returns `0` for `fizz_buzz(50)` but `2` for `fizz_buzz(78)`.\n<|/ c |>\n<| c\
    \ |>\nI see. So how would I fix my solution to recurse into my function?\n<|/\
    \ c |>\n<| a tags=recursion,r,fizzbuzz |>\nThe problem is that the function fizz_buzz\
    \ doesn't actually recurse into itself. It just calls the function again and again\
    \ until it hits the base case. That's why it returns 0 for fizz_buzz(50) but 2\
    \ for fizz_buzz(78).\nHere's a solution that does recurse into your function:\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nI see that your solution works,\
    \ but I still don't understand why my solution doesn't work. Could you please\
    \ explain why my solution doesn't work?\n\nThe reason your solution doesn't work\
    \ is that you're not actually recursing into your function. You're just calling\
    \ the function again and ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| c |>\nThanks for your answer! I appreciate it. I was wondering if there\
    \ is a way to do this without using an if statement and without using an if statement\
    \ at all. I'm just trying to learn more about for loops and I'm just trying to\
    \ figure out how to do this without using an if statement at all. Thanks again!\n\
    <|/ c |>\n<| c |>\nI added an answer that doesn't use an if statement, but I do\
    \ agree with that you should try to learn more about for loops. It's a very useful\
    \ tool.\n<|/ c |>\n<| c |>\nThanks for your answer! I appreciate it. I was wondering\
    \ if there is a way to do this without using an if statement and without using\
    \ an if statement at all. I'm just trying to learn more about for loops and I'm\
    \ just trying to figure out how to do this without using an if statement at all.\
    \ Thanks again!\n<|/ c |>\n<| c |>\nI added an answer that doesn't use an if statement,\
    \ but I do agree with that you should try to learn more about for loops. It's\
    \ a very useful tool.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| c |>\n\
    Thanks for your answer! I appreciate it. I was wondering if there is a way to\
    \ do this without using an if statement and without using an if statement at all.\
    \ I'm just trying to learn more about for loops and I'm just trying to figure\
    \ out how to do this without using an if statement at all. Thanks again!\n<|/\
    \ c |>\n<| a tags=r,fizz", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\nHere's a recursive solution that uses rle to find the\
    \ runs of consecutive numbers and then uses sapply to find the number of runs\
    \ of consecutive numbers that are divisible by 11 or 13:\n<code>\nfizz_buzz <-\
    \ function(n) {\n  rle <- rle(as.integer(n))\n  sapply(rle$values, function(x)\
    \ {\n    if(x[1] > x[2] & x[2] %% 11 == 0 & x[2] %% 13 == 0) return(1)\n    return(0)\n\
    \  })\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\nHere's\
    \ a solution using purrr::map and purrr::reduce:\n<code>\nlibrary(purrr)\n\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  map(seq(1, n), ~ifelse(. %% 11 ==\
    \ 0 & . %% 13 == 0, .,\n                        ifelse(. %% 11 == 0, .,\n    \
    \                           ifelse(. %% 13 == 0, .,\n                        \
    \              ifelse(. %% 3 == 0, .,\n                                      \
    \       ifelse(. %% 5 == 0, .,\n                                             \
    \       ifelse(. %% 7 == 0, .,\n                                             \
    \              ifelse(. %% 9 == 0, .,\n                                      \
    \                              ifelse(. %% 11 == 0, .,\n                     \
    \                                                       ifelse(. %% 13 == 0, .,\n\
    \                                                                            \
    \       ifelse(. %% 17 == 0, .,\n                                            \
    \                                              ifelse(. %% 19 == 0, .,\n     \
    \                                                                            \
    \                ifelse(. %% 23 == 0, .,\n                                   \
    \                                                                     ifelse(.\
    \ %% 29 == 0, .,\n                                                           \
    \                                                    ifelse(. %% 31 == 0, .,\n\
    \                                                                            \
    \                                          ifelse(. %% 37 == 0, .,\n         \
    \                                                                            \
    \                                        ifelse(. %% 41 == 0, .,\n           \
    \                                                                            \
    \                                            ifelse(. %% 43 == 0, .,\n       \
    \                                                                            \
    \                                                     ifelse(. %% 47 == 0, .,\n\
    \                                                                            \
    \                                                                  ifelse(. %%\
    \ 53 == 0, .,\n                                                              \
    \                                                                            \
    \           ifelse(. %% 59 == 0, .,\n                                        \
    \                                                                            \
    \                                        ifelse(. %% 61 == 0, .,\n           \
    \                                                                            \
    \                                                                            ifelse(. ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| c |>\nThanks for your answer. I'm still trying to understand how it works.\
    \ I understand that it's counting the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13, but I don't understand how it works.\
    \ Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added a description\
    \ of how it works. Hope that helps.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\nThe function fizz_buzz takes an integer and returns a character string of\
    \ the form \"FizzBuzz\" if n is divisible by 11 or 13, and \"Fizz\" if n is divisible\
    \ by 11.\n<code>\nfizz_buzz <- function(n) {\n  if (n %% 11 == 0) return(\"FizzBuzz\"\
    )\n  if (n %% 13 == 0) return(\"Fizz\")\n  return(paste0(\"Fizz\", n, \"Buzz\"\
    ))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(\"FizzBuzz\")\n  if(n %% 13 == 0) return(\"Fizz\"\
    )\n  return(paste0(\"Fizz\", n, \"Buzz\"))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  if(n %% 11 == 0) return(\"FizzBuzz\")\n  if(n %% 13 == 0) return(\"Fizz\")\n\
    \  return(paste0(\"Fizz\", n, \"Buzz\"))\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %%\
    \ 11 == 0) return(\"FizzBuzz\")\n  if(n %% 13 == 0) return(\"Fizz\")\n  return(paste0(\"\
    Fizz\", n, \"Buzz\"))\n}\n</code>\n<|/ a dscore=1 |>\n", "\n  n <- as.integer(n)\n\
    \  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like this solution. Very concise. Thanks.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0){\n    return(\"FizzBuzz\"\
    )\n  }\n  if(n%%13==0){\n    return(\"Fizz\")\n  }\n  if(n%%15==0){\n    return(\"\
    Buzz\")\n  }\n  return(n)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0){\n    return(\"FizzBuzz\"\
    )\n  }\n  if(n%%13==0){\n    return(\"Fizz\")\n  }\n  if(n%%15==0){\n    return(\"\
    Buzz\")\n  }\n  return(n)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0){\n    return(\"FizzBuzz\"\
    )\n  }\n  if(n%%13==0){\n    return(\"Fizz\")\n  }\n  if(n%%15==0){\n    return(\"\
    Buzz\")\n  }\n  return(n)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(n){\n  if(n%%11==0){\n    return(\"FizzBuzz\")\n  }\n  if(n%%13==0){\n\
    \    return(\"Fizz\")\n  }\n  if(n%%15==0){\n    return(\"Buzz\")\n  }\n  return(n)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n){\n\
    \  if(n%%11==0){\n    return(\"FizzBuzz\")\n  }\n  if(n%%13==0){\n    return(\"\
    Fizz\")\n  }\n  if(n%%15==0){\n    return(\"Buzz\")\n  }\n  return(n)\n}", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like\
    \ this solution, but I wonder if there is a way to do it without recursion.\n\
    <|/ c |>\n<| c |>\nI added a recursive solution as well, but I agree with that\
    \ recursion is probably the best way to solve this problem.\n<|/ c |>\n<| c |>\n\
    I added a recursive solution as well, but I agree with that recursion is probably\
    \ the best way to solve this problem.\n<|/ c |>\n<| c |>\nI added a recursive\
    \ solution as well, but I agree with that recursion is probably the best way to\
    \ solve this problem.\n<|/ c |>\n<| a dscore=2 |>\nHere's a recursive solution:\n\
    <code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\nHere's a recursive solution:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + 1)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\nHere's\
    \ a recursive solution:\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\nHere's a recursive\
    \ solution:\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/\
    \ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\nHere's a recursive solution:\n\
    <code>\nfizz_buzz", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n   \
    \ return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. For example, fizz_buzz(50) should return 0,\
    \ fizz_buzz(78) should return 2, and fizz_buzz(79) should return 3.\n\n\n</text>\n\
    <cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    n <- n+1\n\
    \  }\n  if(n%%11==0) {\n    n <- n+1\n  }\n  if(n%%13==0) {\n    n <- n+1\n  }\n\
    \  return(n)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function fizz_buzz above\
    \ is called a generator function. It is a function that returns a generator object.\
    \ The generator object is an iterator that produces values as they are needed.\
    \ For example, fizz_buzz(50) returns an iterator that produces values 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50. Calling next on the iterator produces the next\
    \ value, in this case 50, and so on.\n\nThe function fizz_buzz above is called\
    \ a generator function. It is a function that returns a generator object. The\
    \ generator object is an iterator that produces values as they are needed. For\
    \ example, fizz_buzz(50) returns an iterator that produces values 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50. Calling next on the iterator produces the next value,\
    \ in this case 50, and so on.\n\nThe function fizz_buzz above is called a generator\
    \ function. It is a function that returns a generator object. The generator object\
    \ is an iterator that produces values as they are needed. For example, fizz_buzz(50)\
    \ returns an iterator that produces values 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50. Calling next on the iterator produces the next value, in this case 50, and\
    \ so on.\n\nThe function fizz_buzz above is called a generator function. It is\
    \ a function that returns a generator object. The generator object is an iterator\
    \ that produces values as they are needed. For example, fizz_buzz(50) returns\
    \ an iterator that produces values 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ", "\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0)\
    \ return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n\
    }\n", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nI like this solution, but I wonder if it can be done without recursion.\n\
    <|/ c |>\n<| c |>\nYes, it can be done without recursion. I'll post an answer\
    \ in a minute.\n<|/ c |>\n<| c |>\nI added a recursive solution as well. Hope\
    \ it helps.\n<|/ c |>\n<| a dscore=2 |>\nHere's a recursive solution:\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=2 |>\nHere's a recursive solution:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a |>\nHere's a\
    \ recursive solution:\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz dscore=2 |>\n<| a dscore=2 |>\nHere's a recursive\
    \ solution:\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\nHere's a recursive solution:\n\
    <code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n ", "\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0)\
    \ return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for your help. I really\
    \ appreciate it. I tried your code, but I got this error: Error in fizz_buzz(50)\
    \ : could not find function \"fizz_buzz\". I tried restarting R and reinstalling\
    \ R, but I still get the same error. Do you know why this might be?\n<|/ c |>\n\
    <| c |>\nI added the code I used to test it above. Does it work for you?\n<|/\
    \ c |>\n<| c |>\nYes, it works perfectly! Thank you so much for your help!\n<|/\
    \ c |>\n<| a |>\nHere is a solution using dplyr and purrr:\n<code>\nlibrary(dplyr)\n\
    library(purrr)\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n\ndf <- data.frame(\n\
    \  n = c(1:100)\n)\n\ndf %>% \n  mutate(\n    fizz_buzz = map(n, fizz_buzz)\n\
    \  )\n</code>\n<|/ a tags=r,fizzbuzz,for-loop dscore=1 |>\n<| c |>\nThanks so\
    \ much for your help. I really appreciate it. I tried your code, but I got this\
    \ error: Error in fizz_buzz(50) : could not find function \"fizz_buzz\". I tried\
    \ restarting R and reinstalling R, but I still get the same error. Do you know\
    \ why this might be?\n<|/ c |>\n<| c |>\nI added the code I used to test it above.\
    \ Does it work for you?\n<|/ c |>\n<| c |>\nYes, it works perfectly! Thank you\
    \ so much for your help!\n<|/ c |>\n<| a |>", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13\
    \ == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n\
    \  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n\
    \ %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n   \
    \ return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 &\
    \ n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0)\
    \ {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n\
    \ %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\n\
    fizz_buzz(123)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n\
    </cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\n\
    fizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n\
    </cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\n\
    fizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n\
    </cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\n\
    fizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n\
    </cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(", "\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\n\
    Thanks for your answer. I tried your function but I get this error `Error in fizz_buzz(50)\
    \ : could not find function \"fizz_buzz\"`\n<|/ c |>\n<| c |>\nYou have to define\
    \ it before you use it.  I added a line to my answer.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I'm still getting an error though. `Error in fizz_buzz(50)\
    \ : could not find function \"fizz_buzz\"`\n<|/ c |>\n<| c |>\nI added a line\
    \ to my answer.  You have to define it before you use it.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I tried your function but I get this error `Error in fizz_buzz(50)\
    \ : could not find function \"fizz_buzz\"`\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% 11) + as.integer(n %% 13))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(as.integer(n\
    \ %% ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n", "\n  n <- n\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 &\
    \ n %% 13 == 0))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13 and which are also divisible by 3 or 5.\n\n\n</text>\n\
    <cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 ==\
    \ 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nThis doesn't seem to work. `fizz_buzz(50)` returns `0` instead\
    \ of `0` `0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15`\
    \ `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31`\
    \ `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47`\
    \ `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63`\
    \ `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79`\
    \ `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95`\
    \ `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106` `107` `108` `109`\
    \ `110` `111` `112` `113` `114` `115` `116` `117` `118` `119` `120` `121` `122`\
    \ `123` `124` `125` `126` `127` `128` `129` `130` `131` `132` `133` `134` `135`\
    \ `136` `137` `138` `139` ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nI appreciate your help but I am not allowed to use any loops. I\
    \ only have to use recursion.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a recursive solution. Hope it helps.\n<|/ c |>\n<| c |>\nThank you so much!\
    \ I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\nHere is a recursive solution:\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nI appreciate your help but I am not allowed to use any loops. I\
    \ only have to use recursion.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a recursive solution. Hope it helps.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n \
    \ }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your help but I am not allowed to use\
    \ any loops. I only have to use recursion.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n \
    \ }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your help but I am not allowed to use\
    \ any loops. I only have to use recursion.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  ", "\n  n <- as.integer(n)\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13 and which are also divisible\
    \ by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n\
    </cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\n\
    fizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n\
    </cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\n\
    fizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n\
    </cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\n\
    fizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n</cell>\n<cell>\nfizz_buzz(116)\n\
    </cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\nfizz_buzz(118)\n</cell>\n<cell>\n\
    fizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n</cell>\n<cell>\nfizz_buzz(121)\n\
    </cell>\n<cell", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13 and are multiples of 3.\
    \ For example, fizz_buzz(78) returns 2, because 78 is divisible by 11 and 13,\
    \ both of which are multiples of 3.\n\nHint: Use a for loop to iterate through\
    \ the numbers from 1 to n.\n\n\n</text>\n<cell>", "\n  return(length(grep(\"7\"\
    , as.character(n), value = TRUE)) - length(grep(\"11\", as.character(n), value\
    \ = TRUE)) - length(grep(\"13\", as.character(n), value = TRUE)))\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\", if(n%%13==0) \"Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"FizzBuzz\"\
    , if(n%%11==0) \"Buzz\" else \"\"))\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as an argument and returns a vector of the same length with each\
    \ element being the number of times each number appears in the input vector.\n\
    \n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers as input and returns a vector of\
    \ the same length with each element being the number of times the digit 7 appears\
    \ in integers less than or equal to that element.\n\n\n</text>\n<cell>", "\n \
    \ n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    n <- n+1\n  }\n  return(as.integer(n%%11==0\
    \ | n%%13==0))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function fizz_buzz above\
    \ is called a predicate in mathematics.\n\nA predicate is a function that returns\
    \ either True or False. Predicates are often used to define conditional statements.\n\
    \nA predicate is a function that returns either True or False. Predicates are\
    \ often used to define conditional statements.\n\nA predicate is a function that\
    \ returns either True or False. Predicates are often used to define conditional\
    \ statements.\n\nA predicate is a function that returns either True or False.\
    \ Predicates are often used to define conditional statements.\n\nA predicate is\
    \ a function that returns either True or False. Predicates are often used to define\
    \ conditional statements.\n\nA predicate is a function that returns either True\
    \ or False. Predicates are often used to define conditional statements.\n\nA predicate\
    \ is a function that returns either True or False. Predicates are often used to\
    \ define conditional statements.\n\nA predicate is a function that returns either\
    \ True or False. Predicates are often used to define conditional statements.\n\
    \nA predicate is a function that returns either True or False. Predicates are\
    \ often used to define conditional statements.\n\nA predicate is a function that\
    \ returns either True or False. Predicates are often used to define conditional\
    \ statements.\n\nA predicate is a function that returns either True or False.\
    \ Predicates are often used to define conditional statements.\n\nA predicate is\
    \ a function that returns either True or False. Predicates are often used to define\
    \ conditional statements.\n\nA predicate is a function that returns either True\
    \ or False. Predicates are often used to define conditional statements.\n\nA predicate\
    \ is a function that returns either True or False. Predicates are often used to\
    \ define conditional statements.\n\nA predicate is a function that returns either\
    \ True or False. Predicates are often used to define conditional statements.\n\
    \nA predicate is a function that returns either True or False. Predicates are\
    \ often used to define conditional statements.\n\nA predicate is a function that\
    \ returns either True or False. Predicates are often used to define conditional\
    \ statements.\n\nA predicate is a function that returns either True or False.\
    \ Predicates are often used to define conditional statements.\n\nA predicate is\
    \ a function that returns either True or False. Predicates are often used to define\
    \ conditional statements.\n\nA predicate is a function that returns either True ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0){\n    if(x%%13==0){\n \
    \     if(x%%17==0){\n        if(x%%19==0){\n          if(x%%23==0){\n        \
    \    if(x%%27==0){\n              if(x%%31==0){\n                if(x%%35==0){\n\
    \                  if(x%%39==0){\n                    return(\"FizzBuzz\")\n \
    \                 }\n                  else{\n                    return(\"Fizz\"\
    )\n                  }\n                }\n                else{\n           \
    \       return(\"Buzz\")\n                }\n              }\n              else{\n\
    \                return(\"Buzz\")\n              }\n            }\n          \
    \  else{\n              return(\"Fizz\")\n            }\n          }\n       \
    \   else{\n            return(\"Fizz\")\n          }\n        }\n        else{\n\
    \          return(\"Fizz\")\n        }\n      }\n      else{\n        return(\"\
    Fizz\")\n      }\n    }\n    else{\n      return(\"Fizz\")\n    }\n  }\n  else{\n\
    \    return(\"Fizz\")\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0){\n    if(x%%13==0){\n \
    \     if(x%%17==0){\n        if(x%%19==0){\n          if(x%%23==0){\n        \
    \    if(x%%27==0){\n              if(x%%31==0){\n                if(x%%35==0){\n\
    \                  if(x%%39==0){\n                    return(\"FizzBuzz\")\n \
    \                 }\n                  else{\n                    return(\"Fizz\"\
    )\n                  }\n                }\n                else{\n           \
    \       return(\"Buzz\")\n                }\n              }\n              else{\n\
    \                return(\"Buzz\")\n              }\n            }\n          \
    \  else{\n              return(\"Fizz\")\n            }\n          }\n       \
    \   else{\n            return(\"Fizz\")\n          }\n        }\n        else{\n\
    \          return(\"Fizz\")\n        }\n      }\n      else{\n        return(\"\
    Fizz\")\n      }\n"]
stop_tokens:
- "\n#"
- "\n```"

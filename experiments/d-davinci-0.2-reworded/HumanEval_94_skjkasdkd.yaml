name: HumanEval_94_skjkasdkd
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of integers.\n\
  \    You need to find the largest prime value and return the sum of its digits.\n\
  \n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L,\
  \ 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n    >>> skjkasdkd([1L,\
  \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L])\n   \
  \ 25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L,\
  \ 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L, 724L, 32L, 71L,\
  \ 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>> skjkasdkd([0L,\
  \ 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L, 2L, 1L, 7L])\n\
  \    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n"
tests: "unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
  \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
  \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L,\
  \ 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L,\
  \ 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) ==\
  \ 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L,\
  \ 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
  \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
  \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
  \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
completions: ["{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(isPrime(elem) && elem > max)\n        {\n          \
    \  max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max != 0L)\n \
    \   {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem >\
    \ max)\n        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > largestPrime && isPrime(i))\n        {\n            largestPrime\
    \ = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; largestPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n \
    \       sum += i.to!long - '0'.to!long;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(long l; lst)\n    {\n        if(isPrime(l))\n        {\n\
    \            if(l > largestPrime)\n            {\n                largestPrime\
    \ = l;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n       \
    \ {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            if(i > 1L)\n     \
    \       {\n                foreach(j; 2L..i)\n                {\n            \
    \        if(i % j == 0L)\n                    {\n                        break;\n\
    \                    }\n                    else if(j == i - 1L)\n           \
    \         {\n                        foreach(k; 0L..i.stringof.length)\n     \
    \                   {\n                            sum += i.stringof[k..k].to!long;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n\
    \        {\n            foreach(j; i.to!string)\n            {\n             \
    \   sum += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(long i; lst)\n    {\n        if(i > max)\n  \
    \      {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(long\
    \ i; max.toString())\n    {\n        sum += i.to!long - 48L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n  \
    \          max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max >\
    \ 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i)\
    \ && i > max) \n        {\n            max = i;\n        }\n    }\n    return\
    \ max.digits.sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n  \
    \      if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum\
    \ += i.to!long - '0'.to!long;\n    }\n    return sum;\n}", "{\n    long max =\
    \ 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n       \
    \ {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(isPrime(elem) && elem > max)\n        {\n          \
    \  max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max % 10;\n   \
    \     max /= 10;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long largestPrime = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            if(isPrime(i))\n \
    \           {\n                foreach(j; i.to!string)\n                {\n  \
    \                  sum += j.to!long;\n                }\n            }\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n      \
    \  {\n            sum = 0L;\n            foreach(j; i.to!string)\n           \
    \ {\n                sum += j.to!long;\n            }\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n    \
    \    if(isPrime(i))\n        {\n            if(i > largestPrime)\n           \
    \ {\n                largestPrime = i;\n            }\n        }\n    }\n    return\
    \ largestPrime.digits.sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max != 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime;\n}", "{\n    long maxPrime = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(elem > maxPrime && isPrime(elem))\n        {\n     \
    \       maxPrime = elem;\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(long i; lst)\n \
    \   {\n        if(isPrime(i))\n        {\n            if(i > max)\n          \
    \  {\n                max = i;\n            }\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largest = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > largest)\n        {\n            largest\
    \ = i;\n        }\n    }\n    return sumDigits(largest);\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > maxPrime && isPrime(i))\n        {\n           \
    \ maxPrime = i;\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n\
    \    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n\
    }", "{\n    long max = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ != 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(e; lst)\n   \
    \ {\n        if(e > max)\n        {\n            max = e;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max % 10;\n   \
    \     max /= 10;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > largestPrime)\n            {\n                largestPrime = i;\n        \
    \    }\n        }\n    }\n    return largestPrime;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(e; lst)\n   \
    \ {\n        if(isPrime(e))\n        {\n            if(e > max)\n            {\n\
    \                max = e;\n            }\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n   \
    \     largestPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n  \
    \  {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(num;\
    \ lst)\n    {\n        if(isPrime(num))\n        {\n            if(num > largestPrime)\n\
    \            {\n                largestPrime = num;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n\
    \        maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long maxPrime =\
    \ 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n       \
    \     maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n   \
    \ while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long maxPrime =\
    \ 0L;\n    foreach(i; lst)\n    {\n        if(i > maxPrime && isPrime(i))\n  \
    \      {\n            maxPrime = i;\n        }\n    }\n    long sum = 0L;\n  \
    \  foreach(i; maxPrime.to!string)\n    {\n        sum += i.to!long;\n    }\n \
    \   return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n    \
    \    if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n \
    \   }\n    return sumDigits(max);\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}", "{\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n\
    \        maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime.digits.sum;\n}", "{\n    long max = 0L;\n    foreach(e;\
    \ lst)\n    {\n        if(e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(e; max.to!string)\n    {\n        sum\
    \ += e.to!long;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n    \
    \    {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n   \
    \     largestPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max_prime = 0L;\n    foreach(elem; lst)\n    {\n        if(elem\
    \ > max_prime && isPrime(elem))\n        {\n            max_prime = elem;\n  \
    \      }\n    }\n    long sum = 0L;\n    while(max_prime > 0L)\n    {\n      \
    \  sum += max_prime % 10L;\n        max_prime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long largest = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > largest)\n        {\n            largest = i;\n        }\n    }\n   \
    \ long sum = 0L;\n    while(largest > 0L)\n    {\n        sum += largest % 10L;\n\
    \        largest /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n       \
    \ {\n            max = i;\n        }\n    }\n    foreach(i; lst)\n    {\n    \
    \    if(i == max)\n        {\n            foreach(j; i.to!string)\n          \
    \  {\n                sum += j.to!long;\n            }\n        }\n    }\n   \
    \ return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n      \
    \  if(i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n        {\n       \
    \     if(isPrime(i))\n            {\n                foreach(j; i.to!string)\n\
    \                {\n                    sum += j.to!long;\n                }\n\
    \            }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long prime = 0L;\n    foreach(i; lst)\n    {\n        if(i > prime && isPrime(i))\n\
    \        {\n            prime = i;\n        }\n    }\n    long sum = 0L;\n   \
    \ foreach(i; prime.to!string)\n    {\n        sum += i.to!long;\n    }\n    return\
    \ sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n    \
    \    if(isPrime(i))\n        {\n            if(i > largestPrime)\n           \
    \ {\n                largestPrime = i;\n            }\n        }\n    }\n    return\
    \ largestPrime.digits.sum;\n}", "{\n    long largest = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > largest)\n        {\n            largest\
    \ = i;\n        }\n    }\n    return sumDigits(largest);\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n      \
    \  {\n            sum = sum + i;\n        }\n    }\n    return sum;\n}", "{\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(c; to!string(maxPrime))\n    {\n        sum += c.to!long\
    \ - '0'.to!long;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            maxPrime\
    \ = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(l; lst)\n    {\n\
    \        if(l > max)\n        {\n            max = l;\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(l; lst)\n    {\n        if(l == max)\n        {\n   \
    \         foreach(c; to!string(l))\n            {\n                sum += to!long(c);\n\
    \            }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(long i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n\
    \            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i) && i > max) \n   \
    \     {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n}",
  "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n      \
    \  {\n            foreach(j; i.to!string)\n            {\n                sum\
    \ += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n  \
    \  long max = 0L;\n    foreach(el; lst)\n    {\n        if(el > max)\n       \
    \ {\n            max = el;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long largest = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > largest)\n        {\n            largest = i;\n        }\n    }\n   \
    \ long sum = 0L;\n    while(largest > 0L)\n    {\n        sum += largest % 10L;\n\
    \        largest /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(n; lst)\n\
    \    {\n        if(n > max)\n        {\n            max = n;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(n; max.to!string)\n    {\n        sum += n.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long[] primes = new long[lst.length];\n \
    \   long[] nonPrimes = new long[lst.length];\n    long[] primeDigits = new long[lst.length];\n\
    \    long[] nonPrimeDigits = new long[lst.length];\n    long[] primeDigitsSum\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSum = new long[lst.length];\n\
    \    long[] primeDigitsSumSorted = new long[lst.length];\n    long[] nonPrimeDigitsSumSorted\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversed = new long[lst.length];\n\
    \    long[] nonPrimeDigitsSumSortedReversed = new long[lst.length];\n    long[]\
    \ primeDigitsSumSortedReversedUnique = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUnique\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUnique\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversedUnique\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueS",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            sum = sum + i;\n \
    \       }\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n  \
    \  {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return\
    \ sum;\n}", "{\n    long largest = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > largest)\n        {\n            largest = i;\n        }\n    }\n   \
    \ long sum = 0L;\n    while(largest > 0L)\n    {\n        sum += largest % 10L;\n\
    \        largest /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; largestPrime.to!string)\n    {\n        sum += i.to!long;\n  \
    \  }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(i > max)\n        {\n            max = i;\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max % 10;\n   \
    \     max /= 10;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            maxPrime\
    \ = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime.digits.sum;\n}", "{\n    long max = 0L;\n    foreach(e;\
    \ lst)\n    {\n        if(isPrime(e))\n        {\n            if(e > max)\n  \
    \          {\n                max = e;\n            }\n        }\n    }\n    long\
    \ sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long largestPrime = 0L;\n\
    \    foreach(num; lst)\n    {\n        if(num > largestPrime && isPrime(num))\n\
    \        {\n            largestPrime = num;\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i\
    \ > largestPrime && isPrime(i))\n        {\n            largestPrime = i;\n  \
    \      }\n    }\n    long sum = 0L;\n    foreach(i; largestPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n\
    \        {\n            foreach(j; i.to!string)\n            {\n             \
    \   sum += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n\
    \        maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n     \
    \   if(i == max)\n        {\n            foreach(j; i.to!string)\n           \
    \ {\n                sum += j.to!long;\n            }\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long largestPrime = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime.digits.sum;\n}", "{\n    long largestPrime = 0L;\n\
    \    foreach(num; lst)\n    {\n        if(isPrime(num))\n        {\n         \
    \   if(num > largestPrime)\n            {\n                largestPrime = num;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n       \
    \ {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    foreach(i; largestPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(long num; lst)\n    {\n        if(num > largestPrime\
    \ && isPrime(num))\n        {\n            largestPrime = num;\n        }\n  \
    \  }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max != 0L)\n    {\n    \
    \    sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n\
    \    long largestPrime = 0L;\n    foreach(item; lst)\n    {\n        if(item >\
    \ largestPrime && isPrime(item))\n        {\n            largestPrime = item;\n\
    \        }\n    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n \
    \       sum += largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\
    \ \n    {\n        if(i > max) \n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L) \n    {\n        sum += max %\
    \ 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long - '0'.to!long;\n    }\n    return sum;\n}", "{\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n\
    \        maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n \
    \       max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max\
    \ = i;\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n     \
    \   if(i == max)\n        {\n            foreach(j; i.to!string)\n           \
    \ {\n                sum += j.to!long;\n            }\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long[] primes = primesUpTo(max);\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i in primes)\n\
    \        {\n            if(i > maxPrime)\n            {\n                maxPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime =\
    \ 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n       \
    \     if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n    \
    \    if(isPrime(i))\n        {\n            if(i > largestPrime)\n           \
    \ {\n                largestPrime = i;\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    long[] primes = primesUpTo(max);\n    foreach(i; primes)\n    {\n       \
    \ if(i > max)\n        {\n            break;\n        }\n        if(i == max)\n\
    \        {\n            foreach(j; i.to!string)\n            {\n             \
    \   sum += j.to!long - 48L;\n            }\n        }\n    }\n    return sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            if(isPrime(i))\n \
    \           {\n                while(i > 0)\n                {\n             \
    \       sum += i % 10;\n                    i /= 10;\n                }\n    \
    \        }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(i > max)\n        {\n            max = i;\n\
    \        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n\
    \        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > largestPrime && isPrime(i))\n        {\n            largestPrime\
    \ = i;\n        }\n    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n \
    \   {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n\
    \    return sum;\n}", "{\n    long largest = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i) && i > largest)\n        {\n            largest = i;\n\
    \        }\n    }\n    long sum = 0L;\n    while(largest > 0L)\n    {\n      \
    \  sum += largest % 10L;\n        largest /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long[] primes = new long[max];\n\
    \    foreach(i; lst)\n    {\n        if(primes[i] == 0L)\n        {\n        \
    \    primes[i] = 1L;\n            for(long j = i * 2; j < max; j += i)\n     \
    \       {\n                primes[j] = -1L;\n            }\n        }\n    }\n\
    \    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(primes[i] ==\
    \ 1L)\n        {\n            if(i > maxPrime)\n            {\n              \
    \  maxPrime = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(i > max)\n        {\n            max = i;\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max % 10;\n   \
    \     max /= 10;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > largestPrime)\n            {\n                largestPrime = i;\n        \
    \    }\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n    long\
    \ max = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem >\
    \ max)\n        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime;\n}", "{\n    long max = 0L;\n    foreach(item;\
    \ lst)\n    {\n        if(isPrime(item) && item > max)\n        {\n          \
    \  max = item;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(long i; lst)\n    {\n       \
    \ if(isPrime(i))\n        {\n            if(i > largestPrime)\n            {\n\
    \                largestPrime = i;\n            }\n        }\n    }\n    return\
    \ largestPrime;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n \
    \       if(isPrime(elem) && elem > max)\n        {\n            max = elem;\n\
    \        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > maxPrime)\n\
    \        {\n            maxPrime = i;\n        }\n    }\n    return maxPrime.digits.sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            if(isPrime(i))\n \
    \           {\n                foreach(j; i.to!string)\n                {\n  \
    \                  sum += j.to!long;\n                }\n            }\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n   \
    \     {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return largestPrime;\n}", "{\n  \
    \  long max = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n        {\n\
    \            max = e;\n        }\n    }\n    long sum = 0L;\n    foreach(e; max.to!string)\n\
    \    {\n        sum += e.to!long;\n    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

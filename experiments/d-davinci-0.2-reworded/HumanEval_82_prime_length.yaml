name: HumanEval_82_prime_length
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes a\
  \ string and returns true if the string\n    length is a prime number or false otherwise\n\
  \    Examples\n    >>> prime_length(\"Hello\")\n    true\n    >>> prime_length(\"\
  abcdcba\")\n    true\n    >>> prime_length(\"kittens\")\n    true\n    >>> prime_length(\"\
  orange\")\n    false\n    \n*/\nbool prime_length(string string) \n"
tests: "unittest\n{\n    alias candidate = prime_length;\n\n    assert(candidate(\"\
  Hello\") == true);\n    assert(candidate(\"abcdcba\") == true);\n    assert(candidate(\"\
  kittens\") == true);\n    assert(candidate(\"orange\") == false);\n    assert(candidate(\"\
  wow\") == true);\n    assert(candidate(\"world\") == true);\n    assert(candidate(\"\
  MadaM\") == true);\n    assert(candidate(\"Wow\") == true);\n    assert(candidate(\"\
  \") == false);\n    assert(candidate(\"HI\") == true);\n    assert(candidate(\"\
  go\") == true);\n    assert(candidate(\"gogo\") == false);\n    assert(candidate(\"\
  aaaaaaaaaaaaaaa\") == false);\n    assert(candidate(\"Madam\") == true);\n    assert(candidate(\"\
  M\") == false);\n    assert(candidate(\"0\") == false);\n}\nvoid main(){}"
completions: ["{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    if (length == 1 || length == 2)\n\
    \        return true;\n    for (int i = 2; i < length; i++)\n    {\n        if\
    \ (length % i == 0)\n            return false;\n    }\n    return true;\n}", "{\n\
    \    int length = string.length;\n    if (length == 1)\n        return false;\n\
    \    if (length == 2)\n        return true;\n    for (int i = 2; i < length; i++)\n\
    \    {\n        if (length % i == 0)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    if (length == 1 || length == 2)\n\
    \        return true;\n    else if (length % 2 == 0)\n        return false;\n\
    \    else\n    {\n        for (int i = 3; i < length; i += 2)\n        {\n   \
    \         if (length % i == 0)\n                return false;\n        }\n   \
    \     return true;\n    }\n}", "{\n    return isPrime(string.length);\n}", "{\n\
    \    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    if (length == 1)\n        return false;\n    else if (length == 2)\n    \
    \    return true;\n    else if (length % 2 == 0)\n        return false;\n    else\n\
    \    {\n        int i = 3;\n        while (i < length)\n        {\n          \
    \  if (length % i == 0)\n                return false;\n            i += 2;\n\
    \        }\n        return true;\n    }\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    if (length == 1 || length == 2)\n        return true;\n    else if (length\
    \ % 2 == 0)\n        return false;\n    else\n    {\n        for (int i = 3; i\
    \ < length; i += 2)\n        {\n            if (length % i == 0)\n           \
    \     return false;\n        }\n        return true;\n    }\n}", "{\n    return\
    \ isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n}", "{\n\
    \    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    bool isPrime = true;\n    for (int i = 2; i < length; i++)\n    {\n     \
    \   if (length % i == 0)\n        {\n            isPrime = false;\n          \
    \  break;\n        }\n    }\n    return isPrime;\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int len = string.length;\n    if (len == 2) return true;\n    if (len\
    \ % 2 == 0) return false;\n    for (int i = 3; i < len; i += 2)\n    {\n     \
    \   if (len % i == 0) return false;\n    }\n    return true;\n}", "{\n    return\
    \ isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n}", "{\n\
    \    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    if (length < 2)\n        return false;\n    if (length == 2)\n        return\
    \ true;\n    if (length % 2 == 0)\n        return false;\n    for (int i = 3;\
    \ i <= sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n          \
    \  return false;\n    }\n    return true;\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    if (length == 2 || length == 3)\n        return true;\n    if (length % 2\
    \ == 0 || length % 3 == 0)\n        return false;\n    for (int i = 5; i * i <=\
    \ length; i += 6)\n        if (length % i == 0 || length % (i + 2) == 0)\n   \
    \         return false;\n    return true;\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    bool isPrime = true;\n    for (int\
    \ i = 2; i < length; i++)\n    {\n        if (length % i == 0)\n        {\n  \
    \          isPrime = false;\n            break;\n        }\n    }\n    return\
    \ isPrime;\n}", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    if (length == 1 || length == 2)\n\
    \        return true;\n    else\n    {\n        for (int i = 2; i < length; i++)\n\
    \        {\n            if (length % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    if (length == 1)\n        return\
    \ false;\n    for (int i = 2; i < length; i++)\n    {\n        if (length % i\
    \ == 0)\n            return false;\n    }\n    return true;\n}", "{\n    return\
    \ isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n}", "{\n\
    \    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    int length = string.length;\n    if (length == 1)\n        return\
    \ false;\n    if (length == 2)\n        return true;\n    for (int i = 2; i <\
    \ length; i++)\n    {\n        if (length % i == 0)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int length = string.length;\n    if (length\
    \ == 2)\n        return true;\n    for (int i = 2; i < length; i++)\n    {\n \
    \       if (length % i == 0)\n            return false;\n    }\n    return true;\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    int length = string.length;\n\
    \    if (length == 2) return true;\n    if (length % 2 == 0) return false;\n \
    \   for (int i = 3; i < length; i += 2)\n    {\n        if (length % i == 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }", "{\n    return isPrime(string.length);\n}", "{\n    return isPrime(string.length);\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

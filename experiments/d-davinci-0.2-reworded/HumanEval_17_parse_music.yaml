name: HumanEval_17_parse_music
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Input to this function is a\
  \ string representing musical notes in a special ASCII format.\n    Your task is\
  \ to parse this string and return array of integers corresponding to how many beats\
  \ does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts\
  \ four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts\
  \ one beat\n\n    >>> parse_music(\"o o| .| o| o| .| .| .| .| o o\")\n    [4L, 2L,\
  \ 1L, 2L, 2L, 1L, 1L, 1L, 1L, 4L, 4L]\n    \n*/\nlong[] parse_music(string music_string)\
  \ \n"
tests: "unittest\n{\n    alias candidate = parse_music;\n\n    assert(candidate(\"\
  \") == []);\n    assert(candidate(\"o o o o\") == [4L, 4L, 4L, 4L]);\n    assert(candidate(\"\
  .| .| .| .|\") == [1L, 1L, 1L, 1L]);\n    assert(candidate(\"o| o| .| .| o o o o\"\
  ) == [2L, 2L, 1L, 1L, 4L, 4L, 4L, 4L]);\n    assert(candidate(\"o| .| o| .| o o|\
  \ o o|\") == [2L, 1L, 2L, 1L, 4L, 2L, 4L, 2L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result;\n    foreach(c; music_string)\n    {\n      \
    \  switch(c)\n        {\n            case 'o':\n                result ~= 4;\n\
    \                break;\n            case '|':\n                result[$-1] /=\
    \ 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ res;\n    foreach(e; music_string.split(\" \"))\n    {\n        if(e == \"o\"\
    )\n            res ~= 4;\n        else if(e == \"o|\")\n            res ~= 2;\n\
    \        else if(e == \".|\")\n            res ~= 1;\n    }\n    return res;\n\
    }", "{\n    long[] beats = new long[];\n    foreach(c; music_string)\n    {\n\
    \        switch(c)\n        {\n            case 'o':\n                beats ~=\
    \ 4;\n                break;\n            case '|':\n                beats[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                beats[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return beats;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                throw new Exception(\"Invalid character\");\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                throw new Exception(\"Invalid character\
    \ in music string\");\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result ~= 2;\n\
    \        else if(c == '.')\n            result ~= 1;\n    }\n    return result;\n\
    }", "{\n    auto notes = music_string.split(\" \");\n    long[] result;\n    foreach(note;\
    \ notes)\n    {\n        if(note == \"o\")\n            result ~= 4;\n       \
    \ else if(note == \"o|\")\n            result ~= 2;\n        else if(note == \"\
    .|\")\n            result ~= 1;\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(char c; music_string)\n    {\n        if(c == 'o')\n  \
    \          result ~= 4;\n        else if(c == '|')\n            result ~= 2;\n\
    \        else if(c == '.')\n            result ~= 1;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] res;\n    foreach(immutable c; music_string)\n \
    \   {\n        if(c == 'o')\n            res ~= 4;\n        else if(c == '|')\n\
    \            res ~= 2;\n        else if(c == '.')\n            res ~= 1;\n   \
    \ }\n    return res;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    return music_string.split(\" \").map!(x => x.length).array;\n}", "{\n   \
    \ long[] result;\n    foreach(immutable c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result\
    \ ~= 2;\n        else if(c == '.')\n            result ~= 1;\n    }\n    return\
    \ result;\n}", "{\n    auto result = appender!(long[])();\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result.put(4);\n\
    \                break;\n            case '|':\n                result.put(2);\n\
    \                break;\n            case '.':\n                result.put(1);\n\
    \                break;\n        }\n    }\n    return result.data;\n}", "{\n \
    \   long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n \
    \       {\n            case 'o':\n                result ~= 4;\n             \
    \   break;\n            case '|':\n                result[$-1] /= 2;\n       \
    \         break;\n            case '.':\n                result[$-1] /= 4;\n \
    \               break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string) \n    {\n        switch(c) \n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                throw new Exception(\"Invalid character\");\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n \
    \       switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result ~= 2;\n\
    \        else if(c == '.')\n            result ~= 1;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                throw new Exception(\"Invalid character\");\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '|')\n        {\n            result[$-1] /= 2;\n       \
    \ }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] = 1;\n \
    \               break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result ~= 2;\n\
    \        else if(c == '.')\n            result ~= 1;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n    {\n\
    \        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n    {\n\
    \        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result\
    \ ~= 2;\n        else if(c == '.')\n            result ~= 1;\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\
    \ \n    {\n        switch(c) \n        {\n            case 'o':\n            \
    \    result ~= 4;\n                break;\n            case '|':\n           \
    \     result[$-1] /= 2;\n                break;\n            case '.':\n     \
    \           result[$-1] /= 4;\n                break;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        if(c == 'o')\n            result ~= 4;\n        else if(c == '|')\n\
    \            result[$-1] /= 2;\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n       \
    \     result ~= 4;\n        else if(c == '|')\n            result[$-1] /= 2;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] res;\n    foreach(c; music_string)\n    {\n        if(c ==\
    \ 'o')\n            res ~= 4;\n        else if(c == '|')\n            res ~= 2;\n\
    \        else if(c == '.')\n            res ~= 1;\n    }\n    return res;\n}",
  "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n    {\n      \
    \  if(music_string[i] == 'o')\n        {\n            if(music_string[i+1] ==\
    \ ' ')\n            {\n                result ~= 4;\n            }\n         \
    \   else if(music_string[i+1] == '|')\n            {\n                result ~=\
    \ 2;\n            }\n        }\n        else if(music_string[i] == '.')\n    \
    \    {\n            if(music_string[i+1] == '|')\n            {\n            \
    \    result ~= 1;\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    int i;\n    int j;\n    int k;\n    int l;\n \
    \   int m;\n    int n;\n    int o;\n    int p;\n    int q;\n    int r;\n    int\
    \ s;\n    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n\
    \    int z;\n    int aa;\n    int ab;\n    int ac;\n    int ad;\n    int ae;\n\
    \    int af;\n    int ag;\n    int ah;\n    int ai;\n    int aj;\n    int ak;\n\
    \    int al;\n    int am;\n    int an;\n    int ao;\n    int ap;\n    int aq;\n\
    \    int ar;\n    int as;\n    int at;\n    int au;\n    int av;\n    int aw;\n\
    \    int ax;\n    int ay;\n    int az;\n    int ba;\n    int bb;\n    int bc;\n\
    \    int bd;\n    int be;\n    int bf;\n    int bg;\n    int bh;\n    int bi;\n\
    \    int bj;\n    int bk;\n    int bl;\n    int bm;\n    int bn;\n    int bo;\n\
    \    int bp;\n    int bq;\n    int br;\n    int bs;\n    int bt;\n    int bu;\n\
    \    int bv;\n    int bw;\n    int bx;\n    int by;\n    int bz;\n    int ca;\n\
    \    int cb;\n    int cc;\n    int cd;\n    int ce;\n    int cf;\n    int cg;\n\
    \    int ch;\n    int ci;\n    int cj;\n    int ck;\n    int cl;\n    int cm;\n\
    \    int cn;\n    int co;\n    int cp;\n    int cq;\n    int cr;\n    int cs;\n\
    \    int ct;\n    int cu;\n    int cv;\n    int cw;\n    int cx;\n", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    auto result = appender!(long[])();\n\
    \    foreach(c; music_string)\n    {\n        switch(c)\n        {\n         \
    \   case 'o':\n                result.put(4);\n                break;\n      \
    \      case '|':\n                result.put(2);\n                break;\n   \
    \         case '.':\n                result.put(1);\n                break;\n\
    \        }\n    }\n    return result.data;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '|')\n            result ~= 2;\n        else if(c == '.')\n\
    \            result ~= 1;\n    }\n    return result;\n}", "{\n    long[] result;\n\
    \    immutable(char)[] notes = music_string.split();\n    foreach(note; notes)\n\
    \    {\n        switch(note)\n        {\n            case 'o':\n             \
    \   result ~= 4;\n                break;\n            case 'o|':\n           \
    \     result ~= 2;\n                break;\n            case '.|':\n         \
    \       result ~= 1;\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        if(c\
    \ == 'o')\n        {\n            result ~= 4;\n        }\n        else if(c ==\
    \ '|')\n        {\n            result[$-1] /= 2;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    int i = 0;\n    foreach(char c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '|')\n        {\n            result[$-1] /= 2;\n       \
    \ }\n        else if(c == '.')\n        {\n            result[$-1] /= 4;\n   \
    \     }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string) \n    {\n        if(c == 'o') \n        {\n            result\
    \ ~= 4;\n        }\n        else if(c == '|') \n        {\n            result[$-1]\
    \ /= 2;\n        }\n    }\n    return result;\n}", "{\n    long[] result;\n  \
    \  foreach(immutable c; music_string)\n    {\n        switch(c)\n        {\n \
    \           case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    int i = 0;\n    foreach(c; music_string)\n    {\n   \
    \     if(c == 'o')\n        {\n            if(i == 0)\n            {\n       \
    \         result ~= 4;\n            }\n            else\n            {\n     \
    \           if(result[$-1] == 4)\n                {\n                    result[$-1]\
    \ = 8;\n                }\n                else\n                {\n         \
    \           result ~= 4;\n                }\n            }\n        }\n      \
    \  else if(c == '|')\n        {\n            if(result[$-1] == 4)\n          \
    \  {\n                result[$-1] = 2;\n            }\n            else\n    \
    \        {\n                result[$-1] = 1;\n            }\n        }\n     \
    \   i++;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                result[$-1] /= 4;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n        {\n            result ~=\
    \ 4;\n        }\n        else if(c == '|')\n        {\n            result[$-1]\
    \ /= 2;\n        }\n    }\n    return result;\n}", "{\n    long[] result;\n  \
    \  foreach(immutable c; music_string) \n    {\n        switch(c) \n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    int i = 0;\n    foreach(char c; music_string)\n    {\n        if(c\
    \ == 'o')\n        {\n            if(i == 0)\n            {\n                result\
    \ = new long[1];\n                result[0] = 4;\n            }\n            else\n\
    \            {\n                result ~= 4;\n            }\n            i++;\n\
    \        }\n        else if(c == '|')\n        {\n            if(i == 0)\n   \
    \         {\n                result = new long[1];\n                result[0]\
    \ = 2;\n            }\n            else\n            {\n                result\
    \ ~= 2;\n            }\n            i++;\n        }\n        else if(c == '.')\n\
    \        {\n            if(i == 0)\n            {\n                result = new\
    \ long[1];\n                result[0] = 1;\n            }\n            else\n\
    \            {\n                result ~= 1;\n            }\n            i++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    int i =\
    \ 0;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n        {\n \
    \           if(i == 0)\n            {\n                result = new long[1];\n\
    \                result[0] = 4;\n            }\n            else\n           \
    \ {\n                result ~= 4;\n            }\n            i++;\n        }\n\
    \        else if(c == '|')\n        {\n            if(result[i-1] == 4)\n    \
    \        {\n                result[i-1] = 2;\n            }\n            else\n\
    \            {\n                result[i-1] = 1;\n            }\n        }\n \
    \   }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] beats = [];\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                beats ~= 4;\n             \
    \   break;\n            case '|':\n                beats[$-1] /= 2;\n        \
    \        break;\n            case '.':\n                beats[$-1] /= 4;\n   \
    \             break;\n        }\n    }\n    return beats;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}\n/*\n    >>> parse_music(\"o o| .| o|\
    \ o| .| .| .| .| o o\")\n    [4L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 4L, 4L]\n*/",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = appender!(long[])();\n    foreach(c; music_string)\n    {\n       \
    \ switch(c)\n        {\n            case 'o':\n                result.put(4);\n\
    \                break;\n            case '|':\n                result.put(2);\n\
    \                break;\n            case '.':\n                result.put(1);\n\
    \                break;\n        }\n    }\n    return result.data;\n}", "{\n \
    \   long[] result;\n    int i = 0;\n    foreach(char c; music_string)\n    {\n\
    \        if(c == 'o')\n        {\n            result ~= 4;\n        }\n      \
    \  else if(c == '.')\n        {\n            result ~= 1;\n        }\n       \
    \ else if(c == '|')\n        {\n            result[$-1] /= 2;\n        }\n   \
    \ }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    int i = 0;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            if(i == 0)\n            {\n\
    \                result ~= 4;\n            }\n            else\n            {\n\
    \                if(result[$-1] == 4)\n                {\n                   \
    \ result[$-1] = 8;\n                }\n                else\n                {\n\
    \                    result ~= 4;\n                }\n            }\n        }\n\
    \        else if(c == '|')\n        {\n            if(i == 0)\n            {\n\
    \                result ~= 2;\n            }\n            else\n            {\n\
    \                if(result[$-1] == 2)\n                {\n                   \
    \ result[$-1] = 4;\n                }\n                else\n                {\n\
    \                    result ~= 2;\n                }\n            }\n        }\n\
    \        else if(c == '.')\n        {\n            if(i == 0)\n            {\n\
    \                result ~= 1;\n            }\n            else\n            {\n\
    \                if(result[$-1] == 1)\n                {\n                   \
    \ result[$-1] = 2;\n                }\n                else\n                {\n\
    \                    result ~= 1;\n                }\n            }\n        }\n\
    \        i++;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result ~= 2;\n                break;\n            case '.':\n\
    \                result ~= 1;\n                break;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n\
    \    {\n        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ beats;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n        {\n\
    \            beats ~= 4;\n        }\n        else if(c == '|')\n        {\n  \
    \          beats[$-1] /= 2;\n        }\n    }\n    return beats;\n}", "{\n   \
    \ long[] result;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n\
    \        {\n            result ~= 4;\n        }\n        else if(c == '|')\n \
    \       {\n            result[$-1] /= 2;\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ beats;\n    foreach(i; 0 .. music_string.length)\n    {\n        if(music_string[i]\
    \ == 'o')\n        {\n            if(music_string[i+1] == ' ')\n            {\n\
    \                beats ~= 4;\n            }\n            else if(music_string[i+1]\
    \ == '|')\n            {\n                beats ~= 2;\n            }\n       \
    \ }\n        else if(music_string[i] == '.')\n        {\n            if(music_string[i+1]\
    \ == '|')\n            {\n                beats ~= 1;\n            }\n       \
    \ }\n    }\n    return beats;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n            result ~= 4;\n        else if(c == '|')\n\
    \            result[$-1] /= 2;\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(i; 0 .. music_string.length)\n    {\n        if(music_string[i]\
    \ == 'o')\n        {\n            if(music_string[i+1] == ' ')\n            {\n\
    \                result ~= 4;\n            }\n            else if(music_string[i+1]\
    \ == '|')\n            {\n                result ~= 2;\n            }\n      \
    \  }\n        else if(music_string[i] == '.')\n        {\n            if(music_string[i+1]\
    \ == '|')\n            {\n                result ~= 1;\n            }\n      \
    \  }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(i;\
    \ 0 .. music_string.length)\n    {\n        if(music_string[i] == 'o')\n     \
    \   {\n            if(music_string[i+1] == ' ')\n            {\n             \
    \   result ~= 4;\n            }\n            else if(music_string[i+1] == '|')\n\
    \            {\n                result ~= 2;\n            }\n        }\n     \
    \   else if(music_string[i] == '.')\n        {\n            if(music_string[i+1]\
    \ == '|')\n            {\n                result ~= 1;\n            }\n      \
    \  }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                result[$-1] /= 4;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case 'o|':\n                result\
    \ ~= 2;\n                break;\n            case '.|':\n                result\
    \ ~= 1;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n     \
    \   else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ beats;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n \
    \       {\n            case 'o':\n                beats ~= 4;\n              \
    \  break;\n            case '|':\n                beats ~= 2;\n              \
    \  break;\n            case '.':\n                beats ~= 1;\n              \
    \  break;\n        }\n    }\n    return beats;\n}", "{\n    long[] result;\n \
    \   foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n        \
    \    result ~= 4;\n        else if(c == '|')\n            result[$-1] /= 2;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n            result ~= 4;\n        else if(c == '|')\n\
    \            result ~= 2;\n        else if(c == '.')\n            result ~= 1;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] = 1;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    int i = 0;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n        {\n            if(i == 0)\n\
    \            {\n                result ~= 4;\n            }\n            else\n\
    \            {\n                if(result[$-1] == 4)\n                {\n    \
    \                result[$-1] = 8;\n                }\n                else\n \
    \               {\n                    result ~= 4;\n                }\n     \
    \       }\n        }\n        else if(c == '|')\n        {\n            if(result[$-1]\
    \ == 4)\n            {\n                result[$-1] = 2;\n            }\n    \
    \        else\n            {\n                result[$-1] = 1;\n            }\n\
    \        }\n        i++;\n    }\n    return result;\n}", "{\n    long[] result;\n\
    \    foreach(immutable c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '.')\n            result ~= 1;\n        else if(c == '|')\n\
    \            result[$-1] /= 2;\n    }\n    return result;\n}", "{\n    immutable\
    \ string[] notes = music_string.split(\" \");\n    long[] result = new long[notes.length];\n\
    \    foreach(i, note; notes)\n    {\n        if(note == \"o\")\n            result[i]\
    \ = 4;\n        else if(note == \"o|\")\n            result[i] = 2;\n        else\
    \ if(note == \".|\")\n            result[i] = 1;\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      if(c == 'o')\n            result ~= 4;\n        else if(c == '|')\n   \
    \         result ~= 2;\n        else if(c == '.')\n            result ~= 1;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n\
    \    {\n        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string) \n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(i;\
    \ 0 .. music_string.length)\n    {\n        if(music_string[i] == 'o')\n     \
    \   {\n            if(music_string[i+1] == ' ')\n            {\n             \
    \   result ~= 4;\n            }\n            else if(music_string[i+1] == '|')\n\
    \            {\n                result ~= 2;\n            }\n        }\n     \
    \   else if(music_string[i] == '.')\n        {\n            if(music_string[i+1]\
    \ == '|')\n            {\n                result ~= 1;\n            }\n      \
    \  }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                result[$-1] /= 4;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n     \
    \   else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result\
    \ ~= 2;\n        else if(c == '.')\n            result ~= 1;\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n \
    \       switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] = 1;\n \
    \               break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}\n/*\n    >>> parse_music(\"o o| .| o|\
    \ o| .| .| .| .| o o\")\n    [4L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 4L, 4L]\n*/",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                throw new Exception(\"Invalid character\");\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n\
    \    {\n        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(i; 0 .. music_string.length)\n    {\n\
    \        if(music_string[i] == 'o')\n        {\n            if(music_string[i+1]\
    \ == ' ')\n            {\n                result ~= 4;\n            }\n      \
    \      else if(music_string[i+1] == '|')\n            {\n                result\
    \ ~= 2;\n            }\n        }\n        else if(music_string[i] == '.')\n \
    \       {\n            if(music_string[i+1] == '|')\n            {\n         \
    \       result ~= 1;\n            }\n        }\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n     \
    \   {\n            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n \
    \       switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string) \n    {\n        switch(c) \n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(0);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    auto notes = music_string.split(\" \");\n    foreach(note;\
    \ notes)\n    {\n        if(note == \"o\")\n            result ~= 4;\n       \
    \ else if(note == \"o|\")\n            result ~= 2;\n        else if(note == \"\
    .|\")\n            result ~= 1;\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                result[$-1] /= 4;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] beats;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                beats ~= 4;\n                break;\n            case '|':\n\
    \                beats[$-1] /= 2;\n                break;\n            case '.':\n\
    \                beats[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return beats;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n\
    \            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] beats;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                beats ~= 4;\n                break;\n            case '|':\n\
    \                beats ~= 2;\n                break;\n            case '.':\n\
    \                beats ~= 1;\n                break;\n        }\n    }\n    return\
    \ beats;\n}", "{\n    long[] result;\n    foreach(char c; music_string)\n    {\n\
    \        switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(inout long beat; music_string)\n    {\n     \
    \   switch(beat)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case 'o|':\n                result ~=\
    \ 2;\n                break;\n            case '.|':\n                result ~=\
    \ 1;\n                break;\n        }\n    }\n    return result;\n}", "{\n \
    \   long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n \
    \       {\n            case 'o':\n                result ~= 4;\n             \
    \   break;\n            case '|':\n                result[$-1] /= 2;\n       \
    \         break;\n            case '.':\n                result[$-1] /= 4;\n \
    \               break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n     \
    \   else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    auto result = appender!(long[])();\n    foreach(ch; music_string)\n\
    \    {\n        switch(ch)\n        {\n            case 'o':\n               \
    \ result.put(4);\n                break;\n            case '|':\n            \
    \    result.put(2);\n                break;\n            case '.':\n         \
    \       result.put(1);\n                break;\n        }\n    }\n    return result.data;\n\
    }", "{\n    long[] result;\n    int i = 0;\n    foreach(c; music_string)\n   \
    \ {\n        if(c == 'o')\n        {\n            if(i == 0)\n            {\n\
    \                result = new long[1];\n                result[0] = 4;\n     \
    \       }\n            else\n            {\n                result ~= 4;\n   \
    \         }\n            i++;\n        }\n        else if(c == '|')\n        {\n\
    \            if(i == 0)\n            {\n                result = new long[1];\n\
    \                result[0] = 2;\n            }\n            else\n           \
    \ {\n                result ~= 2;\n            }\n            i++;\n        }\n\
    \        else if(c == '.')\n        {\n            if(i == 0)\n            {\n\
    \                result = new long[1];\n                result[0] = 1;\n     \
    \       }\n            else\n            {\n                result ~= 1;\n   \
    \         }\n            i++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      if(c == 'o')\n            result ~= 4;\n        else if(c == '|')\n   \
    \         result ~= 2;\n        else if(c == '.')\n            result ~= 1;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n  \
    \      else if(c == '|')\n            result[$-1] /= 2;\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(immutable c; music_string)\n    {\n  \
    \      switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ res;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n          \
    \  res ~= 4;\n        else if(c == '|')\n            res ~= 2;\n        else if(c\
    \ == '.')\n            res ~= 1;\n    }\n    return res;\n}", "{\n    long[] result;\n\
    \    foreach(immutable c; music_string)\n    {\n        if(c == 'o')\n       \
    \     result ~= 4;\n        else if(c == '|')\n            result[$-1] /= 2;\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '|')\n        {\n            result[$-1] /= 2;\n       \
    \ }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }", "{\n    long[] beats = new long[];\n    foreach(char c; music_string)\n  \
    \  {\n        if(c == 'o')\n            beats ~= 4;\n        else if(c == '|')\n\
    \            beats ~= 2;\n        else if(c == '.')\n            beats ~= 1;\n\
    \    }\n    return beats;\n}", "{\n    long[] result;\n    foreach(immutable c;\
    \ music_string)\n    {\n        if(c == 'o')\n            result ~= 4;\n     \
    \   else if(c == '|')\n            result ~= 2;\n        else if(c == '.')\n \
    \           result ~= 1;\n    }\n    return result;\n}", "{\n    long[] result;\n\
    \    foreach(immutable char c; music_string)\n    {\n        switch(c)\n     \
    \   {\n            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                break;\n            default:\n       \
    \         assert(false);\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(i; 0 .. music_string.length)\n    {\n       \
    \ if(music_string[i] == 'o')\n        {\n            if(music_string[i+1] == '\
    \ ')\n            {\n                result ~= 4;\n            }\n           \
    \ else if(music_string[i+1] == '|')\n            {\n                result ~=\
    \ 2;\n            }\n        }\n        else if(music_string[i] == '.')\n    \
    \    {\n            if(music_string[i+1] == '|')\n            {\n            \
    \    result ~= 1;\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    long[] temp;\n    int i;\n    int j;\n    int k;\n  \
    \  int l;\n    int m;\n    int n;\n    int o;\n    int p;\n    int q;\n    int\
    \ r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n\
    \    int y;\n    int z;\n    int aa;\n    int bb;\n    int cc;\n    int dd;\n\
    \    int ee;\n    int ff;\n    int gg;\n    int hh;\n    int ii;\n    int jj;\n\
    \    int kk;\n    int ll;\n    int mm;\n    int nn;\n    int oo;\n    int pp;\n\
    \    int qq;\n    int rr;\n    int ss;\n    int tt;\n    int uu;\n    int vv;\n\
    \    int ww;\n    int xx;\n    int yy;\n    int zz;\n    int aaa;\n    int bbb;\n\
    \    int ccc;\n    int ddd;\n    int eee;\n    int fff;\n    int ggg;\n    int\
    \ hhh;\n    int iii;\n    int jjj;\n    int kkk;\n    int lll;\n    int mmm;\n\
    \    int nnn;\n    int ooo;\n    int ppp;\n    int qqq;\n    int rrr;\n    int\
    \ sss;\n    int ttt;\n    int uuu;\n    int vvv;\n    int www;\n    int xxx;\n\
    \    int yyy;\n    int zzz;\n    int aaaa;\n    int bbbb;\n    int cccc;\n   \
    \ int dddd;\n    int eeee;\n    int ffff;\n    int gggg;\n    int hhhh;\n    int\
    \ iiii;\n    int jjjj;\n    int kkkk;\n    int llll;\n    int mmmm;\n    int nnnn;\n\
    \    int oooo;\n    int pppp;\n   ", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(char c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n     \
    \   {\n            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(immutable c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        if(c == 'o')\n        {\n            result ~=\
    \ 4;\n        }\n        else if(c == '.')\n        {\n            result ~= 1;\n\
    \        }\n        else if(c == '|')\n        {\n            result[$-1] /= 2;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                result[$-1] /= 4;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] beats;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                beats ~= 4;\n                break;\n            case '|':\n\
    \                beats ~= 2;\n                break;\n            case '.':\n\
    \                beats ~= 1;\n                break;\n        }\n    }\n    return\
    \ beats;\n}", "{\n    long[] result;\n    int i = 0;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '.')\n        {\n            result ~= 1;\n        }\n \
    \       else if(c == '|')\n        {\n            result[$-1] /= 2;\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

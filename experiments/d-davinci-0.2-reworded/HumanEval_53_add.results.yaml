name: HumanEval_53_add
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x,\
    \ long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(6L,\
    \ 3L)\n    2L\n    >>> div(35L, 7L)\n    5L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nSubtract two numbers x and y\n    >>> sub(6L, 3L)\n\
    \    3L\n    >>> sub(35L, 7L)\n    28L\n*/\nlong sub(long x, long y) \n{\n   \
    \ return x - y;\n}\n/*\nFind the remainder of two numbers x and y\n    >>> rem(6L,\
    \ 3L)\n    0L\n    >>> rem(35L, 7L)\n    0L\n*/\nlong rem(long x, long y) \n{\n\
    \    return x % y;\n}\n/*\nFind the absolute value of a number x\n    >>> abs(-6L)\n\
    \    6L\n    >>> abs(35L)\n    35L\n*/\nlong abs(long x) \n{\n    return x.abs;\n\
    }\n/*\nFind the square root of a number x\n    >>> sqrt(4L)\n    2L\n    >>> sqrt(9L)\n\
    \    3L\n*/\nlong sqrt(long x) \n{\n    return x.sqrt;\n}\n/*\nFind the power\
    \ of a number x\n    >>> pow(2L, 3L)\n    8L\n    >>> pow(5L, 2L)\n    25L\n*/\n\
    long pow(long x, long y) \n{\n    return x.pow(y);\n}\n/*\nFind the maximum of\
    \ two numbers x and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n\
    */\nlong max(long x, long y) \n{\n\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkhqjjeat.d(102): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhqjjeat.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nRaise a number x to the power of y\n\
    \    >>> power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nFind the square root of a number\
    \ x\n    >>> square_root(2L)\n    1.4142135623730951L\n    >>> square_root(5L)\n\
    \    2.23606797749979L\n*/\nlong square_root(long x) \n{\n    return sqrt(x);\n\
    }\n/*\nFind the logarithm of a number x\n    >>> logarithm(2L)\n    0.6931471805599453L\n\
    \    >>> logarithm(5L)\n    1.6094379124341003L\n*/\nlong logarithm(long x) \n\
    {\n    return log(x);\n}\n/*\nFind the sine of a number x\n    >>> sine(2L)\n\
    \    0.9092974268256817L\n    >>> sine(5L)\n    -0.9589242746631385L\n*/\nlong\
    \ sine(long x) \n{\n    return sin(x);\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8zzd958j.d(92): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zzd958j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L,\
    \ 3L)\n    2L\n    >>> mod(5L, 7L)\n    5L\n    \n*/\nlong mod(long x, long y)\
    \ \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n\
    \    >>> neg(5L)\n    -5L\n    \n*/\nlong neg(long x) \n{\n    return -x;\n}\n\
    /*\nAbsolute value of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign\
    \ of a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nFloor\
    \ of a number x\n    >>> floor(2.5L)\n    2L\n    >>> floor(-5.5L)\n    -6L\n\
    \    \n*/\nlong floor(long x\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppvhp6kc4.d(108): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvhp6kc4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n    2L\n*/\nlong sqrt(long x) \n{\n\
    \    return sqrt(x);\n}\n/*\nSquare of a number x\n    >>> square(2L)\n    4L\n\
    \    >>> square(5L)\n    25L\n*/\nlong square(long x) \n{\n    return x * x;\n\
    }\n/*\nCube of a number x\n    >>> cube(2L)\n    8L\n    >>> cube(5L)\n    125L\n\
    */\nlong cube(long x) \n{\n    return x * x * x;\n}\n/*\nFactorial of\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpli2c49eh.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpli2c49eh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp62oqr7_e.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62oqr7_e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value\
    \ of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\n\
    long abs(long x) \n{\n    return std.math.abs(x);\n}\n/*\nSign of a number x\n\
    \    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long\
    \ x) \n{\n    return std.math.sign(x);\n}\n/*\nFloor of a number x\n    >>> floor(2.3L)\n\
    \    2L\n    >>> floor(-5.7L)\n    -6L\n    \n*/\nlong floor(long x) \n{\n\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpot7xhosm.d(110): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot7xhosm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nFind the remainder of two numbers\
    \ x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L, 7L)\n    5L\n\
    */\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nFind the absolute\
    \ value of x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nFind the maximum of two numbers x\
    \ and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n*/\nlong max(long\
    \ x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind the minimum of two numbers\
    \ x and y\n    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n    5L\n*/\nlong\
    \ min(long x, long y) \n{\n    return x < y ? x : y;\n}\n/*\nFind the square root\
    \ of x\n    >>> sqrt(4L)\n    2L\n    >>> sqrt(9L)\n    3L\n*/\nlong sq\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwce2ehis.d(100): Error: semicolon expected, not `unittest`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwce2ehis.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nFind the absolute value of a number x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n\
    }\n/*\nFind the sign of a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n\
    \    -1L\n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : (x > 0 ? 1 : 0);\n\
    }\n/*\nFind the minimum of two numbers x and y\n    >>> min(2L, 3L)\n    2L\n\
    \    >>> min(5L, 7L)\n    5L\n*/\nlong min(long x, long y) \nunittest\n{\n   \
    \ alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp87ek5xxp.d(100): Error: semicolon expected following function\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp87ek5xxp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(6L, 3L)\n    2L\n    >>> divide(35L, 7L)\n    5L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(6L, 3L)\n    3L\n    >>> subtract(35L, 7L)\n    28L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nCalculate the square root of a number\
    \ x\n    >>> square_root(9L)\n    3L\n    >>> square_root(16L)\n    4L\n*/\nlong\
    \ square_root(long x) \n{\n    return cast(long) sqrt(x);\n}\n/*\nCalculate the\
    \ power of a number x to the power of y\n    >>> power(2L, 3L)\n    8L\n    >>>\
    \ power(5L, 7L)\n    78125L\n*/\nlong power(long x, long y) \n{\n    return cast(long)\
    \ pow(x, y);\n}\n/*\nCalculate the factorial of a number x\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(5L)\n    120L\n*/\nlong factorial(long x) \n{\n   \
    \ long result = 1L;\n    foreach (i; 0L .. x) \n    {\n        result *= i;\n\
    \    }\n    return result;\n}\n/*\nCalculate the nth fibonacci number\n    >>>\
    \ fibonacci(3L)\n    2L\n    >>> fibonacci(5L)\n    5L\n*/\nlong fibonacci(long\
    \ x) \n{\n    long a = 0L;\n    long b\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsfn83p2l.d(97): Error: semicolon expected, not `unittest`\\n/tmp/tmpsfn83p2l.d(97):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpsfn83p2l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(6L, 3L)\n    2L\n    >>> divide(35L, 7L)\n    5L\n \
    \   \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nSubtract\
    \ two numbers x and y\n    >>> subtract(6L, 3L)\n    3L\n    >>> subtract(35L,\
    \ 7L)\n    28L\n    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n\
    }\n/*\nCalculate the power of x to y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nCalculate the square root of x\n    >>> squareRoot(4L)\n    2L\n\
    \    >>> squareRoot(9L)\n    3L\n    \n*/\nlong squareRoot(long x) \n{\n    return\
    \ sqrt(x);\n}\n/*\nCalculate the cube root of x\n    >>> cubeRoot(8L)\n    2L\n\
    \    >>> cubeRoot(27L)\n    3L\n    \n*/\nlong cubeRoot(long x) \n{\n    return\
    \ cbrt(x);\n}\n/*\nCalculate the factorial of x\n    >>> factorial(5L)\n    120L\n\
    \    >>> factorial(10L)\n    3628800L\n    \n*/\nlong factorial(long x) \n{\n\
    \    return factorial!(x);\n}\n/*\nCalculate the logarithm of x\n    >>> logarithm(100L)\n\
    \    2L\n    >>> logarithm(1000L)\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq42p7v0k.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq42p7v0k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nGet the remainder of two numbers x\
    \ and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L, 7L)\n    5L\n\
    */\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the absolute\
    \ value of a number x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\n\
    long abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of a number\
    \ x\n    >>> sign(-2L)\n    -1L\n    >>> sign(5L)\n    1L\n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the maximum of two numbers x\
    \ and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n*/\nlong max(long\
    \ x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nGet the minimum of two numbers\
    \ x and y\n    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n    5L\n*/\nlong\
    \ min\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkmj4z_6k.d(100): Error: semicolon expected, not `unittest`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmj4z_6k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdcpvchw8.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdcpvchw8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8ovid48h.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ovid48h.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nRaise x to the power of y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nRaise x to the power of y modulo\
    \ z\n    >>> powermod(2L, 3L, 5L)\n    3L\n    >>> powermod(5L, 7L, 13L)\n   \
    \ 6L\n*/\nlong powermod(long x, long y, long z) \n{\n    return powmod(x, y, z);\n\
    }\n/*\nReturn the absolute value of x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n\
    \    5L\n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nReturn the\
    \ sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5on4j_dg.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5on4j_dg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp57th3oxb.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp57th3oxb.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n\
    \    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n{\n    return x <\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzu4i5r38.d(106): Error: expression expected, not `unittest`\\\
    n/tmp/tmpzu4i5r38.d(107): Error: found `{` when expecting `;` following `return`\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzu4i5r38.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nBitwise and two numbers x and y\n    >>> bitwiseAnd(2L, 3L)\n  \
    \  2L\n    >>> bitwiseAnd(5L, 7L)\n    5L\n*/\nlong bitwiseAnd(long x, long y)\
    \ \n{\n    return x & y;\n}\n/*\nBitwise or two numbers x and y\n    >>> bitwiseOr(2L,\
    \ 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n    7L\n*/\nlong bitwiseOr(long x, long\
    \ y) \n{\n    return x | y;\n}\n/*\nBitwise xor two numbers x and y\n    >>> bitwiseXor(2L,\
    \ 3L)\n    1L\n    >>> bitwiseXor(5L, 7\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqbf4yuys.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqbf4yuys.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpj0qsoe.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpj0qsoe.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nSquare root of a number x\n    >>>\
    \ squareRoot(2L)\n    1.4142135623730951L\n    >>> squareRoot(5L)\n    2.23606797749979L\n\
    */\nlong squareRoot(long x) \n{\n    return sqrt(x);\n}\n/*\nPower of a number\
    \ x\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong\
    \ power(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nLogarithm of a number\
    \ x\n    >>> logarithm(2L)\n    0.6931471805599453L\n    >>> logarithm(5L)\n \
    \   1.6094379124341003L\n*/\nlong logarithm(long x) \n{\n    return log(x);\n\
    }\n/*\nFactorial of a number x\n    >>> factorial(2L)\n    2L\n    >>> factorial(5L)\n\
    \    120L\n*/\nlong factorial(long x) \n{\n    long result = 1L;\n    foreach\
    \ (i; 1L .. x + 1L) \n    {\n        result *= i;\n    }\n   \nunittest\n{\n \
    \   alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbxao79zo.d(96): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxao79zo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> squareRoot(2L)\n    1.4142135623730951L\n    >>> squareRoot(5L)\n    2.23606797749979L\n\
    */\nlong squareRoot(long x) \n{\n    return sqrt(x);\n}\n/*\nCube root of a number\
    \ x\n    >>> cubeRoot(2L)\n    1.2599210498948732L\n    >>> cubeRoot(5L)\n   \
    \ 1.7099759466766968L\n*/\nlong cubeRoot(long x) \n{\n    return cbrt(x);\n}\n\
    /*\nFactorial of a number x\n    >>> factorial(2L)\n    2L\n   \nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwwxgwfem.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwxgwfem.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nAbsolute value of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign of\
    \ a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : (x > 0 ? 1 : 0);\n}\n/*\nFloor of a number x\n\
    \    >>> floor(2.5L)\n    2L\n    >>> floor(-5.5L)\n    -6L\n*/\nlong floor(long\
    \ x) \n{\n    return cast(long) floor\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1po1apg_.d(102): Error: found `unittest` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp1po1apg_.d(112): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1po1apg_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nPower two numbers x and y\n    >>> pow(2L, 3L)\n    8L\n    >>>\
    \ pow(5L, 7L)\n    78125L\n*/\nlong pow(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nFloor two numbers x and y\n    >>> floor(2L, 3L)\n    2L\n    >>>\
    \ floor(5L, 7L)\n    5L\n*/\nlong floor(long x, long y) \n{\n    return floor(x,\
    \ y);\n}\n/*\nCeiling two numbers x and y\n    >>> ceil(2L, 3L)\n    2L\n    >>>\
    \ ceil(5L, 7L)\n    5L\n*/\nlong ceil(long x, long y) \n{\n    return ceil(x,\
    \ y);\n}\n/*\nRound two numbers x and y\n    >>> round(2L, 3L)\n    2L\n    >>>\
    \ round(5L, 7L)\n    5\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsy4rnh7u.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsy4rnh7u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers x and y and return\
    \ the remainder\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n\
    */\nlong modulo(long x, long y) \n{\n    return x % y;\n}\n/*\nReturn the absolute\
    \ value of x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nReturn the sign of x\n    >>> sign(-2L)\n\
    \    -1L\n    >>> sign(5L)\n    1L\n*/\nlong sign(long x) \n{\n    return x <\
    \ 0 ? -1 : 1;\n}\n/*\nReturn the minimum of x and y\n    >>> min(2L, 3L)\n   \
    \ 2L\n    >>> min(5L, 7L)\n    5L\n*/\nlong min(long x, long y) \n{\n    return\
    \ x < y ? x : y;\n}\n/*\nReturn the maximum of x and y\n    >>> max(2L, 3L)\n\
    \    3L\n    >>> max(5L, 7L)\n    7L\n*/\nlong max(long x\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl6lwk2a3.d(100): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6lwk2a3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Find the remainder of two numbers x and y\n    >>> remainder(2L, 3L)\n    2L\n\
    \    >>> remainder(5L, 7L)\n    5L\n    \n*/\nlong remainder(long x, long y) \n\
    {\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n    >>> abs(-2L)\n\
    \    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x\
    \ < 0 ? -x : x;\n}\n/*\nFind the minimum of two numbers x and y\n    >>> min(2L,\
    \ 3L)\n    2L\n    >>> min(5L, 7L)\n    5L\n    \n*/\nlong min(long x, long y)\
    \ \n{\n    return x < y ? x : y;\n}\n/*\nFind the maximum of two numbers x and\
    \ y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n    \n*/\nlong\
    \ max(long x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind the square root\
    \ of a number x\n    >>> sqrt(2L)\n    1L\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2qfbkwe6.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2qfbkwe6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n\
    \    3L\n    >>> increment(5L)\n    6L\n*/\nlong increment(long x) \n{\n    return\
    \ x + 1;\n}\n/*\nDecrement a number x\n    >>> decrement(2L)\n    1L\n    >>>\
    \ decrement(5L)\n    4L\n*/\nlong decrement(long x) \n{\n    return x - 1;\n}\n\
    /*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n    -5L\n\
    */\nlong negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxqy71486.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy71486.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0l91uvnk.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0l91uvnk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L,\
    \ 3L)\n    2L\n    >>> mod(5L, 7L)\n    5L\n    \n*/\nlong mod(long x, long y)\
    \ \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n\
    \    >>> neg(5L)\n    -5L\n    \n*/\nlong neg(long x) \n{\n    return -x;\n}\n\
    /*\nAbsolute value of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign\
    \ of a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nFloor\
    \ of a number x\n    >>> floor(2.5)\n    2L\n    >>> floor(-5.5)\n    -6L\n  \
    \  \n*/\nlong floor(double x) \nunittest\n{\n    alias candidate = add;\n\n  \
    \  assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n  \
    \  assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n \
    \   assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpznu5jwnf.d(108): Error: semicolon expected following function\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpznu5jwnf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two\
    \ numbers x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n\
    \    -2L\n    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n\
    /*\nFind the remainder of two numbers x and y\n    >>> remainder(2L, 3L)\n   \
    \ 2L\n    >>> remainder(5L, 7L)\n    5L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n  \
    \  >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nFind the minimum of two numbers x and y\n\
    \    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n    5L\n    \n*/\nlong min(long\
    \ x, long y) \n{\n    return x < y ? x : y;\n}\n/*\nFind the maximum of two numbers\
    \ x and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n    \n*/\n\
    long max(long x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind the square\
    \ root of a number x\n    >>> sqrt(2L)\n    1L\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ax7f1o4.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ax7f1o4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nExponentiate two numbers x and y\n\
    \    >>> exponentiate(2L, 3L)\n    8L\n    >>> exponentiate(5L, 7L)\n    78125L\n\
    */\nlong exponentiate(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nNegate\
    \ a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong\
    \ negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n\
    \    3L\n    >>> increment(5L)\n    6L\n*/\nlong increment(long x) \n{\n    return\
    \ x + 1;\n}\n/*\nDecrement a number x\n    >>> decrement(2L)\n    1L\n    >>>\
    \ decrement(5L)\n    4L\n*/\nlong decrement(long x) \n{\n    return x - 1;\n}\n\
    /*\nAbs\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpur3293rv.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpur3293rv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nAbsolute value of x\n    >>> abs(-2L)\n\
    \    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long x) \n{\n    return x < 0 ?\
    \ -x : x;\n}\n/*\nNegate x\n    >>> negate(-2L)\n    2L\n    >>> negate(5L)\n\
    \    -5L\n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nFloor of x\n   \
    \ >>> floor(2.5L)\n    2L\n    >>> floor(5.7L)\n    5L\n*/\nlong floor(long x)\
    \ \n{\n    return cast(long) floor(x);\n}\n/*\n\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppx740joq.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppx740joq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L,\
    \ 3L)\n    2L\n    >>> mod(5L, 7L)\n    5L\n    \n*/\nlong mod(long x, long y)\
    \ \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n\
    \    >>> neg(5L)\n    -5L\n    \n*/\nlong neg(long x) \n{\n    return -x;\n}\n\
    /*\nBitwise and two numbers x and y\n    >>> bitand(2L, 3L)\n    2L\n    >>> bitand(5L,\
    \ 7L)\n    5L\n    \n*/\nlong bitand(long x, long y) \n{\n    return x & y;\n\
    }\n/*\nBitwise or two numbers x and y\n    >>> bitor(2L, 3L)\n    3L\n    >>>\
    \ bitor(5L, 7L)\n    7L\n    \n*/\nlong bitor(long x, long y) \n{\n    return\
    \ x | y;\n}\n/*\nBitwise xor two numbers x and y\n    >>> bitxor(2L, 3L)\n   \
    \ 1L\n    >>> bitxor(5\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9oiyzbff.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9oiyzbff.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ebahjsl.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ebahjsl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdklgmci8.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklgmci8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> square_root(2L)\n    1.4142135623730951L\n    >>> square_root(5L)\n   \
    \ 2.23606797749979L\n*/\nlong square_root(long x) \n{\n    return sqrt(x);\n}\n\
    /*\nCube root of a number x\n    >>> cube_root(2L)\n    1.2599210498948732L\n\
    \    >>> cube_root(5L)\n    1.7099759466766968L\n*/\nlong cube_root(long x) \n\
    {\n    return cbrt(x);\n}\n/*\nFactorial of a number x\n    >>> factorial(2L)\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqgw1bdm0.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgw1bdm0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Find the remainder of two numbers x and y\n    >>> remainder(2L, 3L)\n    2L\n\
    \    >>> remainder(5L, 7L)\n    5L\n    \n*/\nlong remainder(long x, long y) \n\
    {\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n    >>> abs(-2L)\n\
    \    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x\
    \ < 0 ? -x : x;\n}\n/*\nFind the sign of a number x\n    >>> sign(-2L)\n    -1L\n\
    \    >>> sign(5L)\n    1L\n    >>> sign(0L)\n    0L\n    \n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nFind the maximum of two\
    \ numbers x and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n\
    \    \n*/\nlong max(long x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind\
    \ the minimum of two numbers x and y\n    >>>\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu52ko5go.d(101): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu52ko5go.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptfqnls98.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptfqnls98.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nAbsolute value of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign of\
    \ a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : (x > 0 ? 1 : 0);\n}\n/*\nFloor of a number x\n\
    \    >>> floor(2.5L)\n    2L\n    >>> floor(-5.5L)\n    -6L\n*/\nlong floor(long\
    \ x) \n{\n    return cast(long) floor\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuj2rztkg.d(102): Error: found `unittest` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpuj2rztkg.d(112): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpuj2rztkg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> square_root(2L)\n    1.4142135623730951L\n    >>> square_root(5L)\n   \
    \ 2.23606797749979L\n*/\nlong square_root(long x) \n{\n    return sqrt(x);\n}\n\
    /*\nCube root of a number x\n    >>> cube_root(2L)\n    1.2599210498948732L\n\
    \    >>> cube_root(5L)\n    1.7099759466766968L\n*/\nlong cube_root(long x) \n\
    {\n    return cbrt(x);\n}\n/*\nFactorial of a number x\n    >>> factorial(2L)\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqzkngsnc.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqzkngsnc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nExponentiate two numbers x and y\n\
    \    >>> exponentiate(2L, 3L)\n    8L\n    >>> exponentiate(5L, 7L)\n    78125L\n\
    */\nlong exponentiate(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nNegate\
    \ a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong\
    \ negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a number x\n  \
    \  >>> absolute(2L)\n    2L\n    >>> absolute(-5L)\n    5L\n*/\nlong absolute(long\
    \ x) \n{\n    return abs(x);\n}\n/*\nFloor of a number x\n    >>> floor(2.5L)\n\
    \    2L\n    >>> floor(-5.5L)\n    -6L\n*/\nlong floor(long x) \n{\n    return\
    \ floor(x);\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwshld5n.d(103): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwshld5n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nRaise x to the power of y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nSquare root of x\n    >>> squareRoot(2L)\n    1.4142135623730951L\n\
    \    >>> squareRoot(5L)\n    2.23606797749979L\n    \n*/\nlong squareRoot(long\
    \ x) \n{\n    return sqrt(x);\n}\n/*\nCube root of x\n    >>> cubeRoot(2L)\n \
    \   1.2599210498948732L\n    >>> cubeRoot(5L)\n    1.7099759466766968L\n    \n\
    */\nlong cubeRoot(long x) \n{\n    return cbrt(x);\n}\n/*\nNatural logarithm of\
    \ x\n   \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9zbrlykw.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zbrlykw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(6L, 3L)\n    2L\n    >>> divide(35L, 7L)\n    5L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(6L, 3L)\n    3L\n    >>> subtract(35L, 7L)\n    28L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nFind the remainder of two numbers\
    \ x and y\n    >>> remainder(6L, 3L)\n    0L\n    >>> remainder(35L, 7L)\n   \
    \ 0L\n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nFind the\
    \ absolute value of a number x\n    >>> abs(-3L)\n    3L\n    >>> abs(3L)\n  \
    \  3L\n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nFind the minimum\
    \ of two numbers x and y\n    >>> min(3L, 5L)\n    3L\n    >>> min(5L, 3L)\n \
    \   3L\n*/\nlong min(long x, long y) \n{\n    return x < y ? x : y;\n}\n/*\nFind\
    \ the maximum of two numbers x and y\n    >>> max(3L, 5L)\n    5L\n    >>> max(5L,\
    \ 3L)\n    5L\n*/\nlong max(long x, long y) \n{\n    return x > y ? x : y;\n}\n\
    /*\nFind the square root of a number x\n    >>> sqrt(9L)\n    3L\n    >>> sqrt(16L)\n\
    \    4L\n*/\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nBitwise and two numbers x and y\n    >>> bitwiseAnd(2L, 3L)\n  \
    \  2L\n    >>> bitwiseAnd(5L, 7L)\n    5L\n*/\nlong bitwiseAnd(long x, long y)\
    \ \n{\n    return x & y;\n}\n/*\nBitwise or two numbers x and y\n    >>> bitwiseOr(2L,\
    \ 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n    7L\n*/\nlong bitwiseOr(long x, long\
    \ y) \n{\n    return x | y;\n}\n/*\nBitwise xor two numbers x and y\n    >>> bitwiseXor(2L,\
    \ 3L)\n    1L\n    >>> bitwiseXor(5L, 7\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2i36ucgm.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2i36ucgm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y)\
    \ \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n\
    \    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n\
    \    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n\
    \    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return\
    \ x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>>\
    \ add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x +\
    \ y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L,\
    \ 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n\
    /*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n\
    \    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    long add\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfrcnoc23.d(108): Error: semicolon expected, not `unittest`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfrcnoc23.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv7ysg0vn.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7ysg0vn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nBitwise and two numbers x and y\n    >>> bitwiseAnd(2L, 3L)\n  \
    \  2L\n    >>> bitwiseAnd(5L, 7L)\n    5L\n*/\nlong bitwiseAnd(long x, long y)\
    \ \n{\n    return x & y;\n}\n/*\nBitwise or two numbers x and y\n    >>> bitwiseOr(2L,\
    \ 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n    7L\n*/\nlong bitwiseOr(long x, long\
    \ y) \n{\n    return x | y;\n}\n/*\nBitwise xor two numbers x and y\n    >>> bitwiseXor(2L,\
    \ 3L)\n    1L\n    >>> bitwiseXor(5L, 7\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz20fyzg1.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz20fyzg1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplroigcbp.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplroigcbp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(-2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy50iv3mu.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy50iv3mu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n    >>> neg(5L)\n\
    \    -5L\n*/\nlong neg(long x) \n{\n    return -x;\n}\n/*\nIncrement a number\
    \ x\n    >>> inc(2L)\n    3L\n    >>> inc(5L)\n    6L\n*/\nlong inc(long x) \n\
    {\n    return x + 1;\n}\n/*\nDecrement a number x\n    >>> dec(2L)\n    1L\n \
    \   >>> dec(5L)\n    4L\n*/\nlong dec(long x) \n{\n    return x - 1;\n}\n/*\n\
    Bitwise and of two numbers x and y\n    >>> bitand(2L, 3L)\n    2L\n    >>> bitand(5L,\
    \ 7L)\n    5L\n*/\nlong bitand(long x, long y) \n{\n    return x & y;\n}\n/*\n\
    Bitwise or of two numbers x and y\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1tj5c_y6.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1tj5c_y6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nExponentiate two numbers x and y\n    >>> exp(2L, 3L)\n    8L\n\
    \    >>> exp(5L, 7L)\n    78125L\n*/\nlong exp(long x, long y) \n{\n    return\
    \ pow(x, y);\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n    >>> neg(5L)\n\
    \    -5L\n*/\nlong neg(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a\
    \ number x\n    >>> abs(2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long\
    \ x) \n{\n    return abs(x);\n}\n/*\nFloor of a number x\n    >>> floor(2.5L)\n\
    \    2L\n    >>> floor(5.7L)\n    5L\n*/\nlong floor(long x) \n{\n    return floor(x);\n\
    }\n/*\nCeiling\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyfjgdbyn.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyfjgdbyn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(6L, 3L)\n    2L\n    >>> divide(35L, 7L)\n    5L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(6L, 3L)\n    3L\n    >>> subtract(35L, 7L)\n    28L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nFind the remainder of two numbers\
    \ x and y\n    >>> remainder(6L, 3L)\n    0L\n    >>> remainder(35L, 7L)\n   \
    \ 0L\n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nFind the\
    \ square root of a number x\n    >>> squareRoot(9L)\n    3L\n    >>> squareRoot(16L)\n\
    \    4L\n*/\nlong squareRoot(long x) \n{\n    return cast(long) sqrt(x);\n}\n\
    /*\nFind the power of two numbers x and y\n    >>> power(2L, 3L)\n    8L\n   \
    \ >>> power(5L, 2L)\n    25L\n*/\nlong power(long x, long y) \n{\n    return cast(long)\
    \ pow(x, y);\n}\n/*\nFind the absolute value of a number x\n    >>> absoluteValue(-5L)\n\
    \    5L\n    >>> absoluteValue(5L)\n    5L\n*/\nlong absoluteValue(long x) \n\
    {\n    return cast(long) abs(x);\n}\n/*\nFind the maximum of two numbers x and\
    \ y\n    >>> maximum(2L, 3L)\n    3L\n    >>> maximum(5L, 7L)\n    7L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpexs0mxzp.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexs0mxzp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg6dnspru.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6dnspru.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nPower two numbers x and y\n    >>> pow(2L, 3L)\n    8L\n    >>>\
    \ pow(5L, 7L)\n    78125L\n*/\nlong pow(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nAbsolute value of a number x\n    >>> abs(-2L)\n    2L\n    >>>\
    \ abs(5L)\n    5L\n*/\nlong abs(long x) \n{\n    return abs(x);\n}\n/*\nFloor\
    \ of a number x\n    >>> floor(2.5L)\n    2L\n    >>> floor(5.7L)\n    5L\n*/\n\
    long floor(long x) \n{\n    return floor(x);\n}\n/*\nCeiling of a number x\n \
    \   >>> ceil(2.5L)\n    3L\n    >>> ceil(5.7L)\n    6L\n*/\nlong ceil(long x)\
    \ \n{\n    return ceil(x);\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_fbdlkdq.d(103): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_fbdlkdq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nRaise a number x to the power of y\n\
    \    >>> power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nCalculate the square root of a\
    \ number x\n    >>> squareRoot(2L)\n    1.4142135623730951L\n    >>> squareRoot(5L)\n\
    \    2.23606797749979L\n*/\nlong squareRoot(long x) \n{\n    return sqrt(x);\n\
    }\n/*\nCalculate the absolute value of a number x\n    >>> absoluteValue(-2L)\n\
    \    2L\n    >>> absoluteValue(5L)\n    5L\n*/\nlong absoluteValue(long x) \n\
    {\n    return abs(x);\n}\n/*\nCalculate the factorial of a number x\n    >>> factorial(2L)\n\
    \    2L\n    >>> fact\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmmc3ua0e.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmmc3ua0e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpresh4lf9.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpresh4lf9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n    2L\n*/\nlong sqrt(long x) \n{\n\
    \    return sqrt(x);\n}\n/*\nFactorial of a number x\n    >>> factorial(2L)\n\
    \    2L\n    >>> factorial(5L)\n    120L\n*/\nlong factorial(long x) \n{\n   \
    \ long result = 1L;\n    for (long i = 1L; i <= x; i++) \n    {\n        result\
    \ *= i;\n    }\n    return result;\n}\n/*\nGreatest common divisor of two numbers\
    \ x and y\n    >>> gcd(\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_cnkg9w.d(97): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_cnkg9w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzsxm6dca.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzsxm6dca.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxwx5kprn.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx5kprn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nAdd two numbers x and y\n    >>> add(2.0, 3.0)\n    5.0\n    >>> add(5.0,\
    \ 7.0)\n    12.0\n    \n*/\ndouble add(double x, double y) \n{\n    return x +\
    \ y;\n}\n/*\nSubtract two numbers x and y\n    >>> subtract(2.0, 3.0)\n    -1.0\n\
    \    >>> subtract(5.0, 7.0)\n    -2.0\n    \n*/\ndouble subtract(double x, double\
    \ y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2.0,\
    \ 3.0)\n    6.0\n    >>> multiply(5.0, 7.0)\n    35.0\n    \n*/\ndouble multiply(double\
    \ x, double y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0tffomjy.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0tffomjy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n\
    \    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nBitwise AND two numbers x and y\n    >>> bitwiseAnd(2L, 3L)\n    2L\n \
    \   >>> bitwiseAnd(5L, 7L)\n    5L\n    \n*/\nlong bitwiseAnd(long x, long y)\
    \ \n{\n    return x & y;\n}\n/*\nBitwise OR two numbers x and y\n    >>> bitwiseOr(2L,\
    \ 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n    7L\n    \n*/\nlong bitwiseOr(long\
    \ x, long y) \n{\n    return x | y;\n}\n/*\nBitwise XOR two numbers x and y\n\
    \    >>> bitwiseXor(2L, 3L)\n    1L\n    >>> bitwiseXor(5L, 7L)\n    2L\n    \n\
    */\nlong bitwiseXor(long x, long y) \n{\n    return x ^ y;\n}\n/*\nBitwise NOT\
    \ a\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcalq4vjb.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcalq4vjb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two\
    \ numbers x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n\
    \    -2L\n    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n\
    /*\nFind the remainder of two numbers x and y\n    >>> remainder(2L, 3L)\n   \
    \ 2L\n    >>> remainder(5L, 7L)\n    5L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n  \
    \  >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x) \n\
    {\n    return x.abs;\n}\n/*\nFind the square root of a number x\n    >>> sqrt(4L)\n\
    \    2L\n    >>> sqrt(9L)\n    3L\n    \n*/\nlong sqrt(long x) \n{\n    return\
    \ x.sqrt;\n}\n/*\nFind the power of a number x\n    >>> power(2L, 3L)\n    8L\n\
    \    >>> power(5L, 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n\
    \    return x.pow(y);\n}\n/*\nFind the logarithm of a number x\n    >>> log(2L)\n\
    \    0.6931471805599453L\n    >>> log(5L)\n\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgidedzp.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxgidedzp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpttaowu7v.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttaowu7v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value\
    \ of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\n\
    long abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n\
    \    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nRound a number x\n  \
    \  >>> round(2.5L)\n    3L\n    >>> round(5.7L)\n    6L\n    \n*/\nlong round(long\
    \ x\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkdfsedxb.d(108): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkdfsedxb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nPower two numbers x and y\n    >>> pow(2L, 3L)\n    8L\n    >>>\
    \ pow(5L, 7L)\n    78125L\n*/\nlong pow(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nSquare root of a number x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2L\n*/\nlong sqrt(long x) \n{\n    return sqrt(x);\n}\n/*\nCube root of a\
    \ number x\n    >>> cbrt(2L)\n    1L\n    >>> cbrt(5L)\n    1L\n*/\nlong cbrt(long\
    \ x) \n{\n    return cbrt(x);\n}\n/*\nSquare of a number x\n    >>> sqr(2L)\n\
    \    4L\n    >>> sqr(5L)\n    25L\n*/\nlong sqr(long x) \n{\n    return sqr(x);\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9ujnkzl.d(102): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9ujnkzl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfjb6022a.d(111): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjb6022a.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nFactorial of a number x\n    >>>\
    \ factorial(2L)\n    2L\n    >>> factorial(5L)\n    120L\n*/\nlong factorial(long\
    \ x) \n{\n    return factorial(x);\n}\n/*\nAbsolute value of a number x\n    >>>\
    \ absolute(2L)\n    2L\n    >>> absolute(-5L)\n    5L\n*/\nlong absolute(long\
    \ x) \n{\n    return abs(x);\n}\n/*\nNegate a number x\n    >>> negate(2L)\n \
    \   -2L\n    >>> negate(-5L)\n    5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nGreatest common\nunittest\n{\n    alias candidate = add;\n\n   \
    \ assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n   \
    \ assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n  \
    \  assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk5lf887r.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk5lf887r.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> square_root(2L)\n    1.4142135623730951L\n    >>> square_root(5L)\n   \
    \ 2.23606797749979L\n*/\nlong square_root(long x) \n{\n    return sqrt(x);\n}\n\
    /*\nCube root of a number x\n    >>> cube_root(2L)\n    1.2599210498948732L\n\
    \    >>> cube_root(5L)\n    1.7099759466766968L\n*/\nlong cube_root(long x) \n\
    {\n    return cbrt(x);\n}\n/*\nFactorial of a number x\n    >>> factorial(2L)\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmekbl28y.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmekbl28y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n    2L\n*/\nlong sqrt(long x) \n{\n\
    \    return sqrt(x);\n}\n/*\nCube root of a number x\n    >>> cbrt(2L)\n    1L\n\
    \    >>> cbrt(5L)\n    1L\n*/\nlong cbrt(long x) \n{\n    return cbrt(x);\n}\n\
    /*\nFactorial of a number x\n    >>> factorial(2L)\n    2L\n    >>> factorial(5L)\n\
    \    120L\n*/\nlong factorial(long x) \n{\n    return fact\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8nmsd2u5.d(102): Error: found `unittest` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp8nmsd2u5.d(112): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp8nmsd2u5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Find the remainder of two numbers x and y\n    >>> remainder(2L, 3L)\n    2L\n\
    \    >>> remainder(5L, 7L)\n    5L\n    \n*/\nlong remainder(long x, long y) \n\
    {\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n    >>> abs(-2L)\n\
    \    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x\
    \ < 0 ? -x : x;\n}\n/*\nFind the power of a number x to the power of y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n    \n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nFind the square root of a number\
    \ x\n    >>> sqrt(4L)\n    2L\n    >>> sqrt(5L)\n    2L\n    \n*/\nlong sqrt(long\
    \ x) \n{\n    return sqrt(x);\n}\n/*\nFind the cube root of a number x\n    >>>\
    \ cbrt(8L)\n    2L\n    >>> cbrt(\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_lo04xnw.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_lo04xnw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y)\
    \ \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n\
    \    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n\
    \    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n\
    \    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return\
    \ x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>>\
    \ add(5L, 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x +\
    \ y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L,\
    \ 7L)\n    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n\
    /*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n\
    \    12L\n    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nlong add(long x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    long add\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwclnz00z.d(108): Error: semicolon expected, not `unittest`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwclnz00z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2izrvdo7.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2izrvdo7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value\
    \ of a number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\n\
    long abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n\
    \    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nSquare root of a number\
    \ x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n    2L\n    \n*/\nlong sqrt(long\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7w1i1yb5.d(108): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7w1i1yb5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nBitwise AND two numbers x and y\n\
    \    >>> bitwiseAnd(2L, 3L)\n    2L\n    >>> bitwiseAnd(5L, 7L)\n    5L\n*/\n\
    long bitwiseAnd(long x, long y) \n{\n    return x & y;\n}\n/*\nBitwise OR two\
    \ numbers x and y\n    >>> bitwiseOr(2L, 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n\
    \    7L\n*/\nlong bitwiseOr(long x, long y) \n{\n    return x | y;\n}\n/*\nBitwise\
    \ XOR two numbers x and y\n    >>> bitwiseXor(2L, 3L)\n    1L\n    >>> bitwiseXor(5L,\
    \ 7L)\n    2L\n*/\nlong bitwiseXor(long x, long y) \n{\n    return x ^ y;\n}\n\
    /*\nBitwise NOT a number x\n    >>> bitwiseNot(2L)\n   \nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpxd53s5.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpxd53s5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers x and y and return\
    \ the remainder\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n\
    */\nlong modulo(long x, long y) \n{\n    return x % y;\n}\n/*\nDivide two numbers\
    \ x and y and return the quotient and remainder\n    >>> divmod(2L, 3L)\n    (0L,\
    \ 2L)\n    >>> divmod(5L, 7L)\n    (0L, 5L)\n*/\nTuple!(long, long) divmod(long\
    \ x, long y) \n{\n    return tuple(x / y, x % y);\n}\n/*\nRaise x to the power\
    \ y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong\
    \ power(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nReturn the absolute\
    \ value of x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nReturn the integer part of x\n  \
    \ \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqq7ip7_p.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq7ip7_p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> squareRoot(2L)\n    1.4142135623730951L\n    >>> squareRoot(5L)\n    2.23606797749979L\n\
    */\nlong squareRoot(long x) \n{\n    return sqrt(x);\n}\n/*\nCube root of a number\
    \ x\n    >>> cubeRoot(2L)\n    1.2599210498948732L\n    >>> cubeRoot(5L)\n   \
    \ 1.7099759466766968L\n*/\nlong cubeRoot(long x) \n{\n    return cbrt(x);\n}\n\
    /*\nFactorial of a number x\n    >>> factorial(2L)\n    2L\n   \nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq9j6ma6p.d(92): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9j6ma6p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcnccn95r.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnccn95r.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nExponentiate two numbers x and y\n\
    \    >>> exponentiate(2L, 3L)\n    8L\n    >>> exponentiate(5L, 7L)\n    78125L\n\
    */\nlong exponentiate(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nNegate\
    \ a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong\
    \ negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a number x\n  \
    \  >>> absolute(2L)\n    2L\n    >>> absolute(-5L)\n    5L\n*/\nlong absolute(long\
    \ x) \n{\n    return abs(x);\n}\n/*\nFloor of a number x\n    >>> floor(2.3L)\n\
    \    2L\n    >>> floor(5.7L)\n    5L\n*/\nlong floor(long x) \n{\n    return cast(long)\
    \ floor(\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0r28ld2a.d(102): Error: expression expected, not `unittest`\\\
    n/tmp/tmp0r28ld2a.d(103): Error: found `{` when expecting `,`\\n/tmp/tmp0r28ld2a.d(104):\
    \ Error: expression expected, not `alias`\\n/tmp/tmp0r28ld2a.d(104): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmp0r28ld2a.d(104): Error: expression\
    \ expected, not `=`\\n/tmp/tmp0r28ld2a.d(104): Error: found `add` when expecting\
    \ `,`\\n/tmp/tmp0r28ld2a.d(104): Error: expression expected, not `;`\\n/tmp/tmp0r28ld2a.d(106):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmp0r28ld2a.d(106): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmp0r28ld2a.d(107): Error: found `;` when expecting\
    \ `,`\\n/tmp/tmp0r28ld2a.d(108): Error: found `;` when expecting `,`\\n/tmp/tmp0r28ld2a.d(109):\
    \ Error: found `;` when expecting `,`\\n/tmp/tmp0r28ld2a.d(110): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmp0r28ld2a.d(111): Error: expression expected,\
    \ not `}`\\n/tmp/tmp0r28ld2a.d(112): Error: found `void` when expecting `,`\\\
    n/tmp/tmp0r28ld2a.d(112): Error: found `{` when expecting `,`\\n/tmp/tmp0r28ld2a.d(112):\
    \ Error: expression expected, not `}`\\n/tmp/tmp0r28ld2a.d(112): Error: found\
    \ `End of File` when expecting `,`\\n/tmp/tmp0r28ld2a.d(112): Error: found `End\
    \ of File` when expecting `)`\\n/tmp/tmp0r28ld2a.d(112): Error: found `End of\
    \ File` when expecting `;` following `return` statement\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r28ld2a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgroapepl.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgroapepl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong sub(long x,\
    \ long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L,\
    \ 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n*/\nlong div(long x, long y) \n{\n\
    \    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>> mod(2L, 3L)\n \
    \   2L\n    >>> mod(5L, 7L)\n    5L\n*/\nlong mod(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nNegate a number x\n    >>> neg(2L)\n    -2L\n    >>> neg(5L)\n\
    \    -5L\n*/\nlong neg(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a\
    \ number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L)\n\
    \    1L\n    >>> sign(-5L)\n    -1L\n*/\nlong sign(long x) \n{\n    return x <\
    \ 0 ? -1 : x > 0 ? 1 : 0;\n}\n/*\nSquare root of a number x\n    >>> sqrt(2L)\n\
    \    1L\n    >>> sqrt(5L)\n    2L\n*/\nlong sqrt(long x) \n{\n    return cast(long)\
    \ sqrt(cast(real)\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp76mqdf9i.d(102): Error: expression expected, not `unittest`\\\
    n/tmp/tmp76mqdf9i.d(103): Error: found `{` when expecting `,`\\n/tmp/tmp76mqdf9i.d(104):\
    \ Error: expression expected, not `alias`\\n/tmp/tmp76mqdf9i.d(104): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmp76mqdf9i.d(104): Error: expression\
    \ expected, not `=`\\n/tmp/tmp76mqdf9i.d(104): Error: found `add` when expecting\
    \ `,`\\n/tmp/tmp76mqdf9i.d(104): Error: expression expected, not `;`\\n/tmp/tmp76mqdf9i.d(106):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmp76mqdf9i.d(106): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmp76mqdf9i.d(107): Error: found `;` when expecting\
    \ `,`\\n/tmp/tmp76mqdf9i.d(108): Error: found `;` when expecting `,`\\n/tmp/tmp76mqdf9i.d(109):\
    \ Error: found `;` when expecting `,`\\n/tmp/tmp76mqdf9i.d(110): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmp76mqdf9i.d(111): Error: expression expected,\
    \ not `}`\\n/tmp/tmp76mqdf9i.d(112): Error: found `void` when expecting `,`\\\
    n/tmp/tmp76mqdf9i.d(112): Error: found `{` when expecting `,`\\n/tmp/tmp76mqdf9i.d(112):\
    \ Error: expression expected, not `}`\\n/tmp/tmp76mqdf9i.d(112): Error: found\
    \ `End of File` when expecting `,`\\n/tmp/tmp76mqdf9i.d(112): Error: found `End\
    \ of File` when expecting `)`\\n/tmp/tmp76mqdf9i.d(112): Error: found `End of\
    \ File` when expecting `;` following `return` statement\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp76mqdf9i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwxv6croo.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxv6croo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(6L, 3L)\n    2L\n    >>> divide(35L, 7L)\n    5L\n \
    \   \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nSubtract\
    \ two numbers x and y\n    >>> subtract(6L, 3L)\n    3L\n    >>> subtract(35L,\
    \ 7L)\n    28L\n    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n\
    }\n/*\nFind the remainder of two numbers x and y\n    >>> remainder(6L, 3L)\n\
    \    0L\n    >>> remainder(35L, 7L)\n    0L\n    \n*/\nlong remainder(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nFind the absolute value of a number x\n\
    \    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n    \n*/\nlong abs(long x)\
    \ \n{\n    return x < 0 ? -x : x;\n}\n/*\nFind the maximum of two numbers x and\
    \ y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n    \n*/\nlong\
    \ max(long x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind the minimum\
    \ of two numbers x and y\n    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n \
    \   5L\n    \n*/\nlong min(long x, long y) \n{\n    return x < y ? x : y;\n}\n\
    /*\nFind the square root of a number x\n    >>> sqrt(4L)\n    2L\n   \nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8kuji_c.d(99): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo8kuji_c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7guysl3n.d(103): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7guysl3n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nSubtract two\
    \ numbers x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n\
    \    -2L\n    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n\
    /*\nModulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nPower two numbers x and y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nSquare root of a number x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2L\n    \n*/\nlong sqrt(long x) \n{\n    return sqrt(x);\n}\n/*\nSquare of\
    \ a number x\n    >>> square(2L)\n    4L\n    >>> square(5L)\n    25L\n    \n\
    */\nlong square(long x) \n{\n    return x * x;\n}\n/*\nCube of a number x\n  \
    \  >>> cube(2L)\n    8L\n    >>> cube(5L)\n    125L\n    \n*/\nlong cube(long\
    \ x) \n{\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qn93n9q.d(110): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qn93n9q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

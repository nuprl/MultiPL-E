name: HumanEval_113_odd_count
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nGiven an array of strings, where\
  \ each string consists of only digits, return an array.\n    Each element i of the\
  \ output should be \"the number of odd elements in the\n    string i of the input.\"\
  \ where all the i's should be replaced by the number\n    of odd digits in the i'th\
  \ string of the input.\n\n    >>> odd_count([\"1234567\"])\n    [\"the number of\
  \ odd elements 4n the str4ng 4 of the 4nput.\"]\n    >>> odd_count([\"3\", \"11111111\"\
  ])\n    [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
  \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n    \n*/\nstring[] odd_count(string[]\
  \ lst) \n"
tests: "unittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
  1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
  \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n\
  \ the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of\
  \ the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
  \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
  \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2\
  \ of the 2nput.\"]);\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

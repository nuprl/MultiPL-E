name: HumanEval_94_skjkasdkd
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphzxiewmh.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphzxiewmh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb5_sz_sg.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb5_sz_sg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlqhqmo7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlqhqmo7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp679s6uhj.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp679s6uhj.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp679s6uhj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max != 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n \
    \   }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n \
    \   assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp97_cxlv7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp97_cxlv7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph2ddtlt7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2ddtlt7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxu28ad0s.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxu28ad0s.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4621y5s7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4621y5s7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; largestPrime.to!string)\n    {\n        sum += i.to!long;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt4qnxl9c.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpt4qnxl9c.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpt4qnxl9c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzrxlh8x6.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzrxlh8x6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcbla_j3j.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbla_j3j.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - '0'.to!long;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc294f_h1.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpc294f_h1.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc294f_h1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9yt0q350.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9yt0q350.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long l; lst)\n    {\n        if(isPrime(l))\n        {\n\
    \            if(l > largestPrime)\n            {\n                largestPrime\
    \ = l;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1vd_sb2u.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vd_sb2u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjppla0a6.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjppla0a6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplh4mg4dn.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmplh4mg4dn.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmplh4mg4dn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            if(i > 1L)\n            {\n\
    \                foreach(j; 2L..i)\n                {\n                    if(i\
    \ % j == 0L)\n                    {\n                        break;\n        \
    \            }\n                    else if(j == i - 1L)\n                   \
    \ {\n                        foreach(k; 0L..i.stringof.length)\n             \
    \           {\n                            sum += i.stringof[k..k].to!long;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L,\
    \ 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeexnb1ym.d(49): Error: no property `to` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeexnb1ym.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5mggswmu.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5mggswmu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(i > max)\n        {\n   \
    \         max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(long i;\
    \ max.toString())\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptiewh_t_.d(33): Error: no property `toString` for type `long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptiewh_t_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdsn3dqns.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsn3dqns.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0a_95fkp.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a_95fkp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprl2vjzg2.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprl2vjzg2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n  \
    \          max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max >\
    \ 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpviqrfm9k.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmpviqrfm9k.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmpviqrfm9k.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0x462c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i) && i > max) \n   \
    \     {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmparwqnxve.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmparwqnxve.d(32):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmparwqnxve.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - '0'.to!long;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1gl8oamo.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp1gl8oamo.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1gl8oamo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpndxlb1ov.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpndxlb1ov.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp018zgy6a.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp018zgy6a.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq1y86_lj.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq1y86_lj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppvoi4ptp.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvoi4ptp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0)\n    {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5j1nmobj.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmp5j1nmobj.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmp5j1nmobj.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0x2c695554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp40w8yvpl.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp40w8yvpl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpve87diuv.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpve87diuv.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpve87diuv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            if(isPrime(i))\n           \
    \ {\n                foreach(j; i.to!string)\n                {\n            \
    \        sum += j.to!long;\n                }\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpewt380c5.d(37): Error: undefined identifier `isPrime`\\n/tmp/tmpewt380c5.d(39):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpewt380c5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            sum = 0L;\n            foreach(j;\
    \ i.to!string)\n            {\n                sum += j.to!long;\n           \
    \ }\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate =\
    \ skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L,\
    \ 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdkd8of9i.d(38): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdkd8of9i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo2j0ahu0.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpo2j0ahu0.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo2j0ahu0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ != 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpze24mr80.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpze24mr80.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcwcdb0o0.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcwcdb0o0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5lo_hrf1.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5lo_hrf1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime;\n}\nunittest\n{\n \
    \   alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvyxfor35.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxfor35.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > maxPrime && isPrime(elem))\n\
    \        {\n            maxPrime = elem;\n        }\n    }\n    long sum = 0L;\n\
    \    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph15qzy7w.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph15qzy7w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > max)\n            {\n                max = i;\n          \
    \  }\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzqc5c4l1.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzqc5c4l1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    return sumDigits(largest);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxz7okz0y.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpxz7okz0y.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpxz7okz0y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6yp_9hjd.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6yp_9hjd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxojwbfv8.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxojwbfv8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > maxPrime && isPrime(i))\n\
    \        {\n            maxPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph1b00zi_.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph1b00zi_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzeykawor.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzeykawor.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeoc3hcl7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeoc3hcl7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo7ojw9p_.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpo7ojw9p_.d(32):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo7ojw9p_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > max)\n            {\n                max = i;\n          \
    \  }\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpievj902o.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpievj902o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime !=\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqzp9x1nx.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqzp9x1nx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n        {\n        \
    \    max = e;\n        }\n    }\n    long sum = 0L;\n    while(max > 0)\n    {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2qd2y1rt.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmp2qd2y1rt.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmp2qd2y1rt.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0x78476554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime;\n}\nunittest\n{\n \
    \   alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe7p3tqo3.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe7p3tqo3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoe03k3c2.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoe03k3c2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(e; lst)\n    {\n        if(isPrime(e))\n        {\n     \
    \       if(e > max)\n            {\n                max = e;\n            }\n\
    \        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n\
    \    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7t1lrcmp.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t1lrcmp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpssi9s5f1.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpssi9s5f1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n   \
    \     largestPrime /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5t3_jzjj.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5t3_jzjj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3eyej0vk.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3eyej0vk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgyxex9io.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyxex9io.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5etjhgum.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5etjhgum.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(isPrime(num))\n        {\n \
    \           if(num > largestPrime)\n            {\n                largestPrime\
    \ = num;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpukmg1z32.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukmg1z32.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8fz5tkc3.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp8fz5tkc3.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8fz5tkc3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppz7_npth.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmppz7_npth.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppz7_npth.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxtmml19f.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtmml19f.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt_ayo9la.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_ayo9la.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long maxPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > maxPrime && isPrime(i))\n        {\n            maxPrime\
    \ = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; maxPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7zml8ojd.d(35): Error: undefined identifier `isPrime`\\n/tmp/tmp7zml8ojd.d(41):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp7zml8ojd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpln528iql.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpln528iql.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpln528iql.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3vzmto40.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3vzmto40.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5rqi80oc.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5rqi80oc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgvkovg_.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmppgvkovg_.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppgvkovg_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfrles8be.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpfrles8be.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfrles8be.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpou61rzox.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpou61rzox.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpou61rzox.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6y91jprf.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp6y91jprf.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6y91jprf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc7fkcoe1.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7fkcoe1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaqivf6c7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqivf6c7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprsuc_hnm.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmprsuc_hnm.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprsuc_hnm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n        {\n        \
    \    max = e;\n        }\n    }\n    long sum = 0L;\n    foreach(e; max.to!string)\n\
    \    {\n        sum += e.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpamiw3u2v.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpamiw3u2v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n   \
    \     largestPrime /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn44rhya6.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn44rhya6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3l4n7cm7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3l4n7cm7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max_prime\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max_prime && isPrime(elem))\n\
    \        {\n            max_prime = elem;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max_prime > 0L)\n    {\n        sum += max_prime % 10L;\n        max_prime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphpul890q.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphpul890q.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(largest > 0L)\n    {\n        sum += largest % 10L;\n        largest\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbq7_qrvu.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq7_qrvu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    foreach(i; lst)\n    {\n\
    \        if(i == max)\n        {\n            foreach(j; i.to!string)\n      \
    \      {\n                sum += j.to!long;\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_mwfu2no.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_mwfu2no.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            if(isPrime(i))\n           \
    \ {\n                foreach(j; i.to!string)\n                {\n            \
    \        sum += j.to!long;\n                }\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaci0ux8x.d(37): Error: undefined identifier `isPrime`\\n/tmp/tmpaci0ux8x.d(39):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpaci0ux8x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb11hgmb9.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb11hgmb9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpod7dprw8.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpod7dprw8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpizdf9u87.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizdf9u87.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long prime = 0L;\n    foreach(i; lst)\n \
    \   {\n        if(i > prime && isPrime(i))\n        {\n            prime = i;\n\
    \        }\n    }\n    long sum = 0L;\n    foreach(i; prime.to!string)\n    {\n\
    \        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6qnocgu7.d(35): Error: undefined identifier `isPrime`\\n/tmp/tmp6qnocgu7.d(41):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp6qnocgu7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa5id3lxq.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpa5id3lxq.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpa5id3lxq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    return sumDigits(largest);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz93b37b3.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpz93b37b3.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpz93b37b3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfhmh8ma8.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpfhmh8ma8.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfhmh8ma8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmf08rl2e.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmf08rl2e.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            sum = sum + i;\n        }\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpknggg0t9.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42851d]\\n??:? void tmpknggg0t9.__unittest_L42_C1()\
    \ [0x427ec1]\\n??:? void tmpknggg0t9.__modtest() [0x4282a0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c52b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430551]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a00]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b395]\\n??:? runModuleUnitTests [0x42c301]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42896c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288f3]\\n??:? _d_run_main [0x42885e]\\n??:? main [0x4282b3]\\\
    n??:? __libc_start_main [0xde98c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   foreach(c; to!string(maxPrime))\n    {\n        sum += c.to!long - '0'.to!long;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf_gx9aee.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpf_gx9aee.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\n/tmp/tmpf_gx9aee.d(33):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_gx9aee.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpknquv3by.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpknquv3by.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpknquv3by.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(l; lst)\n    {\n        if(l > max)\n        {\n        \
    \    max = l;\n        }\n    }\n    long sum = 0L;\n    foreach(l; lst)\n   \
    \ {\n        if(l == max)\n        {\n            foreach(c; to!string(l))\n \
    \           {\n                sum += to!long(c);\n            }\n        }\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsxmi4umr.d(37): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpsxmi4umr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr0do_x54.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr0do_x54.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmtmpnfez.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmtmpnfez.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpib_4a324.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpib_4a324.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaompjcnm.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaompjcnm.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i) && i > max) \n   \
    \     {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdw6mvnla.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpdw6mvnla.d(32):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdw6mvnla.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7pgdzc7o.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7pgdzc7o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_ob5kce.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_ob5kce.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(el; lst)\n    {\n        if(el > max)\n        {\n      \
    \      max = el;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_opr6zua.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmp_opr6zua.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmp_opr6zua.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0x9cf69554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(largest > 0L)\n    {\n        sum += largest % 10L;\n        largest\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpatlcr1xb.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpatlcr1xb.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_enma28d.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_enma28d.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqhkruabr.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhkruabr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(n; lst)\n    {\n        if(n > max)\n        {\n        \
    \    max = n;\n        }\n    }\n    long sum = 0L;\n    foreach(n; max.to!string)\n\
    \    {\n        sum += n.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt39juadk.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt39juadk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long[] primes\
    \ = new long[lst.length];\n    long[] nonPrimes = new long[lst.length];\n    long[]\
    \ primeDigits = new long[lst.length];\n    long[] nonPrimeDigits = new long[lst.length];\n\
    \    long[] primeDigitsSum = new long[lst.length];\n    long[] nonPrimeDigitsSum\
    \ = new long[lst.length];\n    long[] primeDigitsSumSorted = new long[lst.length];\n\
    \    long[] nonPrimeDigitsSumSorted = new long[lst.length];\n    long[] primeDigitsSumSortedReversed\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversed = new long[lst.length];\n\
    \    long[] primeDigitsSumSortedReversedUnique = new long[lst.length];\n    long[]\
    \ nonPrimeDigitsSumSortedReversedUnique = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUnique\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversedUnique\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueSortedReversedUniqueSorted\
    \ = new long[lst.length];\n    long[] primeDigitsSumSortedReversedUniqueSortedReversedUniqueSortedReversed\
    \ = new long[lst.length];\n    long[] nonPrimeDigitsSumSortedReversedUniqueS\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyyatsqxr.d(46): Error: semicolon expected, not `unittest`\\n/tmp/tmpyyatsqxr.d(46):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyyatsqxr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpf5bwkj.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpf5bwkj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp588adata.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp588adata.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            sum = sum + i;\n        }\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt4y3bbqe.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42851d]\\n??:? void tmpt4y3bbqe.__unittest_L42_C1()\
    \ [0x427ec1]\\n??:? void tmpt4y3bbqe.__modtest() [0x4282a0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c52b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430551]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a00]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b395]\\n??:? runModuleUnitTests [0x42c301]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42896c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288f3]\\n??:? _d_run_main [0x42885e]\\n??:? main [0x4282b3]\\\
    n??:? __libc_start_main [0xd35dd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwvvz44gw.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpwvvz44gw.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpwvvz44gw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp61wvs6pp.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp61wvs6pp.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp61wvs6pp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ol_0a68.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6ol_0a68.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0i_e0zec.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0i_e0zec.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(largest > 0L)\n    {\n        sum += largest % 10L;\n        largest\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpali0jr3i.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpali0jr3i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; largestPrime.to!string)\n    {\n        sum += i.to!long;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnynjo3zj.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpnynjo3zj.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnynjo3zj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4oh1tgys.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4oh1tgys.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0)\n    {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9fcquhld.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmp9fcquhld.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmp9fcquhld.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0x13c7c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjw7h7_me.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpjw7h7_me.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjw7h7_me.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnubzbrte.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpnubzbrte.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpnubzbrte.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(e; lst)\n    {\n        if(isPrime(e))\n        {\n     \
    \       if(e > max)\n            {\n                max = e;\n            }\n\
    \        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n\
    \    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0xl90m0.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0xl90m0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6q2nmwpq.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp6q2nmwpq.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp6q2nmwpq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(num > largestPrime && isPrime(num))\n\
    \        {\n            largestPrime = num;\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmioocbhx.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpmioocbhx.d(32):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmioocbhx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; largestPrime.to!string)\n    {\n        sum += i.to!long;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi017x7k6.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpi017x7k6.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpi017x7k6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphi43mxq5.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphi43mxq5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp211tssnh.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp211tssnh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp916sl1w4.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp916sl1w4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7309sxen.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7309sxen.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_yu78hfy.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yu78hfy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4m4q6xqq.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp4m4q6xqq.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp4m4q6xqq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj0s17vyq.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj0s17vyq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6trwth3g.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp6trwth3g.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6trwth3g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmp6flqg.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmp6flqg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphl31inpw.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphl31inpw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqos5ydab.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqos5ydab.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_lbyqu8.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmps_lbyqu8.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmps_lbyqu8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmpc9cx8x.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmpc9cx8x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn42ao9qg.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpn42ao9qg.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn42ao9qg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(isPrime(num))\n        {\n \
    \           if(num > largestPrime)\n            {\n                largestPrime\
    \ = num;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqyrchv1n.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpqyrchv1n.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpqyrchv1n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiqlcsjac.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiqlcsjac.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmhv1mejw.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpmhv1mejw.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpmhv1mejw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy759to01.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy759to01.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    foreach(i; largestPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplm2wvah9.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmplm2wvah9.d(36):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmplm2wvah9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj5sbyu6q.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5sbyu6q.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc9up9hvq.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc9up9hvq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_k00wevw.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_k00wevw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long num; lst)\n    {\n        if(num > largestPrime && isPrime(num))\n\
    \        {\n            largestPrime = num;\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp22alwxq3.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmp22alwxq3.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp22alwxq3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ != 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppadutxqd.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppadutxqd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(item; lst)\n    {\n        if(item > largestPrime && isPrime(item))\n\
    \        {\n            largestPrime = item;\n        }\n    }\n    long sum =\
    \ 0L;\n    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n\
    \        largestPrime /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptufcbgm4.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptufcbgm4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6d7jnd91.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6d7jnd91.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst) \n    {\n        if(i > max) \n        {\n      \
    \      max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L) \n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu_ybo7mh.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmpu_ybo7mh.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmpu_ybo7mh.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0xed9d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - '0'.to!long;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4mi9zzh.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpw4mi9zzh.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpw4mi9zzh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphyh7nm3u.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmphyh7nm3u.d(29):\
    \ Error: undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphyh7nm3u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq3lq5p_.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmphq3lq5p_.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmphq3lq5p_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3__zx2hp.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3__zx2hp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp9ui186v.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9ui186v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpachsr8fa.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpachsr8fa.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpachsr8fa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsu6lqkr3.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu6lqkr3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n   \
    \ {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpghv63xtl.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmpghv63xtl.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmpghv63xtl.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0xde384554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpls6bnnea.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpls6bnnea.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpls6bnnea.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgjdi_vrg.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjdi_vrg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmperv4193v.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmperv4193v.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmperv4193v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long[] primes = primesUpTo(max);\n    long\
    \ maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i in primes)\n      \
    \  {\n            if(i > maxPrime)\n            {\n                maxPrime =\
    \ i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n   \
    \ assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa3fed656.d(32): Error: undefined identifier `primesUpTo`\\n/tmp/tmpa3fed656.d(36):\
    \ Error: incompatible types for `(i) in (primes)`: `long` and `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa3fed656.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphyoivj_p.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphyoivj_p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime >\
    \ 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n\
    \    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbjwo2ebo.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbjwo2ebo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiswqodhd.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpiswqodhd.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpiswqodhd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgpo3tew2.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgpo3tew2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ymqd5fb.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ymqd5fb.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzv86c4bd.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpzv86c4bd.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpzv86c4bd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppq97a5qj.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppq97a5qj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyfos73vh.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyfos73vh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    long[] primes = primesUpTo(max);\n\
    \    foreach(i; primes)\n    {\n        if(i > max)\n        {\n            break;\n\
    \        }\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long - 48L;\n            }\n     \
    \   }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qbgv23l.d(33): Error: undefined identifier `primesUpTo`\\n/tmp/tmp1qbgv23l.d(42):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp1qbgv23l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplte6zb1q.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmplte6zb1q.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplte6zb1q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkik1levr.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpkik1levr.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpkik1levr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            if(isPrime(i))\n           \
    \ {\n                while(i > 0)\n                {\n                    sum\
    \ += i % 10;\n                    i /= 10;\n                }\n            }\n\
    \        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq2s1zpl5.d(37): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq2s1zpl5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbf7hz8x3.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbf7hz8x3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime.digits.sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx9r4c3k6.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpx9r4c3k6.d(35):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpx9r4c3k6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpciuwjjpe.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpciuwjjpe.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime && isPrime(i))\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(largestPrime > 0L)\n    {\n        sum += largestPrime % 10L;\n   \
    \     largestPrime /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0hefzg1h.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hefzg1h.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largest\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n \
    \       {\n            largest = i;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(largest > 0L)\n    {\n        sum += largest % 10L;\n        largest\
    \ /= 10L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\
    \n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L,\
    \ 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L,\
    \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) ==\
    \ 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L,\
    \ 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L,\
    \ 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9u1r00h.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv9u1r00h.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long[] primes = new long[max];\n    foreach(i;\
    \ lst)\n    {\n        if(primes[i] == 0L)\n        {\n            primes[i] =\
    \ 1L;\n            for(long j = i * 2; j < max; j += i)\n            {\n     \
    \           primes[j] = -1L;\n            }\n        }\n    }\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(primes[i] == 1L)\n        {\n\
    \            if(i > maxPrime)\n            {\n                maxPrime = i;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n\
    \    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptiusz3gz.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptiusz3gz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0)\n    {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwk8kly4l.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284f5]\\n??:? void tmpwk8kly4l.__unittest_L40_C1()\
    \ [0x427e95]\\n??:? void tmpwk8kly4l.__modtest() [0x428274]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c503]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b396]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430529]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304b5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b36d]\\n??:? runModuleUnitTests [0x42c2d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428944]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288cb]\\n??:? _d_run_main [0x428836]\\n??:? main [0x428287]\\\
    n??:? __libc_start_main [0xceea8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime);\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc1eu84zn.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpc1eu84zn.d(35):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc1eu84zn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf5534zxk.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf5534zxk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime;\n}\nunittest\n{\n \
    \   alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9rq0jdyr.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rq0jdyr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(item; lst)\n    {\n        if(isPrime(item) && item > max)\n\
    \        {\n            max = item;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpclnmcya7.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclnmcya7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return largestPrime;\n}\nunittest\n\
    {\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptbo8qom2.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptbo8qom2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpswz4c1sd.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpswz4c1sd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwxzx86j8.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxzx86j8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long maxPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > maxPrime)\n\
    \        {\n            maxPrime = i;\n        }\n    }\n    return maxPrime.digits.sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplpz7t153.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmplpz7t153.d(32):\
    \ Error: no property `digits` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplpz7t153.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n  \
    \  assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L,\
    \ 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L,\
    \ 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n\
    \    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L,\
    \ 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L,\
    \ 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8dfhci8.d(37): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8dfhci8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyzd0si8v.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzd0si8v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - 48L;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpquueiw0g.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpquueiw0g.d(33):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpquueiw0g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n}\n\
    unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L,\
    \ 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
    \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L,\
    \ 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpevnpe5ai.d(27): Error: undefined identifier `isPrime`\\n/tmp/tmpevnpe5ai.d(32):\
    \ Error: undefined identifier `sumDigits`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpevnpe5ai.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgyxjbnje.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyxjbnje.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            if(isPrime(i))\n           \
    \ {\n                foreach(j; i.to!string)\n                {\n            \
    \        sum += j.to!long;\n                }\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoyt3yuzo.d(37): Error: undefined identifier `isPrime`\\n/tmp/tmpoyt3yuzo.d(39):\
    \ Error: no property `to` for type `long`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpoyt3yuzo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
    \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L,\
    \ 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L,\
    \ 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L,\
    \ 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\
    \ == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L,\
    \ 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L])\
    \ == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4lai3pf_.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lai3pf_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > largestPrime)\n            {\n                largestPrime = i;\n\
    \            }\n        }\n    }\n    return largestPrime;\n}\nunittest\n{\n \
    \   alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L,\
    \ 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\
    \ == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L,\
    \ 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L,\
    \ 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n\
    \    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L,\
    \ 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
    \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
    \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
    \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66hiejak.d(27): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66hiejak.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of\
    \ integers.\n    You need to find the largest prime value and return the sum of\
    \ its digits.\n\n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L,\
    \ 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n\
    \    >>> skjkasdkd([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L,\
    \ 4L, 2L, 5L, 1L])\n    25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L,\
    \ 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>>\
    \ skjkasdkd([0L, 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L,\
    \ 2L, 1L, 7L])\n    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n{\n    long max\
    \ = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n        {\n        \
    \    max = e;\n        }\n    }\n    long sum = 0L;\n    foreach(e; max.to!string)\n\
    \    {\n        sum += e.to!long;\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L,\
    \ 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n\
    \    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L,\
    \ 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L,\
    \ 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L,\
    \ 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L,\
    \ 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L])\
    \ == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L,\
    \ 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ygpu68f.d(33): Error: no property `to` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ygpu68f.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

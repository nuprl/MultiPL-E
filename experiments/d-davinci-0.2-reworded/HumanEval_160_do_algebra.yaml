name: HumanEval_160_do_algebra
language: d
prompt: "import std.math;\n/*\n\n    Given two arrays operator, and operand. The first\
  \ array has basic algebra operations, and \n    the second array is an array of\
  \ integers. Use the two given arrays to build the algebric \n    expression and\
  \ return the evaluation of this expression.\n\n    The basic algebra operations:\n\
  \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
  \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
  \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
  \ = 9\n\n    Note:\n        The length of operator array is equal to the length\
  \ of operand array minus one.\n        Operand is an array of of non-negative integers.\n\
  \        Operator array has at least one operator, and operand array has at least\
  \ two operands.\n\n    \n*/\nlong do_algebra(string[] operator, long[] operand)\
  \ \n"
tests: "unittest\n{\n    alias candidate = do_algebra;\n\n    assert(candidate([\"\
  **\", \"*\", \"+\"], [2L, 3L, 4L, 5L]) == 37L);\n    assert(candidate([\"+\", \"\
  *\", \"-\"], [2L, 3L, 4L, 5L]) == 9L);\n    assert(candidate([\"//\", \"*\"], [7L,\
  \ 3L, 4L]) == 8L);\n}\nvoid main(){}"
completions: ["{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = (long)pow(result, operand[i+1]);\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n        {\n            result\
    \ += operand[i+1];\n        }\n        else if (operator[i] == \"-\")\n      \
    \  {\n            result -= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"*\")\n        {\n            result *= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"//\")\n        {\n            result /= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"**\")\n        {\n            result\
    \ = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = (long)pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n            result += operand[i+1];\n\
    \        else if (operator[i] == \"-\")\n            result -= operand[i+1];\n\
    \        else if (operator[i] == \"*\")\n            result *= operand[i+1];\n\
    \        else if (operator[i] == \"//\")\n            result /= operand[i+1];\n\
    \        else if (operator[i] == \"**\")\n            result = pow(result, operand[i+1]);\n\
    \    }\n    return result;\n}", "{\n    long result = operand[0];\n    for (int\
    \ i = 0; i < operator.length; i++)\n    {\n        switch (operator[i])\n    \
    \    {\n            case \"+\":\n                result += operand[i + 1];\n \
    \               break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n        {\n            result\
    \ += operand[i+1];\n        }\n        else if (operator[i] == \"-\")\n      \
    \  {\n            result -= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"*\")\n        {\n            result *= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"//\")\n        {\n            result /= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"**\")\n        {\n            result\
    \ = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n        {\n            result\
    \ += operand[i+1];\n        }\n        else if (operator[i] == \"-\")\n      \
    \  {\n            result -= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"*\")\n        {\n            result *= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"//\")\n        {\n            result /= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"**\")\n        {\n            result\
    \ = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n        {\n\
    \            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n        {\n            result\
    \ += operand[i+1];\n        }\n        else if (operator[i] == \"-\")\n      \
    \  {\n            result -= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"*\")\n        {\n            result *= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"//\")\n        {\n            result /= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"**\")\n        {\n            result\
    \ = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = (long)pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        if (operator[i] == \"+\")\n        {\n            result\
    \ += operand[i+1];\n        }\n        else if (operator[i] == \"-\")\n      \
    \  {\n            result -= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"*\")\n        {\n            result *= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"//\")\n        {\n            result /= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"**\")\n        {\n            result\
    \ = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = (long)pow(result, operand[i + 1]);\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    long result = operand[0];\n    for (int\
    \ i = 0; i < operator.length; i++)\n    {\n        switch (operator[i])\n    \
    \    {\n            case \"+\":\n                result += operand[i + 1];\n \
    \               break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        if (operator[i] == \"+\")\n      \
    \  {\n            result += operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"-\")\n        {\n            result -= operand[i+1];\n        }\n     \
    \   else if (operator[i] == \"*\")\n        {\n            result *= operand[i+1];\n\
    \        }\n        else if (operator[i] == \"//\")\n        {\n            result\
    \ /= operand[i+1];\n        }\n        else if (operator[i] == \"**\")\n     \
    \   {\n            result = pow(result, operand[i+1]);\n        }\n    }\n   \
    \ return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0; i\
    \ < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n  \
    \          case \"+\":\n                result += operand[i + 1];\n          \
    \      break;\n            case \"-\":\n                result -= operand[i +\
    \ 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = (long)pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        if\
    \ (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n   \
    \     }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = pow(result, operand[i + 1]);\n           \
    \     break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n        switch\
    \ (operator[i])\n        {\n            case \"+\":\n                result +=\
    \ operand[i + 1];\n                break;\n            case \"-\":\n         \
    \       result -= operand[i + 1];\n                break;\n            case \"\
    *\":\n                result *= operand[i + 1];\n                break;\n    \
    \        case \"//\":\n                result /= operand[i + 1];\n           \
    \     break;\n            case \"**\":\n                result = pow(result, operand[i\
    \ + 1]);\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = operand[0];\n    for (int i = 0; i < operator.length; i++)\n\
    \    {\n        switch (operator[i])\n        {\n            case \"+\":\n   \
    \             result += operand[i + 1];\n                break;\n            case\
    \ \"-\":\n                result -= operand[i + 1];\n                break;\n\
    \            case \"*\":\n                result *= operand[i + 1];\n        \
    \        break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = pow(result, operand[i + 1]);\n                break;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = operand[0];\n    for (int i = 0;\
    \ i < operator.length; i++)\n    {\n        switch (operator[i])\n        {\n\
    \            case \"+\":\n                result += operand[i + 1];\n        \
    \        break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  if (operator[i] == \"+\")\n        {\n            result += operand[i+1];\n\
    \        }\n        else if (operator[i] == \"-\")\n        {\n            result\
    \ -= operand[i+1];\n        }\n        else if (operator[i] == \"*\")\n      \
    \  {\n            result *= operand[i+1];\n        }\n        else if (operator[i]\
    \ == \"//\")\n        {\n            result /= operand[i+1];\n        }\n    \
    \    else if (operator[i] == \"**\")\n        {\n            result = pow(result,\
    \ operand[i+1]);\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = operand[0];\n    for (int i = 0; i < operator.length; i++)\n    {\n      \
    \  switch (operator[i])\n        {\n            case \"+\":\n                result\
    \ += operand[i + 1];\n                break;\n            case \"-\":\n      \
    \          result -= operand[i + 1];\n                break;\n            case\
    \ \"*\":\n                result *= operand[i + 1];\n                break;\n\
    \            case \"//\":\n                result /= operand[i + 1];\n       \
    \         break;\n            case \"**\":\n                result = pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = operand[0];\n    for (int i = 0; i < operator.length;\
    \ i++)\n    {\n        switch (operator[i])\n        {\n            case \"+\"\
    :\n                result += operand[i + 1];\n                break;\n       \
    \     case \"-\":\n                result -= operand[i + 1];\n               \
    \ break;\n            case \"*\":\n                result *= operand[i + 1];\n\
    \                break;\n            case \"//\":\n                result /= operand[i\
    \ + 1];\n                break;\n            case \"**\":\n                result\
    \ = (long)pow(result, operand[i + 1]);\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    long result = operand[0];\n    for (int\
    \ i = 0; i < operator.length; i++)\n    {\n        switch (operator[i])\n    \
    \    {\n            case \"+\":\n                result += operand[i + 1];\n \
    \               break;\n            case \"-\":\n                result -= operand[i\
    \ + 1];\n                break;\n            case \"*\":\n                result\
    \ *= operand[i + 1];\n                break;\n            case \"//\":\n     \
    \           result /= operand[i + 1];\n                break;\n            case\
    \ \"**\":\n                result = (long)pow(result, operand[i + 1]);\n     \
    \           break;\n        }\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_91_is_bored
language: d
results:
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2420sd53.d(18): Error: undefined identifier `split`\\n/tmp/tmp2420sd53.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2420sd53.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps6b5rndi.d(18): Error: undefined identifier `split`\\n/tmp/tmps6b5rndi.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps6b5rndi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4d0u8lrg.d(18): Error: undefined identifier `split`\\n/tmp/tmp4d0u8lrg.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4d0u8lrg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, '.');\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, ' ');\n      \
    \      if(words[0] == \"I\")\n            {\n                boredoms++;\n   \
    \         }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzt12mq_8.d(18): Error: undefined identifier `split`\\n/tmp/tmpzt12mq_8.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzt12mq_8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7q4jyppw.d(18): Error: undefined identifier `split`\\n/tmp/tmp7q4jyppw.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7q4jyppw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaylniand.d(18): Error: undefined identifier `split`\\n/tmp/tmpaylniand.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaylniand.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkc_vysjm.d(18): Error: undefined identifier `split`\\n/tmp/tmpkc_vysjm.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkc_vysjm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgehveb9b.d(18): Error: undefined identifier `split`\\n/tmp/tmpgehveb9b.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgehveb9b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp49me7rj4.d(18): Error: undefined identifier `split`\\n/tmp/tmp49me7rj4.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp49me7rj4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy9dju324.d(18): Error: undefined identifier `split`\\n/tmp/tmpy9dju324.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpy9dju324.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphlqtkxds.d(18): Error: undefined identifier `split`\\n/tmp/tmphlqtkxds.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphlqtkxds.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmi91a38i.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmi91a38i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \"!.\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph3kbax3m.d(18): Error: undefined identifier `split`\\n/tmp/tmph3kbax3m.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmph3kbax3m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvtf5jjcr.d(18): Error: undefined identifier `split`\\n/tmp/tmpvtf5jjcr.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvtf5jjcr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuy4921pn.d(18): Error: undefined identifier `split`\\n/tmp/tmpuy4921pn.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuy4921pn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe8hci13u.d(18): Error: undefined identifier `split`\\n/tmp/tmpe8hci13u.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpe8hci13u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp4dlfumn.d(18): Error: undefined identifier `split`\\n/tmp/tmpp4dlfumn.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp4dlfumn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcse6k82j.d(18): Error: undefined identifier `split`\\n/tmp/tmpcse6k82j.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpcse6k82j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps02gf_ov.d(18): Error: undefined identifier `split`\\n/tmp/tmps02gf_ov.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps02gf_ov.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1t_hhfhy.d(18): Error: undefined identifier `split`\\n/tmp/tmp1t_hhfhy.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1t_hhfhy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ie6ye4a.d(18): Error: undefined identifier `split`\\n/tmp/tmp6ie6ye4a.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6ie6ye4a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            i++;\n            while (i < len\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!')\n            {\n             \
    \   i++;\n            }\n        }\n        else\n        {\n            i++;\n\
    \        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate =\
    \ is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7bizdw7t.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmp7bizdw7t.__unittest_L38_C1()\
    \ [0x427b5f]\\n??:? void tmp7bizdw7t.__modtest() [0x427c1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc37]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aaca]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc5d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43010c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaa1]\\n??:? runModuleUnitTests [0x42ba0d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428360]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282e7]\\n??:? _d_run_main [0x428252]\\n??:? main [0x427c2f]\\\
    n??:? __libc_start_main [0x7fb19554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvj33yyqo.d(18): Error: undefined identifier `split`\\n/tmp/tmpvj33yyqo.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvj33yyqo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2vy7jpid.d(18): Error: undefined identifier `split`\\n/tmp/tmp2vy7jpid.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2vy7jpid.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsutllvel.d(18): Error: undefined identifier `split`\\n/tmp/tmpsutllvel.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsutllvel.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvb_pu39h.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvb_pu39h.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8qm9r0dz.d(18): Error: undefined identifier `split`\\n/tmp/tmp8qm9r0dz.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8qm9r0dz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp61c1wt5_.d(18): Error: undefined identifier `split`\\n/tmp/tmp61c1wt5_.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp61c1wt5_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    while\
    \ (i < S.length)\n    {\n        if (S[i] == 'I')\n        {\n            boredoms++;\n\
    \        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplo586fbt.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ded]\\n??:? void tmplo586fbt.__unittest_L29_C1()\
    \ [0x427aaf]\\n??:? void tmplo586fbt.__modtest() [0x427b6c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb87]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbad]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43005c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb39]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f1]\\n??:? runModuleUnitTests [0x42b95d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428237]\\n??:? _d_run_main [0x4281a2]\\n??:? main [0x427b7f]\\\
    n??:? __libc_start_main [0xc413b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, '.');\n    foreach(sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, ' ');\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8ufni7ag.d(18): Error: undefined identifier `split`\\n/tmp/tmp8ufni7ag.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8ufni7ag.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk89vnmo1.d(18): Error: undefined identifier `split`\\n/tmp/tmpk89vnmo1.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpk89vnmo1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvl4uht8s.d(18): Error: undefined identifier `split`\\n/tmp/tmpvl4uht8s.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvl4uht8s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy02gq23a.d(18): Error: undefined identifier `split`\\n/tmp/tmpy02gq23a.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpy02gq23a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ywpedja.d(18): Error: undefined identifier `split`\\n/tmp/tmp2ywpedja.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2ywpedja.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjzr33j0d.d(18): Error: undefined identifier `split`\\n/tmp/tmpjzr33j0d.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjzr33j0d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8d5s_0of.d(18): Error: undefined identifier `split`\\n/tmp/tmp8d5s_0of.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8d5s_0of.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgrdkz5hj.d(18): Error: undefined identifier `split`\\n/tmp/tmpgrdkz5hj.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgrdkz5hj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0] == 'I')\n            boredoms++;\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8jzlvk0w.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8jzlvk0w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0pz74658.d(18): Error: undefined identifier `split`\\n/tmp/tmp0pz74658.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0pz74658.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5tgh9714.d(18): Error: undefined identifier `split`\\n/tmp/tmp5tgh9714.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5tgh9714.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    auto words = split(S, \"\
    \ \");\n    foreach(word; words)\n    {\n        if(word.startsWith(\"I\"))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj58tto85.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj58tto85.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbau09ej_.d(18): Error: undefined identifier `split`\\n/tmp/tmpbau09ej_.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbau09ej_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppdkri91s.d(18): Error: undefined identifier `split`\\n/tmp/tmppdkri91s.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppdkri91s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjy2l6thv.d(18): Error: undefined identifier `split`\\n/tmp/tmpjy2l6thv.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjy2l6thv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfeley3k8.d(18): Error: undefined identifier `split`\\n/tmp/tmpfeley3k8.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfeley3k8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc_8924kg.d(18): Error: undefined identifier `split`\\n/tmp/tmpc_8924kg.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpc_8924kg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2zeydpns.d(18): Error: undefined identifier `split`\\n/tmp/tmp2zeydpns.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2zeydpns.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpob0jxst5.d(18): Error: undefined identifier `split`\\n/tmp/tmpob0jxst5.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpob0jxst5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5y6jhee3.d(18): Error: undefined identifier `split`\\n/tmp/tmp5y6jhee3.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5y6jhee3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" \");\n    foreach(word; words)\n    {\n        if(word.startsWith(\"I\"))\n\
    \            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaw6vlmff.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaw6vlmff.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66sjp2m2.d(18): Error: undefined identifier `split`\\n/tmp/tmp66sjp2m2.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp66sjp2m2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy887udtt.d(18): Error: undefined identifier `split`\\n/tmp/tmpy887udtt.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpy887udtt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzt28oy8j.d(18): Error: undefined identifier `split`\\n/tmp/tmpzt28oy8j.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzt28oy8j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprq5roc0s.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprq5roc0s.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj40op0ne.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj40op0ne.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphlfqb7hw.d(18): Error: undefined identifier `split`\\n/tmp/tmphlfqb7hw.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphlfqb7hw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \".\");\n    foreach(string word; words)\n    {\n        if(word.length > 0)\n\
    \        {\n            if(word[0] == 'I')\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_425_m55.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_425_m55.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(startsWith(sentence,\
    \ \"I\"))\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdz25v7xo.d(18): Error: undefined identifier `split`\\n/tmp/tmpdz25v7xo.d(21):\
    \ Error: undefined identifier `startsWith`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpdz25v7xo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwtp5ryyz.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwtp5ryyz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfv7ipkmr.d(18): Error: undefined identifier `split`\\n/tmp/tmpfv7ipkmr.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfv7ipkmr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2jiwhibs.d(18): Error: undefined identifier `split`\\n/tmp/tmp2jiwhibs.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2jiwhibs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn7ncpj8p.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn7ncpj8p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgf98sskp.d(18): Error: undefined identifier `split`\\n/tmp/tmpgf98sskp.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgf98sskp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc31kt4_4.d(18): Error: undefined identifier `split`\\n/tmp/tmpc31kt4_4.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpc31kt4_4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphk5aep7c.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphk5aep7c.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7jhet2w2.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp7jhet2w2.__unittest_L34_C1()\
    \ [0x427b57]\\n??:? void tmp7jhet2w2.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aac2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa99]\\n??:? runModuleUnitTests [0x42ba05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428358]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282df]\\n??:? _d_run_main [0x42824a]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x72275554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfymt_jzs.d(18): Error: undefined identifier `split`\\n/tmp/tmpfymt_jzs.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfymt_jzs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long len = S.length;\n    while (i < len)\n    {\n        if (S[i]\
    \ == 'I')\n        {\n            j = i;\n            while (j < len && S[j] !=\
    \ '.' && S[j] != '?' && S[j] != '!')\n            {\n                j++;\n  \
    \          }\n            if (j == len)\n            {\n                boredoms++;\n\
    \                break;\n            }\n            else\n            {\n    \
    \            boredoms++;\n                i = j + 1;\n            }\n        }\n\
    \        else\n        {\n            i++;\n        }\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp88kvvgll.d(53): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmp88kvvgll.__unittest_L48_C1()\
    \ [0x427b83]\\n??:? void tmp88kvvgll.__modtest() [0x427c40]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc57]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aaea]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc7d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43012c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc09]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aac1]\\n??:? runModuleUnitTests [0x42ba2d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428380]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428307]\\n??:? _d_run_main [0x428272]\\n??:? main [0x427c53]\\\
    n??:? __libc_start_main [0x1f70c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \".\");\n    foreach(string word; words)\n    {\n        if(word[0] == 'I')\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_rko1kty.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rko1kty.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbm5ist4h.d(18): Error: undefined identifier `split`\\n/tmp/tmpbm5ist4h.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbm5ist4h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2qyi9bk8.d(18): Error: undefined identifier `split`\\n/tmp/tmp2qyi9bk8.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2qyi9bk8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvnsmkkqo.d(18): Error: undefined identifier `split`\\n/tmp/tmpvnsmkkqo.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvnsmkkqo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n            {\n                boredoms++;\n     \
    \       }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf_ej8nc9.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_ej8nc9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpux21hm9j.d(18): Error: undefined identifier `split`\\n/tmp/tmpux21hm9j.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpux21hm9j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ox9tudz.d(18): Error: undefined identifier `split`\\n/tmp/tmp6ox9tudz.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6ox9tudz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpshzbnc8h.d(18): Error: undefined identifier `split`\\n/tmp/tmpshzbnc8h.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpshzbnc8h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqk3mjxgv.d(18): Error: undefined identifier `split`\\n/tmp/tmpqk3mjxgv.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqk3mjxgv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2uspitt.d(18): Error: undefined identifier `split`\\n/tmp/tmpu2uspitt.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpu2uspitt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0pknswhe.d(18): Error: undefined identifier `split`\\n/tmp/tmp0pknswhe.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0pknswhe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgx_ipvr4.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgx_ipvr4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnjm4xynh.d(18): Error: undefined identifier `split`\\n/tmp/tmpnjm4xynh.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnjm4xynh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpebei_6fl.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpebei_6fl.__unittest_L34_C1()\
    \ [0x427b57]\\n??:? void tmpebei_6fl.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aac2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa99]\\n??:? runModuleUnitTests [0x42ba05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428358]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282df]\\n??:? _d_run_main [0x42824a]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x5ed66554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnae36kl.d(18): Error: undefined identifier `split`\\n/tmp/tmpfnae36kl.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfnae36kl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdnzz7zzm.d(18): Error: undefined identifier `split`\\n/tmp/tmpdnzz7zzm.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdnzz7zzm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa84xej6e.d(18): Error: undefined identifier `split`\\n/tmp/tmpa84xej6e.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpa84xej6e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf1flt2gj.d(18): Error: undefined identifier `split`\\n/tmp/tmpf1flt2gj.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpf1flt2gj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence[0]\
    \ == 'I')\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxf8bd7pf.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxf8bd7pf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvc76h_i7.d(18): Error: undefined identifier `split`\\n/tmp/tmpvc76h_i7.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvc76h_i7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeeh4mtzq.d(18): Error: undefined identifier `split`\\n/tmp/tmpeeh4mtzq.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpeeh4mtzq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_7kr8f_1.d(18): Error: undefined identifier `split`\\n/tmp/tmp_7kr8f_1.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_7kr8f_1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsgodhd_q.d(18): Error: undefined identifier `split`\\n/tmp/tmpsgodhd_q.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsgodhd_q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_gj142eu.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gj142eu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1exsh1x_.d(18): Error: undefined identifier `split`\\n/tmp/tmp1exsh1x_.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1exsh1x_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz7ui73_2.d(18): Error: undefined identifier `split`\\n/tmp/tmpz7ui73_2.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpz7ui73_2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz5mzbfuc.d(18): Error: undefined identifier `split`\\n/tmp/tmpz5mzbfuc.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpz5mzbfuc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1l72tvcv.d(18): Error: undefined identifier `split`\\n/tmp/tmp1l72tvcv.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1l72tvcv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptouhldxz.d(18): Error: undefined identifier `split`\\n/tmp/tmptouhldxz.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptouhldxz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwl9nb7kw.d(18): Error: undefined identifier `split`\\n/tmp/tmpwl9nb7kw.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwl9nb7kw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaz14fo2k.d(18): Error: undefined identifier `split`\\n/tmp/tmpaz14fo2k.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaz14fo2k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaz6rymbn.d(18): Error: undefined identifier `split`\\n/tmp/tmpaz6rymbn.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaz6rymbn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkkivmpjg.d(18): Error: undefined identifier `split`\\n/tmp/tmpkkivmpjg.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkkivmpjg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmperxknudq.d(18): Error: undefined identifier `split`\\n/tmp/tmperxknudq.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmperxknudq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuq1f0k0c.d(18): Error: undefined identifier `split`\\n/tmp/tmpuq1f0k0c.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuq1f0k0c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjlo21xai.d(18): Error: undefined identifier `split`\\n/tmp/tmpjlo21xai.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjlo21xai.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplzvm1w2o.d(18): Error: undefined identifier `split`\\n/tmp/tmplzvm1w2o.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplzvm1w2o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg7kwjz_x.d(18): Error: undefined identifier `split`\\n/tmp/tmpg7kwjz_x.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg7kwjz_x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".!?\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0] == 'I')\n            count++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgubaior9.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgubaior9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf1t7rtae.d(18): Error: undefined identifier `split`\\n/tmp/tmpf1t7rtae.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpf1t7rtae.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8t9px4dn.d(18): Error: undefined identifier `split`\\n/tmp/tmp8t9px4dn.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8t9px4dn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpry5aiyed.d(18): Error: undefined identifier `split`\\n/tmp/tmpry5aiyed.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpry5aiyed.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpab_t4im8.d(18): Error: undefined identifier `split`\\n/tmp/tmpab_t4im8.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpab_t4im8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpugmn8an3.d(18): Error: undefined identifier `split`\\n/tmp/tmpugmn8an3.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpugmn8an3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdc88qzq1.d(18): Error: undefined identifier `split`\\n/tmp/tmpdc88qzq1.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdc88qzq1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, '.');\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, ' ');\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_ctw5k4t.d(18): Error: undefined identifier `split`\\n/tmp/tmp_ctw5k4t.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_ctw5k4t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5gw8n5c6.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5gw8n5c6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpti71o6qz.d(18): Error: undefined identifier `split`\\n/tmp/tmpti71o6qz.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpti71o6qz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_4jch5aq.d(18): Error: undefined identifier `split`\\n/tmp/tmp_4jch5aq.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_4jch5aq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbu5lgoft.d(18): Error: undefined identifier `split`\\n/tmp/tmpbu5lgoft.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbu5lgoft.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp20fmzm5h.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp20fmzm5h.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_a2jgxvv.d(18): Error: undefined identifier `split`\\n/tmp/tmp_a2jgxvv.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_a2jgxvv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbnig1_yp.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnig1_yp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgcms9xq_.d(18): Error: undefined identifier `split`\\n/tmp/tmpgcms9xq_.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgcms9xq_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8cdrgnm0.d(18): Error: undefined identifier `split`\\n/tmp/tmp8cdrgnm0.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8cdrgnm0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpatodehgi.d(18): Error: undefined identifier `split`\\n/tmp/tmpatodehgi.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpatodehgi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbqhg25bl.d(18): Error: undefined identifier `split`\\n/tmp/tmpbqhg25bl.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbqhg25bl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptvdf6hwj.d(18): Error: undefined identifier `split`\\n/tmp/tmptvdf6hwj.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptvdf6hwj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfvkzngc2.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpfvkzngc2.__unittest_L34_C1()\
    \ [0x427b57]\\n??:? void tmpfvkzngc2.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aac2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa99]\\n??:? runModuleUnitTests [0x42ba05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428358]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282df]\\n??:? _d_run_main [0x42824a]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xc717e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvfzwtmly.d(18): Error: undefined identifier `split`\\n/tmp/tmpvfzwtmly.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvfzwtmly.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm0igicoz.d(18): Error: undefined identifier `split`\\n/tmp/tmpm0igicoz.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm0igicoz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx81klu51.d(18): Error: undefined identifier `split`\\n/tmp/tmpx81klu51.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx81klu51.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_8uqi3qb.d(18): Error: undefined identifier `split`\\n/tmp/tmp_8uqi3qb.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_8uqi3qb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph550ybwa.d(18): Error: undefined identifier `split`\\n/tmp/tmph550ybwa.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmph550ybwa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long len = S.length;\n    while (i < len)\n    {\n        if (S[i]\
    \ == 'I')\n        {\n            boredoms++;\n            while (i < len && S[i]\
    \ != '.' && S[i] != '?' && S[i] != '!')\n            {\n                i++;\n\
    \            }\n        }\n        else\n        {\n            while (i < len\
    \ && S[i] != '.' && S[i] != '?' && S[i] != '!')\n            {\n             \
    \   i++;\n            }\n        }\n        i++;\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpab8atzko.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f35]\\n??:? void tmpab8atzko.__unittest_L42_C1()\
    \ [0x427bfb]\\n??:? void tmpab8atzko.__modtest() [0x427cb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bccf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab62]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcf5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4301a4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc81]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab39]\\n??:? runModuleUnitTests [0x42baa5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42837f]\\n??:? _d_run_main [0x4282ea]\\n??:? main [0x427ccb]\\\
    n??:? __libc_start_main [0x2c73554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        else\n        {\n            while (i < len && S[i]\
    \ != '.' && S[i] != '?' && S[i] != '!')\n            {\n                i++;\n\
    \            }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6ot1ealq.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f35]\\n??:? void tmp6ot1ealq.__unittest_L41_C1()\
    \ [0x427bfb]\\n??:? void tmp6ot1ealq.__modtest() [0x427cb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bccf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab62]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcf5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4301a4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc81]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab39]\\n??:? runModuleUnitTests [0x42baa5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42837f]\\n??:? _d_run_main [0x4282ea]\\n??:? main [0x427ccb]\\\
    n??:? __libc_start_main [0x324fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnkvsru3_.d(18): Error: undefined identifier `split`\\n/tmp/tmpnkvsru3_.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnkvsru3_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcy4q2gkj.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcy4q2gkj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbqpbja3p.d(18): Error: undefined identifier `split`\\n/tmp/tmpbqpbja3p.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbqpbja3p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpghq4qaiv.d(18): Error: undefined identifier `split`\\n/tmp/tmpghq4qaiv.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpghq4qaiv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu7xiwmpz.d(18): Error: undefined identifier `split`\\n/tmp/tmpu7xiwmpz.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpu7xiwmpz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm02mg9f1.d(18): Error: undefined identifier `split`\\n/tmp/tmpm02mg9f1.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm02mg9f1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplugozmhq.d(18): Error: undefined identifier `split`\\n/tmp/tmplugozmhq.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplugozmhq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe5sr69ez.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpe5sr69ez.__unittest_L34_C1()\
    \ [0x427b57]\\n??:? void tmpe5sr69ez.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aac2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa99]\\n??:? runModuleUnitTests [0x42ba05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428358]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282df]\\n??:? _d_run_main [0x42824a]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0xbbbca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpikpwqnk8.d(18): Error: undefined identifier `split`\\n/tmp/tmpikpwqnk8.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpikpwqnk8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpesh125z9.d(18): Error: undefined identifier `split`\\n/tmp/tmpesh125z9.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpesh125z9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".!?\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0] == 'I')\n            count++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpulm71vn3.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpulm71vn3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpva484v9o.d(18): Error: undefined identifier `split`\\n/tmp/tmpva484v9o.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpva484v9o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5meqkz48.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5meqkz48.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3qm7wq8a.d(18): Error: undefined identifier `split`\\n/tmp/tmp3qm7wq8a.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3qm7wq8a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmhwmtsj.d(18): Error: undefined identifier `split`\\n/tmp/tmpbmhwmtsj.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbmhwmtsj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptkk9w87e.d(18): Error: undefined identifier `split`\\n/tmp/tmptkk9w87e.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptkk9w87e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7xf4_imi.d(18): Error: undefined identifier `split`\\n/tmp/tmp7xf4_imi.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7xf4_imi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsqacf00o.d(18): Error: undefined identifier `split`\\n/tmp/tmpsqacf00o.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsqacf00o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n                boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz2si7ftu.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz2si7ftu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjcq9110l.d(18): Error: undefined identifier `split`\\n/tmp/tmpjcq9110l.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjcq9110l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplwetmjoz.d(18): Error: undefined identifier `split`\\n/tmp/tmplwetmjoz.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplwetmjoz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6h_l4a3d.d(18): Error: undefined identifier `split`\\n/tmp/tmp6h_l4a3d.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp6h_l4a3d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpph0enhtb.d(18): Error: undefined identifier `split`\\n/tmp/tmpph0enhtb.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpph0enhtb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnwhlucmk.d(18): Error: undefined identifier `split`\\n/tmp/tmpnwhlucmk.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnwhlucmk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcvv2hoom.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvv2hoom.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4buasrbw.d(18): Error: undefined identifier `split`\\n/tmp/tmp4buasrbw.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4buasrbw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkqnf0m4u.d(18): Error: undefined identifier `split`\\n/tmp/tmpkqnf0m4u.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkqnf0m4u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdimurhpd.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdimurhpd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpts39y852.d(18): Error: undefined identifier `split`\\n/tmp/tmpts39y852.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpts39y852.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp273ffcnn.d(18): Error: undefined identifier `split`\\n/tmp/tmp273ffcnn.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp273ffcnn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8jqjsr09.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp8jqjsr09.__unittest_L34_C1()\
    \ [0x427b57]\\n??:? void tmp8jqjsr09.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aac2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc55]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa99]\\n??:? runModuleUnitTests [0x42ba05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428358]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282df]\\n??:? _d_run_main [0x42824a]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x16dfd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplcw44exo.d(18): Error: undefined identifier `split`\\n/tmp/tmplcw44exo.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplcw44exo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n                boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmploz24fmy.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmploz24fmy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".?!\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words.length > 0 && words[0] ==\
    \ \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplld8oy2d.d(18): Error: undefined identifier `split`\\n/tmp/tmplld8oy2d.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplld8oy2d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz98lri0p.d(18): Error: undefined identifier `split`\\n/tmp/tmpz98lri0p.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpz98lri0p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc787pvwu.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc787pvwu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    foreach(string sentence;\
    \ S.split(\".\"))\n    {\n        if(sentence.length > 0)\n        {\n       \
    \     if(sentence.split(\" \")[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu_6rlphh.d(18): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_6rlphh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbuwg8yw.d(18): Error: undefined identifier `split`\\n/tmp/tmpfbuwg8yw.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfbuwg8yw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphp373v04.d(18): Error: undefined identifier `split`\\n/tmp/tmphp373v04.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphp373v04.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5tenhfop.d(18): Error: undefined identifier `split`\\n/tmp/tmp5tenhfop.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5tenhfop.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzszb9cqu.d(18): Error: undefined identifier `split`\\n/tmp/tmpzszb9cqu.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzszb9cqu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvwlql355.d(18): Error: undefined identifier `split`\\n/tmp/tmpvwlql355.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvwlql355.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpftfd_6ss.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpftfd_6ss.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgz0sf0l.d(18): Error: undefined identifier `split`\\n/tmp/tmppgz0sf0l.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppgz0sf0l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuqu6k4di.d(18): Error: undefined identifier `split`\\n/tmp/tmpuqu6k4di.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuqu6k4di.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl7fzza0y.d(18): Error: undefined identifier `split`\\n/tmp/tmpl7fzza0y.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpl7fzza0y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyw0l3dwy.d(18): Error: undefined identifier `split`\\n/tmp/tmpyw0l3dwy.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyw0l3dwy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqjx5y28l.d(18): Error: undefined identifier `split`\\n/tmp/tmpqjx5y28l.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqjx5y28l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7qvgzklx.d(18): Error: undefined identifier `split`\\n/tmp/tmp7qvgzklx.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7qvgzklx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9ucmtlu.d(18): Error: undefined identifier `split`\\n/tmp/tmpv9ucmtlu.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpv9ucmtlu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9z5pebvm.d(18): Error: undefined identifier `split`\\n/tmp/tmp9z5pebvm.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9z5pebvm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprk12i91z.d(18): Error: undefined identifier `split`\\n/tmp/tmprk12i91z.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmprk12i91z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfum0q0k3.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfum0q0k3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgb8592fm.d(18): Error: undefined identifier `split`\\n/tmp/tmpgb8592fm.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgb8592fm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(startsWith(sentence,\
    \ \"I\"))\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps6uyrnes.d(18): Error: undefined identifier `split`\\n/tmp/tmps6uyrnes.d(21):\
    \ Error: undefined identifier `startsWith`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmps6uyrnes.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaphowpus.d(18): Error: undefined identifier `split`\\n/tmp/tmpaphowpus.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaphowpus.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt30tltp4.d(18): Error: undefined identifier `split`\\n/tmp/tmpt30tltp4.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpt30tltp4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy9_5v1vf.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9_5v1vf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxvw7120.d(18): Error: undefined identifier `split`\\n/tmp/tmpdxvw7120.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdxvw7120.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt7z3cmqg.d(18): Error: undefined identifier `split`\\n/tmp/tmpt7z3cmqg.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpt7z3cmqg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp97rktr67.d(18): Error: undefined identifier `split`\\n/tmp/tmp97rktr67.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp97rktr67.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm5ser772.d(18): Error: undefined identifier `split`\\n/tmp/tmpm5ser772.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm5ser772.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4a8854t.d(18): Error: undefined identifier `split`\\n/tmp/tmpj4a8854t.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj4a8854t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \".\");\n    foreach(string word; words)\n    {\n        if(word.length > 0)\n\
    \        {\n            string[] subwords = split(word, \" \");\n            if(subwords[0]\
    \ == \"I\")\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyltgl7fo.d(18): Error: undefined identifier `split`\\n/tmp/tmpyltgl7fo.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpyltgl7fo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdvtt8af6.d(18): Error: undefined identifier `split`\\n/tmp/tmpdvtt8af6.d(23):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdvtt8af6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp456xk4ce.d(18): Error: undefined identifier `split`\\n/tmp/tmp456xk4ce.d(21):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp456xk4ce.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

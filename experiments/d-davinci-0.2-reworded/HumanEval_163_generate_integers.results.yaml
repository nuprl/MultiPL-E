name: HumanEval_163_generate_integers
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2jyyfx7_.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp2jyyfx7_.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp2jyyfx7_.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x30b20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp61l_bywb.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp61l_bywb.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp61l_bywb.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x17052554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        auto tmp = a;\n       \
    \ a = b;\n        b = tmp;\n    }\n    foreach (i; a..b+1)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ozeane5.d(19): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0ozeane5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcq0r_v2q.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpcq0r_v2q.__unittest_L39_C1()\
    \ [0x427f48]\\n??:? void tmpcq0r_v2q.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x5a26e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        auto tmp = a;\n       \
    \ a = b;\n        b = tmp;\n    }\n    foreach (i; a..b+1)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl_fx9zct.d(19): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpl_fx9zct.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[0];\n    for (long i = a; i <= b; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0fok8nz_.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmp0fok8nz_.__unittest_L35_C1()\
    \ [0x427f28]\\n??:? void tmp0fok8nz_.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x8a910554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + i * 2;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (long i = 0; i < result.length; i++) \n      \
    \      {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgosij16z.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428455]\\n??:? void tmpgosij16z.__unittest_L45_C1()\
    \ [0x427fe4]\\n??:? void tmpgosij16z.__modtest() [0x4281d4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c50f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43062d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430adc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b379]\\n??:? runModuleUnitTests [0x42c2e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428918]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42889f]\\n??:? _d_run_main [0x42880a]\\n??:? main [0x4281e7]\\\
    n??:? __libc_start_main [0x60bd3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0jjr9ngc.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0jjr9ngc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmploskzi83.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmploskzi83.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmploskzi83.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xd2ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        auto tmp = a;\n       \
    \ a = b;\n        b = tmp;\n    }\n    for (auto i = a; i <= b; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwn8cdyk4.d(19): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwn8cdyk4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4urffum_.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp4urffum_.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp4urffum_.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x97699554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp873b50qc.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp873b50qc.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp873b50qc.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xad8ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + i * 2;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (int i = 0; i < result.length; i++) \n       \
    \     {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\n/*\n    Given a positive integer n, return the\
    \ nth Fibonacci number.\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4rjnvqca.d(45): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rjnvqca.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 != 0) \n        {\n            a++;\n\
    \        }\n        if (b % 2 != 0) \n        {\n            b--;\n        }\n\
    \        long length = (b - a) / 2 + 1;\n        result = new long[length];\n\
    \        for (long i = 0; i < length; i++) \n        {\n            result[i]\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1ruyvm0g.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283fd]\\n??:? void tmp1ruyvm0g.__unittest_L43_C1()\
    \ [0x427f8c]\\n??:? void tmp1ruyvm0g.__modtest() [0x42817c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4b7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b34a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430561]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b321]\\n??:? runModuleUnitTests [0x42c28d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428847]\\n??:? _d_run_main [0x4287b2]\\n??:? main [0x42818f]\\\
    n??:? __libc_start_main [0x3cbb0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpldhumdni.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpldhumdni.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpldhumdni.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x81246554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + 2 * i;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a) / 2];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + 2 * i + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp820h14le.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmp820h14le.__unittest_L44_C1()\
    \ [0x427fdc]\\n??:? void tmp820h14le.__modtest() [0x4281cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c507]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b39a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430625]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b371]\\n??:? runModuleUnitTests [0x42c2dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428910]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428897]\\n??:? _d_run_main [0x428802]\\n??:? main [0x4281df]\\\
    n??:? __libc_start_main [0xdb03c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc41lwy7x.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpc41lwy7x.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpc41lwy7x.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x52504554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpidzpz5mm.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpidzpz5mm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfra61b33.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfra61b33.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = new long[];\n\
    \    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbyjyoi5o.d(19): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpbyjyoi5o.d(20): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\n/tmp/tmpbyjyoi5o.d(21): Error: new can only\
    \ create structs, dynamic arrays or class objects, not `long[]`\\'s\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbyjyoi5o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpesoz0lu3.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpesoz0lu3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[0];\n    }\n    else\n\
    \    {\n        long count = (b - a) / 2 + 1;\n        result = new long[count];\n\
    \        for (long i = 0; i < count; i++)\n        {\n            result[i] =\
    \ a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprykhcs7m.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmprykhcs7m.__unittest_L35_C1()\
    \ [0x427f54]\\n??:? void tmprykhcs7m.__modtest() [0x428144]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b312]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43059d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a4c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430529]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e9]\\n??:? runModuleUnitTests [0x42c255]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428888]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42880f]\\n??:? _d_run_main [0x42877a]\\n??:? main [0x428157]\\\
    n??:? __libc_start_main [0x4ee5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz957o5ax.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpz957o5ax.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpz957o5ax.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xb7f91554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a - 1) / 2 + 1];\n            foreach\
    \ (i, ref e; result)\n            {\n                e = a + i * 2 + 1;\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3db9tmz9.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmp3db9tmz9.__unittest_L45_C1()\
    \ [0x427fbc]\\n??:? void tmp3db9tmz9.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c473]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b306]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430591]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a40]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43051d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2dd]\\n??:? runModuleUnitTests [0x42c249]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42887c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428803]\\n??:? _d_run_main [0x42876e]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0x403c4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp24vsas5a.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp24vsas5a.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp24vsas5a.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xe787c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd3hnqes5.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpd3hnqes5.__unittest_L37_C1()\
    \ [0x427f5c]\\n??:? void tmpd3hnqes5.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc92]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430769]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc69]\\n??:? runModuleUnitTests [0x42cbd5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0xd56e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        while (a <= b)\n  \
    \      {\n            result ~= a;\n            a += 2;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzolevgqk.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmpzolevgqk.__unittest_L44_C1()\
    \ [0x427f7c]\\n??:? void tmpzolevgqk.__modtest() [0x42816c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce1f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcb2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430789]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc89]\\n??:? runModuleUnitTests [0x42cbf5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42883c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c3]\\n??:? _d_run_main [0x42872e]\\n??:? main [0x42817f]\\\
    n??:? __libc_start_main [0x23320554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptcjuf24h.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmptcjuf24h.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmptcjuf24h.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x3ee5d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        foreach (i, ref e; result) \n        {\n            e = a + 2 * i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpboc32d1s.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpboc32d1s.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + i * 2;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a - 1) / 2 + 1];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + i * 2 + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7fvswecn.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmp7fvswecn.__unittest_L44_C1()\
    \ [0x427fe0]\\n??:? void tmp7fvswecn.__modtest() [0x4281d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c507]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b39a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430625]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b371]\\n??:? runModuleUnitTests [0x42c2dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428910]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428897]\\n??:? _d_run_main [0x428802]\\n??:? main [0x4281e3]\\\
    n??:? __libc_start_main [0xf79c0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result) \n    \
    \        {\n                e = a + 2 * i;\n            }\n        } \n      \
    \  else \n        {\n            result = new long[(b - a - 1) / 2 + 1];\n   \
    \         foreach (i, ref e; result) \n            {\n                e = a +\
    \ 2 * i + 1;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjezalhaf.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpjezalhaf.__unittest_L45_C1()\
    \ [0x427fbc]\\n??:? void tmpjezalhaf.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c473]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b306]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430591]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a40]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43051d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2dd]\\n??:? runModuleUnitTests [0x42c249]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42887c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428803]\\n??:? _d_run_main [0x42876e]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0x1da44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[0];\n    for (long i = a; i <= b; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpejxc4h0a.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpejxc4h0a.__unittest_L35_C1()\
    \ [0x427f28]\\n??:? void tmpejxc4h0a.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x321d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5y6vff1m.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp5y6vff1m.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp5y6vff1m.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x19ad0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = generate_integers(a\
    \ + 1, b);\n        result = result.insert(0, a);\n    }\n    else\n    {\n  \
    \      result = generate_integers(a + 1, b);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps82bhywf.d(27): Error: no property `insert` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps82bhywf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyv3dvf7s.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpyv3dvf7s.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpyv3dvf7s.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x71f61554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        long temp = a;\n        a = b;\n  \
    \      b = temp;\n    }\n    foreach (i; a..b) \n    {\n        if (i % 2 == 0)\
    \ \n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsb9rigqu.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpsb9rigqu.__unittest_L35_C1()\
    \ [0x428020]\\n??:? void tmpsb9rigqu.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430661]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b10]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbe5]\\n??:? runModuleUnitTests [0x42cb51]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0xe6ff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn1fiowxh.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpn1fiowxh.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpn1fiowxh.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x32545554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    long min = min(a, b);\n    long max = max(a, b);\n\
    \    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6pa48lih.d(19): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp6pa48lih.d(20): Error: undefined\
    \ identifier `min`, did you mean function `main`?\\n/tmp/tmp6pa48lih.d(21): Error:\
    \ undefined identifier `max`, did you mean function `fmax`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pa48lih.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        for (long i = 0; i < result.length; i++)\n        {\n            result[i]\
    \ = b + i * 2;\n        }\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + i * 2;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuh062k_j.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpuh062k_j.__unittest_L38_C1()\
    \ [0x427fb4]\\n??:? void tmpuh062k_j.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x2070b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzqh681z2.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpzqh681z2.__unittest_L37_C1()\
    \ [0x427f5c]\\n??:? void tmpzqh681z2.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc92]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430769]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc69]\\n??:? runModuleUnitTests [0x42cbd5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0xf3237554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaya_meb9.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpaya_meb9.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpaya_meb9.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xaa9a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp02dtx1h7.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp02dtx1h7.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp02dtx1h7.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xa93e0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        long i = 0;\n        foreach (long x; a.iota.take(a - b + 1))\n     \
    \   {\n            if (x % 2 == 0)\n            {\n                result[i] =\
    \ x;\n                i++;\n            }\n        }\n    }\n    else\n    {\n\
    \        result = new long[(b - a) / 2 + 1];\n        long i = 0;\n        foreach\
    \ (long x; a.iota.take(b - a + 1))\n        {\n            if (x % 2 == 0)\n \
    \           {\n                result[i] = x;\n                i++;\n        \
    \    }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstk93u_z.d(24): Error: no property `iota` for type `long`\\n/tmp/tmpstk93u_z.d(37):\
    \ Error: no property `iota` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpstk93u_z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpufefuvd1.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpufefuvd1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6bbgct6f.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp6bbgct6f.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp6bbgct6f.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x2dabf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            long i = 0;\n            foreach (long\
    \ x; a..b + 1)\n            {\n                if (x % 2 == 0)\n             \
    \   {\n                    result[i] = x;\n                    i++;\n        \
    \        }\n            }\n        }\n        else\n        {\n            result\
    \ = new long[(b - a) / 2];\n            long i = 0;\n            foreach (long\
    \ x; a + 1..b + 1)\n            {\n                if (x % 2 == 0)\n         \
    \       {\n                    result[i] = x;\n                    i++;\n    \
    \            }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxigv9ka4.d(59): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4284ad]\\n??:? void tmpxigv9ka4.__unittest_L55_C1()\
    \ [0x428040]\\n??:? void tmpxigv9ka4.__modtest() [0x428230]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c567]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3fa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430685]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b34]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430611]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b3d1]\\n??:? runModuleUnitTests [0x42c33d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428970]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4288f7]\\n??:? _d_run_main [0x428862]\\n??:? main [0x428243]\\\
    n??:? __libc_start_main [0xfb2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmsq8c5i8.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpmsq8c5i8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqosy82tu.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqosy82tu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_znztxzv.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp_znztxzv.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp_znztxzv.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x77ac5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    result = new long[(b - a) / 2 + 1];\n    for (long i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyzl3py1j.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283fd]\\n??:? void tmpyzl3py1j.__unittest_L45_C1()\
    \ [0x427f90]\\n??:? void tmpyzl3py1j.__modtest() [0x428180]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4b7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b34a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430561]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b321]\\n??:? runModuleUnitTests [0x42c28d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288c0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428847]\\n??:? _d_run_main [0x4287b2]\\n??:? main [0x428193]\\\
    n??:? __libc_start_main [0xac106554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgox054zv.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpgox054zv.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpgox054zv.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x10e27554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpot388jvf.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283bd]\\n??:? void tmpot388jvf.__unittest_L37_C1()\
    \ [0x427f50]\\n??:? void tmpot388jvf.__modtest() [0x428140]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430679]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430605]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbfd]\\n??:? runModuleUnitTests [0x42cb69]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42880c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428793]\\n??:? _d_run_main [0x4286fe]\\n??:? main [0x428153]\\\
    n??:? __libc_start_main [0x9afff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    long length = (b - a) / 2 + 1;\n    result = new long[length];\n\
    \    for (long i = 0; i < length; i++)\n    {\n        result[i] = a + 2 * i;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb5xe3n9q.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428405]\\n??:? void tmpb5xe3n9q.__unittest_L46_C1()\
    \ [0x427f98]\\n??:? void tmpb5xe3n9q.__modtest() [0x428188]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4bf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b352]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430569]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b329]\\n??:? runModuleUnitTests [0x42c295]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288c8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42884f]\\n??:? _d_run_main [0x4287ba]\\n??:? main [0x42819b]\\\
    n??:? __libc_start_main [0x93477554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz_sqtfwm.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpz_sqtfwm.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpz_sqtfwm.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x122c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    long min = min(a, b);\n    long max = max(a, b);\n    foreach(i;\
    \ min..max)\n    {\n        if(i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6wa62ir_.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp6wa62ir_.d(21): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp6wa62ir_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        else\n        {\n   \
    \         a++;\n        }\n        for (; a < b; a += 2)\n        {\n        \
    \    result ~= a;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppzs7vs72.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283e5]\\n??:? void tmppzs7vs72.__unittest_L42_C1()\
    \ [0x427f74]\\n??:? void tmppzs7vs72.__modtest() [0x428164]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428834]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287bb]\\n??:? _d_run_main [0x428726]\\n??:? main [0x428177]\\\
    n??:? __libc_start_main [0xfe6ea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = a + 1;\n      \
    \  while (c < b)\n        {\n            if (c % 2 == 0)\n            {\n    \
    \            result ~= c;\n            }\n            c++;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_nw8z27a.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428445]\\n??:? void tmp_nw8z27a.__unittest_L47_C1()\
    \ [0x427fd4]\\n??:? void tmp_nw8z27a.__modtest() [0x4281c4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce77]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bd0a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430855]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430d04]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307e1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bce1]\\n??:? runModuleUnitTests [0x42cc4d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428894]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42881b]\\n??:? _d_run_main [0x428786]\\n??:? main [0x4281d7]\\\
    n??:? __libc_start_main [0x6bbc3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + 2 * i;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a - 1) / 2 + 1];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + 2 * i + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe0grj6a6.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmpe0grj6a6.__unittest_L44_C1()\
    \ [0x427fe0]\\n??:? void tmpe0grj6a6.__modtest() [0x4281d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c507]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b39a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430625]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b371]\\n??:? runModuleUnitTests [0x42c2dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428910]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428897]\\n??:? _d_run_main [0x428802]\\n??:? main [0x4281e3]\\\
    n??:? __libc_start_main [0xd652e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a .. b + 1)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjj_s9m1k.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpjj_s9m1k.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpjj_s9m1k.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x1812f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9j6wsww5.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9j6wsww5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkyidxyh9.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkyidxyh9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp16scchn0.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp16scchn0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbryzeerk.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpbryzeerk.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpbryzeerk.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x3697e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2 + 1)];\n\
    \        for (int i = 0; i < result.length; i++)\n        {\n            result[i]\
    \ = a + 2 * i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlkrksn7.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2 + 1)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlkrksn7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    long i;\n    if (a > b)\n    {\n        result = new long[0];\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ i = 0;\n        foreach (long x; a.iota(b + 1))\n        {\n            if (x\
    \ % 2 == 0)\n            {\n                result[i] = x;\n                i++;\n\
    \            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkivyapbw.d(29): Error: no property `iota` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkivyapbw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2L == 0L)\n        {\n            result\
    \ = new long[(b - a) / 2L + 1L];\n            for (long i = 0L; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2L;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a) / 2L];\n\
    \            for (long i = 0L; i < result.length; i++)\n            {\n      \
    \          result[i] = a + (i + 1L) * 2L;\n            }\n        }\n    }\n \
    \   return result;\n}\n/*\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp448491g_.d(45): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp448491g_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        auto temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result ~= a;\n   \
    \     a += 2;\n    }\n    else\n    {\n        a += 1;\n    }\n    for (; a <=\
    \ b; a += 2)\n    {\n        result ~= a;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpopklf87e.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmpopklf87e.__unittest_L41_C1()\
    \ [0x427f54]\\n??:? void tmpopklf87e.__modtest() [0x428144]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430681]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b30]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43060d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc05]\\n??:? runModuleUnitTests [0x42cb71]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428814]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42879b]\\n??:? _d_run_main [0x428706]\\n??:? main [0x428157]\\\
    n??:? __libc_start_main [0x24214554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = a + 1;\n      \
    \  while (c < b)\n        {\n            if (c % 2 == 0)\n            {\n    \
    \            result ~= c;\n            }\n            c++;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyesbb2ve.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428445]\\n??:? void tmpyesbb2ve.__unittest_L47_C1()\
    \ [0x427fd4]\\n??:? void tmpyesbb2ve.__modtest() [0x4281c4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce77]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bd0a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430855]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430d04]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307e1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bce1]\\n??:? runModuleUnitTests [0x42cc4d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428894]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42881b]\\n??:? _d_run_main [0x428786]\\n??:? main [0x4281d7]\\\
    n??:? __libc_start_main [0x140a1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2L == 0L)\n        {\n            result\
    \ = new long[(b - a) / 2L + 1L];\n            foreach (i, ref e; result)\n   \
    \         {\n                e = a + i * 2L;\n            }\n        }\n     \
    \   else\n        {\n            result = new long[(b - a - 1L) / 2L + 1L];\n\
    \            foreach (i, ref e; result)\n            {\n                e = a\
    \ + i * 2L + 1L;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy3ogjbb4.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpy3ogjbb4.__unittest_L45_C1()\
    \ [0x427fbc]\\n??:? void tmpy3ogjbb4.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c473]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b306]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430591]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a40]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43051d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2dd]\\n??:? runModuleUnitTests [0x42c249]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42887c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428803]\\n??:? _d_run_main [0x42876e]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0xcaa23554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwjsp6g80.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpwjsp6g80.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpwjsp6g80.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xbe500554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaod52_ob.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpaod52_ob.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpaod52_ob.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x9095c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        while (a <= b)\n  \
    \      {\n            result ~= a;\n            a += 2;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp75j9hmrc.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmp75j9hmrc.__unittest_L44_C1()\
    \ [0x427f7c]\\n??:? void tmp75j9hmrc.__modtest() [0x42816c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce1f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcb2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430789]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc89]\\n??:? runModuleUnitTests [0x42cbf5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42883c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c3]\\n??:? _d_run_main [0x42872e]\\n??:? main [0x42817f]\\\
    n??:? __libc_start_main [0x8293b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ long i = 0;\n        foreach (long x; a.iota(b + 1))\n        {\n          \
    \  if (x % 2 == 0)\n            {\n                result[i] = x;\n          \
    \      i++;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpazica9wp.d(28): Error: no property `iota` for type `long`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpazica9wp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzhm7v7kj.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpzhm7v7kj.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpzhm7v7kj.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xe62bb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = new long[0];\n        for (long i\
    \ = a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n\
    \                result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ccsbw2k.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp8ccsbw2k.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp8ccsbw2k.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x1d002554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2L == 0L) \n        {\n           \
    \ result = new long[(b - a) / 2L + 1L];\n            foreach (i, ref e; result)\
    \ \n            {\n                e = a + i * 2L;\n            }\n        } \n\
    \        else \n        {\n            result = new long[(b - a) / 2L];\n    \
    \        foreach (i, ref e; result) \n            {\n                e = a + (i\
    \ + 1L) * 2L;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpieuizxt9.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpieuizxt9.__unittest_L45_C1()\
    \ [0x427fb8]\\n??:? void tmpieuizxt9.__modtest() [0x4281a8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281bb]\\\
    n??:? __libc_start_main [0x4b52e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = [];\n        for (long i = a; i <= b; i++) {\n    \
    \        if (i % 2 == 0) {\n                result ~= i;\n            }\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4krdd3id.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283bd]\\n??:? void tmp4krdd3id.__unittest_L32_C1()\
    \ [0x427f50]\\n??:? void tmp4krdd3id.__modtest() [0x428140]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430679]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430605]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbfd]\\n??:? runModuleUnitTests [0x42cb69]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42880c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428793]\\n??:? _d_run_main [0x4286fe]\\n??:? main [0x428153]\\\
    n??:? __libc_start_main [0xbe93554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 != 0)\n    {\n        result = generate_integers(a\
    \ + 1, b);\n    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfrwchruk.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpfrwchruk.__unittest_L38_C1()\
    \ [0x427f60]\\n??:? void tmpfrwchruk.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c413]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2a6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430531]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309e0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304bd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b27d]\\n??:? runModuleUnitTests [0x42c1e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xd8d6d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ ret;\n    if (a > b)\n    {\n        ret = generate_integers(b, a);\n    }\n\
    \    else\n    {\n        ret = new long[0];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  ret ~= i;\n            }\n        }\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmytoo4hp.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpmytoo4hp.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpmytoo4hp.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x31389554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpax9_16xr.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpax9_16xr.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpax9_16xr.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xa063e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw_yuz1un.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpw_yuz1un.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpw_yuz1un.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x4d52d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp2ozr12t.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp2ozr12t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfvzfaw_c.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfvzfaw_c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb8251ngb.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpb8251ngb.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpb8251ngb.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x642bc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n        }\n        else \n        {\n        \
    \    result = new long[(b - a) / 2];\n        }\n        foreach (i, ref e; result)\
    \ \n        {\n            e = a + 2 * i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp32qn0ezb.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmp32qn0ezb.__unittest_L41_C1()\
    \ [0x427f80]\\n??:? void tmp32qn0ezb.__modtest() [0x428170]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c433]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430551]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a00]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b29d]\\n??:? runModuleUnitTests [0x42c209]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42883c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c3]\\n??:? _d_run_main [0x42872e]\\n??:? main [0x428183]\\\
    n??:? __libc_start_main [0xcb601554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptnuu8bw5.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmptnuu8bw5.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmptnuu8bw5.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xeaae0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (int i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + i * 2;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a - 1) / 2 + 1];\n        for (int i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + i * 2 + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5tkbddwk.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmp5tkbddwk.__unittest_L44_C1()\
    \ [0x427fdc]\\n??:? void tmp5tkbddwk.__modtest() [0x4281cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c507]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b39a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430625]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b371]\\n??:? runModuleUnitTests [0x42c2dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428910]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428897]\\n??:? _d_run_main [0x428802]\\n??:? main [0x4281df]\\\
    n??:? __libc_start_main [0xc3c2c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n        }\n        else \n        {\n        \
    \    result = new long[(b - a) / 2];\n        }\n        for (long i = 0; i <\
    \ result.length; i++) \n        {\n            result[i] = a + 2 * i;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ofkgfsv.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmp9ofkgfsv.__unittest_L41_C1()\
    \ [0x427f88]\\n??:? void tmp9ofkgfsv.__modtest() [0x428178]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4af]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b342]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305cd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a7c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430559]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b319]\\n??:? runModuleUnitTests [0x42c285]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288b8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42883f]\\n??:? _d_run_main [0x4287aa]\\n??:? main [0x42818b]\\\
    n??:? __libc_start_main [0x80994554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ ret = new long[0];\n    if (a > b)\n    {\n        long tmp = a;\n        a\
    \ = b;\n        b = tmp;\n    }\n    for (long i = a; i <= b; i++)\n    {\n  \
    \      if (i % 2 == 0)\n        {\n            ret ~= i;\n        }\n    }\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3cminll6.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp3cminll6.__unittest_L35_C1()\
    \ [0x427f38]\\n??:? void tmp3cminll6.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0x34ab4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = [];\n    foreach(i;\
    \ min..max)\n    {\n        if(i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyeng3416.d(19): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpyeng3416.d(20): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyeng3416.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = [];\n        foreach (i; a..b+1) {\n            if\
    \ (i % 2 == 0) {\n                result ~= i;\n            }\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmperopnxmg.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmperopnxmg.__unittest_L32_C1()\
    \ [0x427f60]\\n??:? void tmperopnxmg.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x7a687554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[0];\n    for (long i = a; i <= b; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpms0n3fqd.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpms0n3fqd.__unittest_L35_C1()\
    \ [0x427f28]\\n??:? void tmpms0n3fqd.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0x90a82554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = generate_integers(a + 1, b);\n            result = result.insert(0, a);\n\
    \        }\n        else \n        {\n            result = generate_integers(a\
    \ + 1, b);\n        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb66apme6.d(38): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb66apme6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + i * 2;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + i * 2;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdf765z52.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmpdf765z52.__unittest_L38_C1()\
    \ [0x427f88]\\n??:? void tmpdf765z52.__modtest() [0x428178]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x42818b]\\\
    n??:? __libc_start_main [0x6fa89554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ res = new long[];\n    if (a > b)\n    {\n        long temp = a;\n        a\
    \ = b;\n        b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        for (long\
    \ i = a; i <= b; i += 2)\n        {\n            res ~= i;\n        }\n    }\n\
    \    else\n    {\n        for (long i = a + 1; i <= b; i += 2)\n        {\n  \
    \          res ~= i;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0613dvet.d(19): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp0613dvet.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ituooyt.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3ituooyt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7l3mp1gz.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp7l3mp1gz.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp7l3mp1gz.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xc0439554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = generate_integers_even(a, b);\n        }\n        else\n        {\n      \
    \      result = generate_integers_even(a + 1, b);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp27kjxdcu.d(28): Error: undefined identifier `generate_integers_even`\\\
    n/tmp/tmp27kjxdcu.d(32): Error: undefined identifier `generate_integers_even`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp27kjxdcu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_dj8zz_n.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428455]\\n??:? void tmp_dj8zz_n.__unittest_L45_C1()\
    \ [0x427fe4]\\n??:? void tmp_dj8zz_n.__modtest() [0x4281d4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c50f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43062d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430adc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b379]\\n??:? runModuleUnitTests [0x42c2e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428918]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42889f]\\n??:? _d_run_main [0x42880a]\\n??:? main [0x4281e7]\\\
    n??:? __libc_start_main [0x7995a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        foreach (i, ref e; result)\n        {\n            e\
    \ = a + i * 2;\n        }\n    }\n    else\n    {\n        result = new long[(b\
    \ - a) / 2];\n        foreach (i, ref e; result)\n        {\n            e = a\
    \ + i * 2 + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdf5pbkqt.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42841d]\\n??:? void tmpdf5pbkqt.__unittest_L44_C1()\
    \ [0x427fb0]\\n??:? void tmpdf5pbkqt.__modtest() [0x4281a0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c463]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2f6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430581]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a30]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43050d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2cd]\\n??:? runModuleUnitTests [0x42c239]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42886c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287f3]\\n??:? _d_run_main [0x42875e]\\n??:? main [0x4281b3]\\\
    n??:? __libc_start_main [0xc7bbf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3u2j8482.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp3u2j8482.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp3u2j8482.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xcba09554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp466i106v.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp466i106v.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp466i106v.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xf3a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppcwrz7hk.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppcwrz7hk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ta1rfm8.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp9ta1rfm8.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp9ta1rfm8.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x159bb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi_3mzz7b.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpi_3mzz7b.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpi_3mzz7b.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x5f455554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1cigvakm.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp1cigvakm.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp1cigvakm.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x1e8a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[0];\n    }\n    else\n\
    \    {\n        long[] temp = new long[(int)((b - a) / 2) + 1];\n        for (int\
    \ i = 0; i < temp.length; i++)\n        {\n            temp[i] = a + i * 2;\n\
    \        }\n        result = temp;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbe41xhp.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfbe41xhp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_1d0keq7.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp_1d0keq7.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp_1d0keq7.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xe7b01554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0pxwwvor.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp0pxwwvor.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp0pxwwvor.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xc5961554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = generate_integers(a\
    \ + 1, b);\n        result = result.prepend(a);\n    }\n    else\n    {\n    \
    \    result = generate_integers(a + 1, b);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf4bkxbw7.d(27): Error: no property `prepend` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4bkxbw7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        foreach (i; a..b)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb1qdgaz8.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpb1qdgaz8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp65hwf_ct.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp65hwf_ct.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp65hwf_ct.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x52d15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzc4b_2gn.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzc4b_2gn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpayhf33l_.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpayhf33l_.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpayhf33l_.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x87f39554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgt_lsjoz.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgt_lsjoz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp700es4ys.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp700es4ys.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp700es4ys.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x42810554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpohe5ij7f.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpohe5ij7f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[0];\n    }\n    else\n\
    \    {\n        long count = (b - a) / 2 + 1;\n        result = new long[count];\n\
    \        for (long i = 0; i < count; i++)\n        {\n            result[i] =\
    \ a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeieby4ha.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmpeieby4ha.__unittest_L35_C1()\
    \ [0x427f54]\\n??:? void tmpeieby4ha.__modtest() [0x428144]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b312]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43059d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a4c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430529]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e9]\\n??:? runModuleUnitTests [0x42c255]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428888]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42880f]\\n??:? _d_run_main [0x42877a]\\n??:? main [0x428157]\\\
    n??:? __libc_start_main [0xde706554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjbafz4x4.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpjbafz4x4.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpjbafz4x4.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x3397d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplc698a5q.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmplc698a5q.__unittest_L37_C1()\
    \ [0x427f5c]\\n??:? void tmplc698a5q.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc92]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307dd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c8c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430769]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc69]\\n??:? runModuleUnitTests [0x42cbd5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0xa59a8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        while (a <= b) \n    \
    \    {\n            if (a % 2 == 0) \n            {\n                result ~=\
    \ a;\n            }\n            a++;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt3r4da91.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpt3r4da91.__unittest_L38_C1()\
    \ [0x427f44]\\n??:? void tmpt3r4da91.__modtest() [0x428134]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430671]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b20]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305fd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbf5]\\n??:? runModuleUnitTests [0x42cb61]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x428147]\\\
    n??:? __libc_start_main [0x52dad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ ret = new long[0];\n    if (a > b)\n    {\n        long tmp = a;\n        a\
    \ = b;\n        b = tmp;\n    }\n    if (a % 2 != 0)\n        a++;\n    if (b\
    \ % 2 != 0)\n        b--;\n    if (a > b)\n        return ret;\n    ret = new\
    \ long[(b - a) / 2 + 1];\n    for (long i = 0; i < ret.length; i++)\n        ret[i]\
    \ = a + i * 2;\n    return ret;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphctxsn5r.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428415]\\n??:? void tmphctxsn5r.__unittest_L37_C1()\
    \ [0x427fa4]\\n??:? void tmphctxsn5r.__modtest() [0x428194]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4cf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b362]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a9c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430579]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b339]\\n??:? runModuleUnitTests [0x42c2a5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288d8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42885f]\\n??:? _d_run_main [0x4287ca]\\n??:? main [0x4281a7]\\\
    n??:? __libc_start_main [0x83be8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = new long[0];\n    }\n    else\
    \ \n    {\n        long[] temp = new long[(int)((b - a) / 2 + 1)];\n        int\
    \ i = 0;\n        for (long j = a; j <= b; j += 2) \n        {\n            temp[i]\
    \ = j;\n            i++;\n        }\n        result = temp;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc4fer75n.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2 + 1)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc4fer75n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3nbfki84.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp3nbfki84.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmp3nbfki84.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x2f816554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = new long[(b - a) / 2\
    \ + 1];\n        foreach (i, ref e; result)\n        {\n            e = a + 2\
    \ * i;\n        }\n    }\n    else\n    {\n        result = new long[(b - a) /\
    \ 2];\n        foreach (i, ref e; result)\n        {\n            e = a + 2 *\
    \ i + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqzlnogxu.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpqzlnogxu.__unittest_L42_C1()\
    \ [0x427fb4]\\n??:? void tmpqzlnogxu.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x46bd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long tmp = a;\n        a = b;\n        b = tmp;\n  \
    \  }\n    long[] ret = new long[0];\n    for (long i = a; i <= b; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            ret ~= i;\n        }\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnrz145_o.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428395]\\n??:? void tmpnrz145_o.__unittest_L35_C1()\
    \ [0x427f28]\\n??:? void tmpnrz145_o.__modtest() [0x428118]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdc7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc5a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307a5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c54]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430731]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc31]\\n??:? runModuleUnitTests [0x42cb9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42876b]\\n??:? _d_run_main [0x4286d6]\\n??:? main [0x42812b]\\\
    n??:? __libc_start_main [0xbdb82554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz3ntx_fp.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpz3ntx_fp.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpz3ntx_fp.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x91480554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a - 1) / 2 + 1];\n            foreach\
    \ (i, ref e; result)\n            {\n                e = a + i * 2 + 1;\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbn26qcbn.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42842d]\\n??:? void tmpbn26qcbn.__unittest_L45_C1()\
    \ [0x427fbc]\\n??:? void tmpbn26qcbn.__modtest() [0x4281ac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c473]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b306]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430591]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a40]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x43051d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2dd]\\n??:? runModuleUnitTests [0x42c249]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42887c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428803]\\n??:? _d_run_main [0x42876e]\\n??:? main [0x4281bf]\\\
    n??:? __libc_start_main [0xb7fe2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd812176p.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpd812176p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpykohuryy.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpykohuryy.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpykohuryy.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x30af8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpndoknktc.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpndoknktc.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpndoknktc.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xbaafa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result) \n    \
    \        {\n                e = a + i * 2;\n            }\n        } \n      \
    \  else \n        {\n            result = new long[(b - a) / 2];\n           \
    \ foreach (i, ref e; result) \n            {\n                e = a + i * 2 +\
    \ 1;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwbh0a4_4.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpwbh0a4_4.__unittest_L45_C1()\
    \ [0x427fb4]\\n??:? void tmpwbh0a4_4.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x6dccb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        return generate_integers(b, a);\n    }\n    long[] result\
    \ = new long[0];\n    for (long i = a; i <= b; i++)\n    {\n        if (i % 2\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprjupd1zn.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmprjupd1zn.__unittest_L33_C1()\
    \ [0x427f34]\\n??:? void tmprjupd1zn.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdd7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc6a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307b5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c64]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430741]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc41]\\n??:? runModuleUnitTests [0x42cbad]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0xee847554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp32rtt19c.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp32rtt19c.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp32rtt19c.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xb6a94554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzmwypksj.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzmwypksj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpegxeeyl9.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpegxeeyl9.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpegxeeyl9.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xd393d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpos9g_2pr.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpos9g_2pr.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpos9g_2pr.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x6870a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd1muycrf.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpd1muycrf.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpd1muycrf.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x3f298554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ebks_q7.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp9ebks_q7.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp9ebks_q7.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x67e52554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        if (a % 2 == 1)\n      \
    \  {\n            a++;\n        }\n        if (b % 2 == 1)\n        {\n      \
    \      b--;\n        }\n        if (a < b)\n        {\n            result ~= generate_integers(a\
    \ + 2, b);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeccneafa.d(54): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42844d]\\n??:? void tmpeccneafa.__unittest_L50_C1()\
    \ [0x427fe0]\\n??:? void tmpeccneafa.__modtest() [0x4281d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cf2f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bdc2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43085d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430d0c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307e9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bd99]\\n??:? runModuleUnitTests [0x42cd05]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42889c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428823]\\n??:? _d_run_main [0x42878e]\\n??:? main [0x4281e3]\\\
    n??:? __libc_start_main [0xc1cf5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1e30frfq.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp1e30frfq.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp1e30frfq.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x93521554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc7qg_jh5.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpc7qg_jh5.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpc7qg_jh5.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xe1aa7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvknuwuoa.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428455]\\n??:? void tmpvknuwuoa.__unittest_L45_C1()\
    \ [0x427fe4]\\n??:? void tmpvknuwuoa.__modtest() [0x4281d4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c50f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43062d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430adc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b379]\\n??:? runModuleUnitTests [0x42c2e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428918]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42889f]\\n??:? _d_run_main [0x42880a]\\n??:? main [0x4281e7]\\\
    n??:? __libc_start_main [0x5acf9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt_dn7mrg.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpt_dn7mrg.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpt_dn7mrg.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x750b6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        while (a <= b)\n  \
    \      {\n            result ~= a;\n            a += 2;\n        }\n    }\n  \
    \  return result;\n}\n/*\n    Given a positive integer n, return the number of\
    \ positive integers less\n    than or equal to n that have at least one digit\
    \ that is a 4.\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdays0uop.d(44): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdays0uop.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdux80ov_.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpdux80ov_.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpdux80ov_.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xf2ca5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = new long[(a - b) / 2];\n       \
    \ foreach (i, ref e; result) {\n            e = a - i * 2;\n        }\n    } else\
    \ {\n        result = new long[(b - a) / 2];\n        foreach (i, ref e; result)\
    \ {\n            e = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprvdxppfa.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmprvdxppfa.__unittest_L33_C1()\
    \ [0x427ffa]\\n??:? void tmprvdxppfa.__modtest() [0x428174]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x428187]\\\
    n??:? __libc_start_main [0xbb61f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpepyfhq1m.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpepyfhq1m.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpepyfhq1m.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xf236554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ res;\n    if (a > b)\n    {\n        res = generate_integers(b, a);\n    }\n\
    \    else\n    {\n        res = new long[0];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  res ~= i;\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps8njd9tk.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmps8njd9tk.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmps8njd9tk.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0x51a8f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6ydgses.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj6ydgses.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[0];\n    }\n    else\n\
    \    {\n        long count = b - a + 1;\n        result = new long[count];\n \
    \       long i = 0;\n        foreach (long n; a .. b)\n        {\n           \
    \ if (n % 2 == 0)\n            {\n                result[i] = n;\n           \
    \     i++;\n            }\n        }\n        result = result[0 .. i];\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqgo64dhn.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42840d]\\n??:? void tmpqgo64dhn.__unittest_L41_C1()\
    \ [0x428016]\\n??:? void tmpqgo64dhn.__modtest() [0x428190]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b35a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305e5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a94]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430571]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b331]\\n??:? runModuleUnitTests [0x42c29d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288d0]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428857]\\n??:? _d_run_main [0x4287c2]\\n??:? main [0x4281a3]\\\
    n??:? __libc_start_main [0x8fa84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi61n6p54.d(52): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428415]\\n??:? void tmpi61n6p54.__unittest_L46_C1()\
    \ [0x428094]\\n??:? void tmpi61n6p54.__modtest() [0x428198]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce47]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcda]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430825]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cd4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4307b1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bcb1]\\n??:? runModuleUnitTests [0x42cc1d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428864]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287eb]\\n??:? _d_run_main [0x428756]\\n??:? main [0x4281ab]\\\
    n??:? __libc_start_main [0x297e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe8jzft1p.d(25): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpe8jzft1p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    foreach (i; a..b)\n    {\n      \
    \  if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphsri_lg8.d(25): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphsri_lg8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps1vxnifs.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmps1vxnifs.__unittest_L37_C1()\
    \ [0x428044]\\n??:? void tmps1vxnifs.__modtest() [0x428148]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc8a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430761]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc61]\\n??:? runModuleUnitTests [0x42cbcd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428814]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42879b]\\n??:? _d_run_main [0x428706]\\n??:? main [0x42815b]\\\
    n??:? __libc_start_main [0x1065a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        foreach (i; a..b)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphuossf93.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphuossf93.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + 2 * i;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6za5c6nn.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmp6za5c6nn.__unittest_L38_C1()\
    \ [0x427f88]\\n??:? void tmp6za5c6nn.__modtest() [0x428178]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x42818b]\\\
    n??:? __libc_start_main [0xfe4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + i * 2;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + i * 2;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw45jvwht.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmpw45jvwht.__unittest_L38_C1()\
    \ [0x427f88]\\n??:? void tmpw45jvwht.__modtest() [0x428178]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x42818b]\\\
    n??:? __libc_start_main [0xd7b80554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[0];\n    }\n    else\n\
    \    {\n        long[] temp = new long[(int)((b - a) / 2) + 1];\n        foreach\
    \ (i, ref e; temp)\n        {\n            e = a + i * 2;\n        }\n       \
    \ result = temp;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprkxr8kj6.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprkxr8kj6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0) \n    {\n        result = generate_integers(a,\
    \ b, 2L);\n    }\n    else \n    {\n        result = generate_integers(a + 1L,\
    \ b, 2L);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaydc_2fu.d(26): Error: function `tmpaydc_2fu.generate_integers(long\
    \ a, long b)` is not callable using argument types `(long, long, long)`\\n/tmp/tmpaydc_2fu.d(30):\
    \ Error: function `tmpaydc_2fu.generate_integers(long a, long b)` is not callable\
    \ using argument types `(long, long, long)`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpaydc_2fu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + i * 2;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + i * 2;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3d8d3jze.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283f5]\\n??:? void tmp3d8d3jze.__unittest_L38_C1()\
    \ [0x427f88]\\n??:? void tmp3d8d3jze.__modtest() [0x428178]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c43b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430559]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a08]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304e5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2a5]\\n??:? runModuleUnitTests [0x42c211]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428844]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287cb]\\n??:? _d_run_main [0x428736]\\n??:? main [0x42818b]\\\
    n??:? __libc_start_main [0xfd4f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a ..\
    \ b + 1)\n        {\n            if (i % 2 == 0)\n            {\n            \
    \    result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxiosuveq.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxiosuveq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ibbgh3e.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmp3ibbgh3e.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmp3ibbgh3e.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xeea3b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqlcul9or.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpqlcul9or.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmpqlcul9or.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x66b6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        foreach (i; a..b+1)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb7wkbmas.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpb7wkbmas.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = new long[(b - a) / 2\
    \ + 1];\n        foreach (i, ref e; result)\n        {\n            e = a + i\
    \ * 2;\n        }\n    }\n    else\n    {\n        result = new long[(b - a) /\
    \ 2];\n        foreach (i, ref e; result)\n        {\n            e = a + i *\
    \ 2 + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmdjiii73.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpmdjiii73.__unittest_L42_C1()\
    \ [0x427fb4]\\n??:? void tmpmdjiii73.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x68b7a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long c = a;\n\
    \        while (c <= b)\n        {\n            if (c % 2 == 0)\n            {\n\
    \                result ~= c;\n            }\n            c++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmzm34l2x.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpmzm34l2x.__unittest_L39_C1()\
    \ [0x427f48]\\n??:? void tmpmzm34l2x.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xa4001554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    long start = min(a, b);\n    long end = max(a, b);\n    foreach(i;\
    \ start..end)\n    {\n        if(i % 2 == 0)\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4fkrfii.d(20): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpa4fkrfii.d(21): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpa4fkrfii.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd8rvo_sw.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpd8rvo_sw.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpd8rvo_sw.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x5cec7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    foreach (i; a..b)\n    {\n        if (i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt55jlem4.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmpt55jlem4.__unittest_L35_C1()\
    \ [0x428020]\\n??:? void tmpt55jlem4.__modtest() [0x428124]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cd7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430661]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b10]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305ed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bbe5]\\n??:? runModuleUnitTests [0x42cb51]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x428137]\\\
    n??:? __libc_start_main [0x588d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[(a - b) / 2];\n  \
    \      long i = 0;\n        foreach (long x; a.iota)\n        {\n            if\
    \ (x % 2 == 0)\n            {\n                result[i] = x;\n              \
    \  i++;\n            }\n        }\n    }\n    else\n    {\n        result = new\
    \ long[(b - a) / 2];\n        long i = 0;\n        foreach (long x; a.iota)\n\
    \        {\n            if (x % 2 == 0)\n            {\n                result[i]\
    \ = x;\n                i++;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpng1uw_38.d(24): Error: no property `iota` for type `long`\\n/tmp/tmpng1uw_38.d(37):\
    \ Error: no property `iota` for type `long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpng1uw_38.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = new long[];\n\
    \    foreach(i; min..max+1)\n    {\n        if(i % 2 == 0)\n        {\n      \
    \      result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp44y9ryyu.d(19): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp44y9ryyu.d(20): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\n/tmp/tmp44y9ryyu.d(21): Error: new can only\
    \ create structs, dynamic arrays or class objects, not `long[]`\\'s\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp44y9ryyu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        if (a % 2 == 0) {\n            result = new long[(b - a) / 2\
    \ + 1];\n        } else {\n            result = new long[(b - a) / 2];\n     \
    \   }\n        foreach (i, ref e; result) {\n            e = a + 2 * i;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpapztfhja.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmpapztfhja.__unittest_L34_C1()\
    \ [0x427f80]\\n??:? void tmpapztfhja.__modtest() [0x428170]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c433]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430551]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a00]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304dd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b29d]\\n??:? runModuleUnitTests [0x42c209]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42883c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c3]\\n??:? _d_run_main [0x42872e]\\n??:? main [0x428183]\\\
    n??:? __libc_start_main [0x394fd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx42aysqm.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpx42aysqm.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpx42aysqm.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x1979b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a .. b + 1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj6jadajh.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpj6jadajh.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpj6jadajh.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x14856554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a++;\n        }\n        for\
    \ (; a < b; a += 2)\n        {\n            result ~= a;\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvyruh2m4.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283e5]\\n??:? void tmpvyruh2m4.__unittest_L39_C1()\
    \ [0x427f74]\\n??:? void tmpvyruh2m4.__modtest() [0x428164]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce17]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcaa]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307f5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430ca4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430781]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc81]\\n??:? runModuleUnitTests [0x42cbed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428834]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287bb]\\n??:? _d_run_main [0x428726]\\n??:? main [0x428177]\\\
    n??:? __libc_start_main [0x7b7fa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxus6im9d.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpxus6im9d.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpxus6im9d.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xce3e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        int i = 0;\n        for (long l = a; l <= b; l += 2)\n        {\n   \
    \         result[i] = l;\n            i++;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5jyxu_so.d(26): Error: C style cast illegal, use `cast(int)((b\
    \ - a) / 2)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5jyxu_so.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjcu2df_j.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpjcu2df_j.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpjcu2df_j.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xcf768554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaqrxd8te.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpaqrxd8te.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpllahjfi7.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpllahjfi7.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpllahjfi7.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xeb37c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgotzlms.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxgotzlms.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        while (a <= b)\n  \
    \      {\n            result ~= a;\n            a += 2;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8sr0a1m9.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283ed]\\n??:? void tmp8sr0a1m9.__unittest_L44_C1()\
    \ [0x427f7c]\\n??:? void tmp8sr0a1m9.__modtest() [0x42816c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ce1f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bcb2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430cac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430789]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc89]\\n??:? runModuleUnitTests [0x42cbf5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42883c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c3]\\n??:? _d_run_main [0x42872e]\\n??:? main [0x42817f]\\\
    n??:? __libc_start_main [0x8bfe6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpolwbzq8i.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpolwbzq8i.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpolwbzq8i.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x6915f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_2xqnavz.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283a5]\\n??:? void tmp_2xqnavz.__unittest_L34_C1()\
    \ [0x427f38]\\n??:? void tmp_2xqnavz.__modtest() [0x428128]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3eb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b27e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430509]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430495]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b255]\\n??:? runModuleUnitTests [0x42c1c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877b]\\n??:? _d_run_main [0x4286e6]\\n??:? main [0x42813b]\\\
    n??:? __libc_start_main [0xf3ed4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwteqh4_5.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpwteqh4_5.__unittest_L37_C1()\
    \ [0x427f60]\\n??:? void tmpwteqh4_5.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xe76d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppiv7wa3j.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmppiv7wa3j.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmppiv7wa3j.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0x91c5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = new long[];\n\
    \    foreach(i; min..max+1)\n    {\n        if(i % 2 == 0)\n        {\n      \
    \      result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp99x4yxmf.d(19): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmp99x4yxmf.d(20): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\n/tmp/tmp99x4yxmf.d(21): Error: new can only\
    \ create structs, dynamic arrays or class objects, not `long[]`\\'s\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp99x4yxmf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    //\
    \ TODO: implement this function\n    long[] result;\n    if (a < b)\n    {\n \
    \       result = new long[(b - a) / 2 + 1];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + 2 * i;\n        }\n    }\n    else\n\
    \    {\n        result = new long[(a - b) / 2 + 1];\n        for (long i = 0;\
    \ i < result.length; i++)\n        {\n            result[i] = b + 2 * i;\n   \
    \     }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpka7nww9b.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmpka7nww9b.__unittest_L39_C1()\
    \ [0x427fb4]\\n??:? void tmpka7nww9b.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4df]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b372]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305fd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430aac]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430589]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b349]\\n??:? runModuleUnitTests [0x42c2b5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288e8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42886f]\\n??:? _d_run_main [0x4287da]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x3af72554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkbgoknyw.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428455]\\n??:? void tmpkbgoknyw.__unittest_L45_C1()\
    \ [0x427fe4]\\n??:? void tmpkbgoknyw.__modtest() [0x4281d4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c50f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b3a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x43062d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430adc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4305b9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b379]\\n??:? runModuleUnitTests [0x42c2e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428918]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42889f]\\n??:? _d_run_main [0x42880a]\\n??:? main [0x4281e7]\\\
    n??:? __libc_start_main [0xea84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprw_mxgvp.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmprw_mxgvp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjd5ji67s.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283b5]\\n??:? void tmpjd5ji67s.__unittest_L37_C1()\
    \ [0x427f48]\\n??:? void tmpjd5ji67s.__modtest() [0x428138]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cde7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc7a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430751]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc51]\\n??:? runModuleUnitTests [0x42cbbd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428804]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878b]\\n??:? _d_run_main [0x4286f6]\\n??:? main [0x42814b]\\\
    n??:? __libc_start_main [0xdad15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ int i = 0;\n        foreach (long x; a..b)\n        {\n            if (x % 2\
    \ == 0)\n            {\n                result[i] = x;\n                i++;\n\
    \            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyzlmv3y7.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283e5]\\n??:? void tmpyzlmv3y7.__unittest_L39_C1()\
    \ [0x427f78]\\n??:? void tmpyzlmv3y7.__modtest() [0x428168]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c49f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b332]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305bd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a6c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430549]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b309]\\n??:? runModuleUnitTests [0x42c275]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4288a8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42882f]\\n??:? _d_run_main [0x42879a]\\n??:? main [0x42817b]\\\
    n??:? __libc_start_main [0x6d54a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2d79dft7.d(26): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2d79dft7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0) \n    {\n        result = new long[(b - a) /\
    \ 2 + 1];\n        foreach (i, ref e; result) \n        {\n            e = a +\
    \ 2 * i;\n        }\n    }\n    else \n    {\n        result = new long[(b - a)\
    \ / 2];\n        foreach (i, ref e; result) \n        {\n            e = a + 2\
    \ * i + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7mtmd7ro.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428425]\\n??:? void tmp7mtmd7ro.__unittest_L42_C1()\
    \ [0x427fb4]\\n??:? void tmp7mtmd7ro.__modtest() [0x4281a4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c46b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430589]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430515]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2d5]\\n??:? runModuleUnitTests [0x42c241]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428874]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287fb]\\n??:? _d_run_main [0x428766]\\n??:? main [0x4281b7]\\\
    n??:? __libc_start_main [0x6f7e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    foreach (i; a..b+1)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hb1s_8x.d(25): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp7hb1s_8x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_dxgerkz.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmp_dxgerkz.__unittest_L37_C1()\
    \ [0x42804c]\\n??:? void tmp_dxgerkz.__modtest() [0x428150]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cda3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430689]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430b38]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430615]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc0d]\\n??:? runModuleUnitTests [0x42cb79]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42881c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287a3]\\n??:? _d_run_main [0x42870e]\\n??:? main [0x428163]\\\
    n??:? __libc_start_main [0xeb656554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_wrhbzcu.d(25): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_wrhbzcu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbhmhtjlv.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283c5]\\n??:? void tmpbhmhtjlv.__unittest_L37_C1()\
    \ [0x428044]\\n??:? void tmpbhmhtjlv.__modtest() [0x428148]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42cdf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42bc8a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4307d5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430c84]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430761]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42bc61]\\n??:? runModuleUnitTests [0x42cbcd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428814]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42879b]\\n??:? _d_run_main [0x428706]\\n??:? main [0x42815b]\\\
    n??:? __libc_start_main [0x920d7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = new long[];\n\
    \    foreach(i; min..max)\n    {\n        if(i % 2 == 0)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaqihz7_6.d(19): Error: undefined identifier `min`, did you mean\
    \ function `main`?\\n/tmp/tmpaqihz7_6.d(20): Error: undefined identifier `max`,\
    \ did you mean function `fmax`?\\n/tmp/tmpaqihz7_6.d(21): Error: new can only\
    \ create structs, dynamic arrays or class objects, not `long[]`\\'s\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqihz7_6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

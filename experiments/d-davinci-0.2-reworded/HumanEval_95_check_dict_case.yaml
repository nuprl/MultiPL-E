name: HumanEval_95_check_dict_case
language: d
prompt: "import std.math;\n/*\n\n    Given an associative array, return true if all\
  \ keys are strings in lower \n    case or all keys are strings in upper case, else\
  \ return false.\n    The function should return false is the given associative array\
  \ is empty.\n    Examples:\n    >>> check_dict_case([\"a\": \"apple\", \"b\": \"\
  banana\"].nullable)\n    true\n    >>> check_dict_case([\"a\": \"apple\", \"A\"\
  : \"banana\", \"B\": \"banana\"].nullable)\n    false\n    >>> check_dict_case([\"\
  a\": \"apple\", 8L: \"banana\", \"a\": \"apple\"].nullable)\n    false\n    >>>\
  \ check_dict_case([\"Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"].nullable)\n\
  \    false\n    >>> check_dict_case([\"STATE\": \"NC\", \"ZIP\": \"12345\"].nullable)\n\
  \    true\n    \n*/\nbool check_dict_case(Nullable!(string[string]) dict) \n"
tests: "unittest\n{\n    alias candidate = check_dict_case;\n\n    assert(candidate([\"\
  p\": \"pineapple\", \"b\": \"banana\"].nullable) == true);\n    assert(candidate([\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"].nullable) == false);\n\
  \    assert(candidate([\"p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"\
  ].nullable) == false);\n    assert(candidate([\"Name\": \"John\", \"Age\": \"36\"\
  , \"City\": \"Houston\"].nullable) == false);\n    assert(candidate([\"STATE\":\
  \ \"NC\", \"ZIP\": \"12345\"].nullable) == true);\n    assert(candidate([\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"].nullable) == true);\n    assert(candidate(Nullable!(string[string]).init)\
  \ == false);\n}\nvoid main(){}"
completions: ["{\n    if (dict is null)\n        return false;\n    bool is_lower\
    \ = true;\n    bool is_upper = true;\n    foreach (key; dict.keys)\n    {\n  \
    \      is_lower = is_lower && isLower(key);\n        is_upper = is_upper && isUpper(key);\n\
    \    }\n    return is_lower || is_upper;\n}", "{\n    if (dict is null)\n    \
    \    return false;\n    bool is_lower = false;\n    bool is_upper = false;\n \
    \   foreach (key, value; dict)\n    {\n        if (key.isUpper)\n            is_upper\
    \ = true;\n        else if (key.isLower)\n            is_lower = true;\n     \
    \   else\n            return false;\n    }\n    return is_lower || is_upper;\n\
    }", "{\n    if (dict is null)\n        return false;\n    bool is_lower = true;\n\
    \    bool is_upper = true;\n    foreach (key; dict.keys) \n    {\n        if (key.isUpper)\n\
    \            is_lower = false;\n        else if (key.isLower)\n            is_upper\
    \ = false;\n        else\n            return false;\n    }\n    return is_lower\
    \ || is_upper;\n}", "{\n    if (dict is null) return false;\n    if (dict.length\
    \ == 0) return false;\n    bool lower = true;\n    bool upper = true;\n    foreach\
    \ (key; dict.keys)\n    {\n        if (key.isUpper) upper = false;\n        if\
    \ (key.isLower) lower = false;\n    }\n    return lower || upper;\n}", "{\n  \
    \  if (dict is null)\n        return false;\n    if (dict.length == 0)\n     \
    \   return false;\n    bool all_lower = true;\n    bool all_upper = true;\n  \
    \  foreach (key; dict.keys)\n    {\n        if (key.isUpper)\n            all_lower\
    \ = false;\n        else\n            all_upper = false;\n    }\n    return all_lower\
    \ || all_upper;\n}", "{\n    if (dict is null) return false;\n    if (dict.length\
    \ == 0) return false;\n    bool all_lower = true;\n    bool all_upper = true;\n\
    \    foreach (key; dict.keys) \n    {\n        if (key.isUpper) all_lower = false;\n\
    \        if (key.isLower) all_upper = false;\n    }\n    return all_lower || all_upper;\n\
    }", "{\n    if (dict is null) return false;\n    bool isUpper = true;\n    bool\
    \ isLower = true;\n    foreach (key; dict.keys) \n    {\n        isUpper = isUpper\
    \ && key.isUpper;\n        isLower = isLower && key.isLower;\n    }\n    return\
    \ isUpper || isLower;\n}", "{\n    if (dict is null) return false;\n    bool is_lower\
    \ = true;\n    bool is_upper = true;\n    foreach (key; dict.keys)\n    {\n  \
    \      is_lower = is_lower && key.isLower;\n        is_upper = is_upper && key.isUpper;\n\
    \    }\n    return is_lower || is_upper;\n}", "{\n    if (dict is null)\n    \
    \    return false;\n    if (dict.length == 0)\n        return false;\n    bool\
    \ is_lower = dict.keys[0].isLower;\n    foreach (key; dict.keys)\n    {\n    \
    \    if (key.isLower != is_lower)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (dict is null) return false;\n    if (dict.length == 0)\
    \ return false;\n    bool all_lower = true;\n    bool all_upper = true;\n    foreach\
    \ (key; dict.keys)\n    {\n        if (key.isUpper) all_lower = false;\n     \
    \   if (key.isLower) all_upper = false;\n    }\n    return all_lower || all_upper;\n\
    }", "{\n    if (dict is null) return false;\n    if (dict.length == 0) return\
    \ false;\n    bool is_lower = true;\n    bool is_upper = true;\n    foreach (key;\
    \ dict.keys)\n    {\n        if (key.isUpper) is_lower = false;\n        if (key.isLower)\
    \ is_upper = false;\n    }\n    return is_lower || is_upper;\n}", "{\n    if (dict\
    \ is null) return false;\n    if (dict.length == 0) return false;\n    bool is_lower\
    \ = true;\n    bool is_upper = true;\n    foreach (key; dict.keys)\n    {\n  \
    \      if (key.isUpper) is_lower = false;\n        if (key.isLower) is_upper =\
    \ false;\n    }\n    return is_lower || is_upper;\n}", "{\n    if (dict is null)\
    \ return false;\n    if (dict.length == 0) return false;\n    bool is_lower =\
    \ dict.keys[0].isLower;\n    foreach (k, v; dict)\n    {\n        if (k.isLower\
    \ != is_lower) return false;\n    }\n    return true;\n}", "{\n    if (dict is\
    \ null) \n    {\n        return false;\n    }\n    bool is_lower = true;\n   \
    \ bool is_upper = true;\n    foreach (key; dict.keys) \n    {\n        is_lower\
    \ &= key.isLower;\n        is_upper &= key.isUpper;\n    }\n    return is_lower\
    \ || is_upper;\n}", "{\n    if (dict is null) \n    {\n        return false;\n\
    \    }\n    bool all_lower = true;\n    bool all_upper = true;\n    foreach (key;\
    \ dict.keys) \n    {\n        if (key.isUpper) \n        {\n            all_lower\
    \ = false;\n        }\n        else if (key.isLower) \n        {\n           \
    \ all_upper = false;\n        }\n        else \n        {\n            return\
    \ false;\n        }\n    }\n    return all_lower || all_upper;\n}", "{\n    if\
    \ (dict is null)\n        return false;\n    bool all_lower = true;\n    bool\
    \ all_upper = true;\n    foreach (key; dict.keys)\n    {\n        if (key.isUpper)\n\
    \            all_lower = false;\n        else if (key.isLower)\n            all_upper\
    \ = false;\n        else\n            return false;\n    }\n    return all_lower\
    \ || all_upper;\n}", "{\n    if (dict is null) return false;\n    if (dict.length\
    \ == 0) return false;\n    bool is_lower = dict.keys[0].isLower;\n    foreach\
    \ (key; dict.keys)\n    {\n        if (key.isLower != is_lower) return false;\n\
    \    }\n    return true;\n}", "{\n    if (dict is null) return false;\n    if\
    \ (dict.length == 0) return false;\n    bool is_lower = false;\n    bool is_upper\
    \ = false;\n    foreach (k, v; dict)\n    {\n        if (k.isUpper) is_upper =\
    \ true;\n        if (k.isLower) is_lower = true;\n    }\n    return is_lower ^\
    \ is_upper;\n}", "{\n    if (dict is null) return false;\n    if (dict.length\
    \ == 0) return false;\n    bool all_lower = true;\n    bool all_upper = true;\n\
    \    foreach (key; dict.keys)\n    {\n        if (key.isUpper) all_lower = false;\n\
    \        if (key.isLower) all_upper = false;\n    }\n    return all_lower || all_upper;\n\
    }", "{\n    if (dict is null) \n    {\n        return false;\n    }\n    if (dict.length\
    \ == 0) \n    {\n        return false;\n    }\n    bool is_lower = true;\n   \
    \ bool is_upper = true;\n    foreach (key; dict.keys) \n    {\n        if (key.isUpper)\
    \ \n        {\n            is_lower = false;\n        }\n        else if (key.isLower)\
    \ \n        {\n            is_upper = false;\n        }\n        else \n     \
    \   {\n            return false;\n        }\n    }\n    return is_lower || is_upper;\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

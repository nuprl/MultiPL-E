name: HumanEval_52_below_threshold
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl8_vupmr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpl8_vupmr.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpl8_vupmr.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x94584554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiafjxbvn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpiafjxbvn.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpiafjxbvn.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x380f6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptf_jxh5h.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmptf_jxh5h.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmptf_jxh5h.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x56033554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp50oh5gf8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp50oh5gf8.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp50oh5gf8.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x8e537554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps7zfu7xw.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmps7zfu7xw.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmps7zfu7xw.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x228e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpekxi3gk0.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpekxi3gk0.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpekxi3gk0.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x8d45d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0eksszos.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0eksszos.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp0eksszos.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xbeae2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0pbcomwx.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0pbcomwx.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmp0pbcomwx.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6b20a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplatzrc23.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmplatzrc23.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmplatzrc23.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x304c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8dx0wiax.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp8dx0wiax.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp8dx0wiax.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xc979554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptbbk9kgv.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmptbbk9kgv.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmptbbk9kgv.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x5a07d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0yy5f55o.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0yy5f55o.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp0yy5f55o.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xbce31554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2h426f5f.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp2h426f5f.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp2h426f5f.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x47685554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplgd6y92w.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmplgd6y92w.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmplgd6y92w.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xbd709554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps4nxj31r.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmps4nxj31r.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmps4nxj31r.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x4fe6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the array l that are below threshold t.\n\
    \    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(x; l)\n    {\n        if(x < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong below_threshold_count_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(x; l)\n    {\n        if(x < t)\n            count++;\n    }\n  \
    \  return count;\n}\n/*\nReturn the number of elements in the array l that are\
    \ below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> below_threshold_count([1L, 20L, 4\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8qxe75k9.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8qxe75k9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9e54alnk.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp9e54alnk.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp9e54alnk.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x21447554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) {\n        if (x > t) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5tp4vxo2.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp5tp4vxo2.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp5tp4vxo2.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x1de3a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppx66te9y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmppx66te9y.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmppx66te9y.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x609a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppequpmh7.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmppequpmh7.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmppequpmh7.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb2303554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp83y1vn_5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp83y1vn_5.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp83y1vn_5.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x67ddd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpidrtp4iy.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpidrtp4iy.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpidrtp4iy.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x246e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4whyf8mj.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp4whyf8mj.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp4whyf8mj.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6a23b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp11en9g1n.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp11en9g1n.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp11en9g1n.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6943a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvn01gkb6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpvn01gkb6.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpvn01gkb6.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x4858554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfbn00zap.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpfbn00zap.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpfbn00zap.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xa1a45554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxfxs6gzw.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpxfxs6gzw.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpxfxs6gzw.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x5f9ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l) \n    {\n        if(x >= t) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n/*\nReturn true if all numbers in the array\
    \ l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n    \n\
    */\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoo7yrjy_.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpoo7yrjy_.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpoo7yrjy_.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x87ae1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp23o3c_ws.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp23o3c_ws.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp23o3c_ws.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xffdba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp21meju0j.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp21meju0j.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp21meju0j.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x1937e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqvmlzltg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpqvmlzltg.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpqvmlzltg.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x3a671554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(l;\
    \ i)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqdcwqju1.d(13): Error: undefined identifier `i`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqdcwqju1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpey37ftzk.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpey37ftzk.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpey37ftzk.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xfbb8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr290twwu.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpr290twwu.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpr290twwu.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xd2f2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4aubl82x.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp4aubl82x.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp4aubl82x.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x49695554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpymqo6768.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpymqo6768.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpymqo6768.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xeb763554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd6u0xp58.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpd6u0xp58.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpd6u0xp58.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xdb4c0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1.0, 2.0, 4.0, 10.0], 100.0)\n    true\n    >>> below_threshold([1.0,\
    \ 20.0, 4.0, 10.0], 5.0)\n    false\n    \n*/\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaify87a0.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpaify87a0.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpaify87a0.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x2b9d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzfa8lke_.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpzfa8lke_.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpzfa8lke_.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x851ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt4mfu1sj.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpt4mfu1sj.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpt4mfu1sj.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x219a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk1f7z2pg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpk1f7z2pg.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpk1f7z2pg.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xa429b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyqzs0inc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpyqzs0inc.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpyqzs0inc.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xe3370554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4gylow54.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp4gylow54.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp4gylow54.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6c715554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_vjwr7jv.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp_vjwr7jv.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmp_vjwr7jv.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xd53e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(l;\
    \ e)\n    {\n        if(e > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9x2eic_d.d(13): Error: undefined identifier `e`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9x2eic_d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x > t) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n/*\nReturn true if all numbers in the array\
    \ l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n    \n\
    */\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa9o_55r_.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpa9o_55r_.__unittest_L30_C1()\
    \ [0x427f4b]\\n??:? void tmpa9o_55r_.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6f39b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the array l that are below threshold t.\n\
    \    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong below_threshold_count3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n   \
    \ return count;\n}\n/*\nReturn the number of elements in the array l that are\
    \ below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> below_threshold_count([1L, 20L, 4L,\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj97kcbjr.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj97kcbjr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjclc4s1t.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpjclc4s1t.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpjclc4s1t.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf82c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn the number of elements in the array l that are below threshold\
    \ t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong below_threshold_count3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the array l that are\
    \ below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> below_threshold_count([1L, 20L\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz6ojuljz.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6ojuljz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk75p29r1.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpk75p29r1.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpk75p29r1.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x570e6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg2mv85eg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpg2mv85eg.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpg2mv85eg.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x53e26554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpau_krwlv.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpau_krwlv.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpau_krwlv.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x7c9d7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx_tzvre9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx_tzvre9.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpx_tzvre9.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x2010c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpndx_t0iq.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpndx_t0iq.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpndx_t0iq.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x81eee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp67l15bd0.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp67l15bd0.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp67l15bd0.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x5bec6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n/*\nReturn true if all numbers in the array\
    \ l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n    \n\
    */\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppk16oa0z.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmppk16oa0z.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmppk16oa0z.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb482a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0mojk41i.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0mojk41i.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmp0mojk41i.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x386d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7a1sb8c1.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp7a1sb8c1.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp7a1sb8c1.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf9749554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\n\
    long sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n\
    \        sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all numbers\
    \ in the array l that are below threshold t.\n    >>> sum_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    5L\n*/\nlong sum_below_threshold(long[] l, long t) \n{\n    long sum\
    \ = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            sum += i;\n \
    \   }\n    return sum;\n}\n/*\nReturn the sum of all numbers in the array l that\
    \ are below threshold t.\n    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L], 5L)\n    5L\n*/\nlong\
    \ sum_below_threshold(long[] l, long t) \n{\n    long sum = 0;\n    foreach(i;\
    \ l)\n    {\n        if(i < t)\n            sum += i;\n    }\n    return sum;\n\
    }\n/*\nReturn the sum of all numbers in the array l that are below threshold t.\n\
    \    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    5L\n*/\n\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4vrpc7ck.d(87): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283bd]\\n??:? void tmp4vrpc7ck.__unittest_L78_C1()\
    \ [0x42812b]\\n??:? void tmp4vrpc7ck.__modtest() [0x428140]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c3a7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b23a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4303cd]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43087c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430359]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b211]\\n??:? runModuleUnitTests [0x42c17d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42880c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428793]\\n??:? _d_run_main [0x4286fe]\\n??:? main [0x428153]\\\
    n??:? __libc_start_main [0x9eb51554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo1y9aqs6.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpo1y9aqs6.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpo1y9aqs6.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x3d9db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzxitwn22.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpzxitwn22.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpzxitwn22.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x45018554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr62a03w2.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpr62a03w2.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpr62a03w2.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xbf0ff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn5u7u9eg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpn5u7u9eg.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpn5u7u9eg.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x638b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzbxxwm5g.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpzbxxwm5g.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpzbxxwm5g.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x9f616554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the array l that are below the threshold\
    \ t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below the threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below the threshold t.\n    >>> below_threshold_count([1L, 2L, 4L,\
    \ 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n\
    \    2\n*/\nlong below_threshold_count_3(long[] l, long t) \n{\n    long count\
    \ = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n  \
    \  }\n    return count;\n}\n/*\nReturn the number of elements in the array l that\
    \ are below the threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L,\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbgikthfo.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbgikthfo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1eb__6_w.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp1eb__6_w.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp1eb__6_w.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf15b2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaijxftz2.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpaijxftz2.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpaijxftz2.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xef165554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(e;\
    \ l)\n    {\n        if(e >= t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo5vckqs3.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpo5vckqs3.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpo5vckqs3.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x7e18554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfnezre5v.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpfnezre5v.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpfnezre5v.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x87db1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3f4iltzp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp3f4iltzp.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp3f4iltzp.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x56d39554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the array l that are below threshold t.\n\
    \    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong below_threshold_count_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n  \
    \  return count;\n}\n/*\nReturn the number of elements in the array l that are\
    \ below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> below_threshold_count([1L, 20L, 4\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm618gqp9.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm618gqp9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvor_yqmo.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpvor_yqmo.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpvor_yqmo.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x30d0d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxjpemz4y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpxjpemz4y.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpxjpemz4y.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x86400554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj1wleumy.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpj1wleumy.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpj1wleumy.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x12f2e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8dzqu14p.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp8dzqu14p.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp8dzqu14p.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x19abf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk402w0wu.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpk402w0wu.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpk402w0wu.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x9a109554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptff_w0mf.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmptff_w0mf.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmptff_w0mf.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb1b4d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6l9j6hni.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp6l9j6hni.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp6l9j6hni.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x487ea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsyvk34kp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpsyvk34kp.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpsyvk34kp.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xfef41554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjzi5smnu.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpjzi5smnu.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpjzi5smnu.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x818e8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4evuta0t.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp4evuta0t.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp4evuta0t.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x4743554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp63mqr1qp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp63mqr1qp.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp63mqr1qp.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xc3147554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcipu8fda.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpcipu8fda.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpcipu8fda.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xbefff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of the numbers in the array l.\n    >>> sum_of_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_of_numbers([1L, -2L, -4L, 10L])\n    5L\n\
    */\nlong sum_of_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(x; l)\n\
    \    {\n        sum += x;\n    }\n    return sum;\n}\n/*\nReturn the number of\
    \ elements in the array l that are equal to e.\n    >>> number_of_matches([1L,\
    \ 2L, 4L, 10L], 1L)\n    1L\n    >>> number_of_matches([1L, 2L, 4L, 10L], 4L)\n\
    \    1L\n    >>> number_of_matches([1L, 2L, 4L, 10L], 5L)\n    0L\n*/\nlong number_of_matches(long[]\
    \ l, long e) \n{\n    long count = 0;\n    foreach(x; l)\n    {\n        if(x\
    \ == e)\n            count++;\n    }\n    return count;\n}\n/*\nReturn the number\
    \ of elements in the array l that are greater than e.\n    >>> number_of_matches([1L,\
    \ 2L, 4L, 10L], 1L)\n    3L\n    >>> number_of_matches([1L, 2L, 4L, 10L], 4L)\n\
    \    1L\n    >>> number_of_matches([1L, 2L, 4L, 10L], 5L)\n    2L\n*/\nlong number_of_greater_than(long[]\
    \ l, long e) \n{\n    long count = 0;\n    foreach(x; l)\n    {\n        if(x\
    \ > e)\n            count++;\n    }\n    return count;\n}\n/*\nReturn the number\
    \ of elements in the array l that are less than e.\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz82pjlsh.d(74): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz82pjlsh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0dfmifjz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0dfmifjz.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp0dfmifjz.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xd3d3d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6orh0sm6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp6orh0sm6.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp6orh0sm6.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x2cffe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\n\
    long sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n\
    \        sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all numbers\
    \ in the array l.\n    >>> sum_numbers([1L, 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L,\
    \ 20L, 4L, 10L])\n    35L\n*/\nlong sum_numbers(long[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n    return sum;\n}\n\
    /*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1L, 2L,\
    \ 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\nlong\
    \ sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n   \
    \     sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all numbers\
    \ in the array l.\n    >>> sum_numbers([1L, 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L,\
    \ 20L, 4L, 10L])\n    35L\n*/\nlong sum_numbers(long[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n    return sum;\n}\n\
    /*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgmlu5u1r.d(84): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmlu5u1r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpia0j5c89.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpia0j5c89.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpia0j5c89.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x67927554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l) \n    {\n        if(i >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprmnl9em8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmprmnl9em8.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmprmnl9em8.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x358f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplllgq4ue.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmplllgq4ue.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmplllgq4ue.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x5eef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfflkob95.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpfflkob95.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpfflkob95.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6198f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwtule2q8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpwtule2q8.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpwtule2q8.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x27ad9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdjs4z_zp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpdjs4z_zp.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpdjs4z_zp.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x49d02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaaaxx2b6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpaaaxx2b6.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpaaaxx2b6.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x794e2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzh9hme45.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpzh9hme45.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpzh9hme45.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xc3c55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpon47wx11.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpon47wx11.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpon47wx11.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x1fef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the array l that are below threshold t.\n\
    \    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong below_threshold_count(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the array l that are below threshold t.\n    >>> below_threshold_count([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong below_threshold_count2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the array l\
    \ that are below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong below_threshold_count3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n   \
    \ return count;\n}\n/*\nReturn the number of elements in the array l that are\
    \ below threshold t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> below_threshold_count([1L, 20L, 4L,\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8z_kvbxi.d(71): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8z_kvbxi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoiwz3e_c.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpoiwz3e_c.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpoiwz3e_c.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xfcb63554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of the numbers in the array l.\n    >>> sum_array([1L, 2L,\
    \ 3L])\n    6L\n    >>> sum_array([])\n    0L\n*/\nlong sum_array(long[] l) \n\
    {\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n   \
    \ return sum;\n}\n/*\nReturn the sum of the numbers in the array l.\n    >>> sum_array([1L,\
    \ 2L, 3L])\n    6L\n    >>> sum_array([])\n    0L\n*/\nlong sum_array(long[] l)\
    \ \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n\
    \    return sum;\n}\n/*\nReturn the sum of the numbers in the array l.\n    >>>\
    \ sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([])\n    0L\n*/\nlong sum_array(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n   \
    \ }\n    return sum;\n}\n/*\nReturn the sum of the numbers in the array l.\n \
    \   >>> sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([])\n    0L\n*/\nlong\
    \ sum_array(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n     \
    \   sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of the numbers in\
    \ the array l.\n    >>> sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([])\n\
    \    0L\n*/\nlong sum_array(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n\
    \    {\n        sum += i;\n    }\n   \nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa280ru4l.d(99): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa280ru4l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4plse48f.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp4plse48f.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp4plse48f.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x186c4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp13aismbc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp13aismbc.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp13aismbc.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x907a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi75nv_2w.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpi75nv_2w.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpi75nv_2w.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x66474554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx24daocr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx24daocr.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpx24daocr.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x64a64554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxoiv2l4z.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpxoiv2l4z.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpxoiv2l4z.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x64794554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9xmtll_7.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp9xmtll_7.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp9xmtll_7.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6c12c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6inhaupa.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp6inhaupa.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp6inhaupa.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x245bb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\n\
    long sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n\
    \        sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all numbers\
    \ in the array l.\n    >>> sum_numbers([1L, 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L,\
    \ 20L, 4L, 10L])\n    35L\n*/\nlong sum_numbers(long[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n    return sum;\n}\n\
    /*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1L, 2L,\
    \ 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\nlong\
    \ sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n   \
    \     sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all numbers\
    \ in the array l.\n    >>> sum_numbers([1L, 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L,\
    \ 20L, 4L, 10L])\n    35L\n*/\nlong sum_numbers(long[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l)\n    {\n        sum += i;\n    }\n    return sum;\n}\n\
    /*\nReturn the sum of all numbers in the array l.\n    >>> sum_numbers([1\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_4h_9qvv.d(84): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_4h_9qvv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ n; l)\n    {\n        if(n > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqh94wrl5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpqh94wrl5.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpqh94wrl5.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x7b554554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpab89hqwn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpab89hqwn.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpab89hqwn.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x2493f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt2tyupsh.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpt2tyupsh.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpt2tyupsh.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb3dca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2j8m3kti.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp2j8m3kti.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp2j8m3kti.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x65666554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuh9ag45g.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpuh9ag45g.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpuh9ag45g.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xd85d4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc5t3vhdd.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpc5t3vhdd.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpc5t3vhdd.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x19d1f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0troi75m.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp0troi75m.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmp0troi75m.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x7206d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp219tpx9t.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp219tpx9t.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp219tpx9t.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xda561554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9c3acevg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp9c3acevg.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp9c3acevg.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x1c551554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7f07a05t.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp7f07a05t.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp7f07a05t.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x1c39d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpao59ta84.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpao59ta84.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpao59ta84.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x36fa8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9778ie8t.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp9778ie8t.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp9778ie8t.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x4e338554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx5nmel3x.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx5nmel3x.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpx5nmel3x.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x9a4eb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3hns4gpu.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp3hns4gpu.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp3hns4gpu.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xdd132554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv_v04stn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpv_v04stn.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpv_v04stn.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb2991554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuojxjupm.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpuojxjupm.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpuojxjupm.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x75299554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i >= t) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq4wz4095.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpq4wz4095.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpq4wz4095.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6cabc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l) \n    {\n        if(i >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l) \n    {\n        if(i >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprb1stghm.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmprb1stghm.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmprb1stghm.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf9bbe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpafcz_x0b.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpafcz_x0b.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpafcz_x0b.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb8d92554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbyp4t2w6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpbyp4t2w6.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpbyp4t2w6.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xebbf4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp086ymjjo.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp086ymjjo.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp086ymjjo.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xed0ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq994_axb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpq994_axb.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpq994_axb.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x8b934554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i >= t) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n/*\nReturn true if all numbers in the array\
    \ l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n    \n\
    */\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgumhdqso.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpgumhdqso.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpgumhdqso.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xcab69554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5_85_2_f.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp5_85_2_f.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp5_85_2_f.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x572a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i > t) \n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpacs3u9zc.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpacs3u9zc.__unittest_L22_C1()\
    \ [0x427f4b]\\n??:? void tmpacs3u9zc.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xd2c28554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdw7bwhrx.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpdw7bwhrx.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpdw7bwhrx.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf2023554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn true if all numbers in the array l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6q0cvqxr.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp6q0cvqxr.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmp6q0cvqxr.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x54cbc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    return all!(a\
    \ => a < t)(l);\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc9ved4vh.d(13): Error: template instance `all!((a) => a < t)`\
    \ template `all` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpc9ved4vh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i > t) \n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzyuh9b6a.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpzyuh9b6a.__unittest_L22_C1()\
    \ [0x427f4b]\\n??:? void tmpzyuh9b6a.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x6185e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph65aaylu.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmph65aaylu.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmph65aaylu.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xa8983554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l)\n    {\n        if(i > t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmparn90q5k.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmparn90q5k.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmparn90q5k.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xac22c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i > t) \n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n/*\nReturn the sum of the numbers in the array\
    \ l.\n    >>> sum_numbers([1L, 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L,\
    \ 20L, 4L, 10L])\n    35L\n*/\nlong sum_numbers(long[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l) \n    {\n        sum += i;\n    }\n    return sum;\n}\n\
    /*\nReturn the number of elements in the array l that are above the threshold\
    \ t.\n    >>> above_threshold_count([1L, 2L, 4L, 10L], 100L)\n    0L\n    >>>\
    \ above_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2L\n*/\nlong above_threshold_count(long[]\
    \ l, long t) \n{\n    long count = 0;\n    foreach(i; l) \n    {\n        if(i\
    \ > t) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\nReturn the number of elements in the array l that are below the threshold\
    \ t.\n    >>> below_threshold_count([1L, 2L, 4L, 10L], 100L)\n    4L\n    >>>\
    \ below_threshold_count([1L, 20L, 4L, 10L], 5L)\n    2L\n*/\nlong below_threshold_count(long[]\
    \ l, long t) \n{\n    long count = 0;\n    foreach(i; l) \n    {\n        if(i\
    \ < t) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\nReturn the number of elements in the array l that are equal to the threshold\
    \ t.\n    >>> equal_threshold_count([1L, 2L, 4L, 10L], 100L)\n    0L\n    >>>\
    \ equal_threshold_count([\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvdiysgbb.d(76): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvdiysgbb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfl7x68eo.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpfl7x68eo.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpfl7x68eo.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x12503554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l) \n    {\n        if(x >= t) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx9o8rrar.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx9o8rrar.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpx9o8rrar.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x86753554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7m6g6av8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp7m6g6av8.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmp7m6g6av8.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x23608554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx2e_m118.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx2e_m118.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpx2e_m118.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xaad76554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x > t)\n            return false;\n    }\n    return\
    \ true;\n}\n/*\nReturn true if all numbers in the array l are below threshold\
    \ t.\n    >>> below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuwx18p3r.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpuwx18p3r.__unittest_L28_C1()\
    \ [0x427f4b]\\n??:? void tmpuwx18p3r.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x10d3e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxcbeuoyx.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpxcbeuoyx.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpxcbeuoyx.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x9f643554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l) \n    {\n        if(i > t) \n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp81fzjq54.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp81fzjq54.__unittest_L22_C1()\
    \ [0x427f4b]\\n??:? void tmp81fzjq54.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x52b7c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n        if(i > t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx7qmyazr.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpx7qmyazr.__unittest_L18_C1()\
    \ [0x427f4b]\\n??:? void tmpx7qmyazr.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xc9546554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l) \n    {\n        if(x >= t) \n        {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpilppgpei.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpilppgpei.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpilppgpei.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x331dd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo423ge2u.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpo423ge2u.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpo423ge2u.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x43093554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l) \n    {\n        if(x > t) \n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3uj1ge_u.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp3uj1ge_u.__unittest_L22_C1()\
    \ [0x427f4b]\\n??:? void tmp3uj1ge_u.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x2a9a1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ i; l) \n    {\n        if(i > t) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7r4jfia1.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmp7r4jfia1.__unittest_L22_C1()\
    \ [0x427f4b]\\n??:? void tmp7r4jfia1.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xc7f74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd5lhf3g5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpd5lhf3g5.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpd5lhf3g5.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf9b06554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk8_nkcs8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpk8_nkcs8.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpk8_nkcs8.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0x45925554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x;\
    \ l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long\
    \ x; l)\n    {\n        if(x >= t)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpugu_tr_f.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpugu_tr_f.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpugu_tr_f.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xf8c74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i;\
    \ l)\n    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpibnwl9q0.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4281dd]\\n??:? void tmpibnwl9q0.__unittest_L20_C1()\
    \ [0x427f4b]\\n??:? void tmpibnwl9q0.__modtest() [0x427f60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c1c7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b05a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4301ed]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430179]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b031]\\n??:? runModuleUnitTests [0x42bf9d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42862c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4285b3]\\n??:? _d_run_main [0x42851e]\\n??:? main [0x427f73]\\\
    n??:? __libc_start_main [0xb0103554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

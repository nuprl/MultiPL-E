name: HumanEval_124_valid_date
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou have to write a function\
  \ which validates a given date string and\n    returns true if the date is valid\
  \ otherwise false.\n    The date is valid if all of the following rules are satisfied:\n\
  \    1. The date string is not empty.\n    2. The number of days is not less than\
  \ 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is\
  \ not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of\
  \ days is not less than 1 or higher than 29 for the month 2.\n    3. The months\
  \ should not be less than 1 or higher than 12.\n    4. The date should be in the\
  \ format: mm-dd-yyyy\n\n    >>> valid_date(\"03-11-2000\")\n    true\n\n    >>>\
  \ valid_date(\"15-01-2012\")\n    false\n\n    >>> valid_date(\"04-0-2040\")\n \
  \   false\n\n    >>> valid_date(\"06-04-2020\")\n    true\n\n    >>> valid_date(\"\
  06/04/2020\")\n    false\n    \n*/\nbool valid_date(string date) \n"
tests: "unittest\n{\n    alias candidate = valid_date;\n\n    assert(candidate(\"\
  03-11-2000\") == true);\n    assert(candidate(\"15-01-2012\") == false);\n    assert(candidate(\"\
  04-0-2040\") == false);\n    assert(candidate(\"06-04-2020\") == true);\n    assert(candidate(\"\
  01-01-2007\") == true);\n    assert(candidate(\"03-32-2011\") == false);\n    assert(candidate(\"\
  \") == false);\n    assert(candidate(\"04-31-3000\") == false);\n    assert(candidate(\"\
  06-06-2005\") == true);\n    assert(candidate(\"21-31-2000\") == false);\n    assert(candidate(\"\
  04-12-2003\") == true);\n    assert(candidate(\"04122003\") == false);\n    assert(candidate(\"\
  20030412\") == false);\n    assert(candidate(\"2003-04\") == false);\n    assert(candidate(\"\
  2003-04-12\") == false);\n    assert(candidate(\"04-2003\") == false);\n}\nvoid\
  \ main(){}"
completions: ["{\n    import std.algorithm : map;\n    import std.array : array;\n\
    \    import std.conv : to;\n    import std.range : isInputRange;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31];\n    int[] days = [0, 0, 0];\n    int i = 0;\n    foreach (c; date)\n\
    \    {\n        if (c == '-')\n        {\n            i++;\n            continue;\n\
    \        }\n        if (c < '0' || c > '9')\n            return false;\n     \
    \   days[i] = days[i] * 10 + c - '0';\n    }\n    if (days[0] < 1 || days[0] >\
    \ 12)\n        return false;\n    if (days[1] < 1 || days[1] > months[days[0]\
    \ - 1])\n        return false;\n    if (days[0] == 2 && days[1] == 29 && !isLeapYear(days[2]))\n\
    \        return false;\n    return true;\n}", "{\n    auto parts = split(date,\
    \ '-');\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1)\n        return\
    \ false;\n    if (month == 2)\n    {\n        if (day > 29)\n            return\
    \ false;\n        if (day == 29)\n        {\n            if (year % 4 != 0)\n\
    \                return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    else\n    {\n        if (day > 31)\n  \
    \          return false;\n    }\n    return true;\n}", "{\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    auto date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3)\n        return false;\n\
    \    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n  \
    \  int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n       \
    \ return false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n\
    \                return false;\n        }\n        else\n        {\n         \
    \   if (day > 28)\n                return false;\n        }\n    }\n    else if\
    \ (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    int[]\
    \ months = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    if (date.length == 0)\n        return false;\n    \n    auto date_split =\
    \ date.split(\"-\");\n    if (date_split.length != 3)\n        return false;\n\
    \    \n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    \n    if (month < 1 || month > 12)\n\
    \        return false;\n    \n    if (month == 2)\n    {\n        if (day < 1\
    \ || day > 29)\n            return false;\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day < 1 || day > 30)\n\
    \            return false;\n    }\n    else\n    {\n        if (day < 1 || day\
    \ > 31)\n            return false;\n    }\n    \n    return true;\n}", "{\n  \
    \  auto date_tuple = split(date, \"-\");\n    if (date_tuple.length != 3) return\
    \ false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    }\n    if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0)\n        return false;\n    auto parts\
    \ = date.split(\"-\");\n    if (parts.length != 3)\n        return false;\n  \
    \  int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (date.length == 0)\n        return false;\n   \
    \ auto parts = split(date, \"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    auto date_array = date.split(\"-\");\n    if (date_array.length\
    \ != 3)\n        return false;\n    int month = to!int(date_array[0]);\n    int\
    \ day = to!int(date_array[1]);\n    int year = to!int(date_array[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    // \n    // 1. The date string is not empty.\n   \
    \ //\n    if (date.length == 0)\n        return false;\n    \n    //\n    // 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ \n    //    And the number of days is not less than 1 or higher than 30 days\
    \ for months 4,6,9,11. \n    //    And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n    //\n    auto parts = date.split(\"-\"\
    );\n    if (parts.length != 3)\n        return false;\n    \n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    \n   \
    \ if (month < 1 || month > 12)\n        return false;\n    \n    if (day < 1)\n\
    \        return false;\n    \n    if (month == 2)\n    {\n        if (year % 4\
    \ == 0)\n        {\n            if (day > 29)\n                return false;\n\
    \        }\n        else\n        {\n            if (day > 28)\n             \
    \   return false;\n        }\n    }\n    else if (month == 4 || month == 6 ||\
    \ month == 9 || month == 11)\n    {\n        if (day > 30)\n            return\
    \ false;\n    }\n    else\n    {\n        if (day > 31)\n            return false;\n\
    \    }\n    \n    //\n    // 3. The months should not be less than 1 or higher\
    \ than 12.\n    //\n    if (month < 1 || month > 12)\n        return false;\n\
    \    \n    //\n    // 4. The date should be in the format: mm-dd-yyyy\n    //\n\
    \    return true;\n}", "{\n    if(date.length == 0)\n        return false;\n \
    \   string[] date_parts = date.split(\"-\");\n    if(date_parts.length != 3)\n\
    \        return false;\n    int month = to!int(date_parts[0]);\n    int day =\
    \ to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2)\n    {\n        if(year % 4 == 0)\n  \
    \      {\n            if(day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if(day > 28)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0) return false;\n    if(date.length !=\
    \ 10) return false;\n    if(date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if(month < 1 || month > 12) return false;\n\
    \    if(month == 2)\n    {\n        if(day < 1 || day > 29) return false;\n  \
    \      if(day == 29)\n        {\n            if(year % 4 != 0) return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if(month == 4 || month == 6 || month == 9 || month == 11)\n \
    \   {\n        if(day < 1 || day > 30) return false;\n    }\n    else\n    {\n\
    \        if(day < 1 || day > 31) return false;\n    }\n    return true;\n}", "{\n\
    \    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length !=\
    \ 3)\n        return false;\n    int month = to!int(date_tuple[0]);\n    int day\
    \ = to!int(date_tuple[1]);\n    int year = to!int(date_tuple[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    auto date_tuple = split(date,\
    \ '-');\n    if (date_tuple.length != 3)\n        return false;\n    int month\
    \ = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n    int year\
    \ = to!int(date_tuple[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n       \
    \ if (isLeapYear(year))\n        {\n            if (day > 29)\n              \
    \  return false;\n        }\n        else\n        {\n            if (day > 28)\n\
    \                return false;\n        }\n    }\n    else if (month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n\
    \    {\n        if (day > 31)\n            return false;\n    }\n    else\n  \
    \  {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n     \
    \   return false;\n    int month = date_arr[0].to!int;\n    int day = date_arr[1].to!int;\n\
    \    int year = date_arr[2].to!int;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > months[month - 1])\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    return true;\n}", "{\n    import std.algorithm : split;\n    import\
    \ std.array : array;\n    import std.conv : to;\n    import std.range : take;\n\
    \    import std.string : join;\n    import std.typecons : tuple;\n    import std.math\
    \ : abs;\n    import std.math : isNaN;\n    import std.math : isInfinity;\n  \
    \  import std.math : isFinite;\n    import std.math : isNan;\n    import std.math\
    \ : isInfinite;\n    import std.math : isFinite;\n    import std.math : isNan;\n\
    \    import std.math : isInfinite;\n    import std.math : isFinite;\n    import\
    \ std.math : isNan;\n    import std.math : isInfinite;\n    import std.math :\
    \ isFinite;\n    import std.math : isNan;\n    import std.math : isInfinite;\n\
    \    import std.math : isFinite;\n    import std.math : isNan;\n    import std.math\
    \ : isInfinite;\n    import std.math : isFinite;\n    import std.math : isNan;\n\
    \    import std.math : isInfinite;\n    import std.math : isFinite;\n    import\
    \ std.math : isNan;\n    import std.math : isInfinite;\n    import std.math :\
    \ isFinite;\n    import std.math : isNan;\n    import std.math : isInfinite;\n\
    \    import std.math : isFinite;\n    import std.math : isNan;\n    import std.math\
    \ : isInfinite;\n    import std.math : isFinite;\n    import std.math : isNan;\n\
    \    import std.math : isInfinite;\n    import std.math : isFinite;\n    import\
    \ std.math : isNan;\n    import std.math : isInfinite;\n    import std.math :\
    \ isFinite;\n    import std.math : isNan;\n    import std.math : isInfinite;\n\
    \    import std.math : isFinite;\n    import std.math : isNan;\n    import std.",
  "{\n    if (date.length == 0) return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3) return false;\n    auto month = to!int(date_parts[0]);\n\
    \    auto day = to!int(date_parts[1]);\n    auto year = to!int(date_parts[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) return day <= 29;\n    if (month == 4 ||\
    \ month == 6 || month == 9 || month == 11) return day <= 30;\n    return true;\n\
    }", "{\n    if(date.length == 0) return false;\n    auto parts = date.split(\"\
    -\");\n    if(parts.length != 3) return false;\n    auto month = parts[0].to!int;\n\
    \    auto day = parts[1].to!int;\n    auto year = parts[2].to!int;\n    if(month\
    \ < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return false;\n\
    \    if(month == 2)\n    {\n        if(day > 29) return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0) return false;\n           \
    \ if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n    }\n   \
    \ else if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n    \
    \    if(day > 30) return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if (date_split.length != 3)\n        return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0)\n        return false;\n    auto date_array =\
    \ date.split(\"-\");\n    if(date_array.length != 3)\n        return false;\n\
    \    int month = to!int(date_array[0]);\n    int day = to!int(date_array[1]);\n\
    \    int year = to!int(date_array[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0)\n        return false;\n    auto parts\
    \ = date.split(\"-\");\n    if(parts.length != 3)\n        return false;\n   \
    \ int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2)\n    {\n\
    \        if(day > 29)\n            return false;\n        if(day == 29)\n    \
    \    {\n            if(year % 4 != 0)\n                return false;\n       \
    \     if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0) return false;\n    if(date.length !=\
    \ 10) return false;\n    if(date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if(month < 1 || month > 12) return false;\n\
    \    if(day < 1 || day > 31) return false;\n    if(month == 2)\n    {\n      \
    \  if(day > 29) return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0) return false;\n            if(year % 100 == 0 && year % 400 != 0)\
    \ return false;\n        }\n    }\n    else if(month == 4 || month == 6 || month\
    \ == 9 || month == 11)\n    {\n        if(day > 30) return false;\n    }\n   \
    \ return true;\n}", "{\n    if(date.length == 0) return false;\n    auto date_arr\
    \ = date.split(\"-\");\n    if(date_arr.length != 3) return false;\n    auto month\
    \ = to!int(date_arr[0]);\n    auto day = to!int(date_arr[1]);\n    auto year =\
    \ to!int(date_arr[2]);\n    if(month < 1 || month > 12) return false;\n    if(day\
    \ < 1 || day > 31) return false;\n    if(month == 2 && day > 29) return false;\n\
    \    if(month == 2 && day == 29 && !isLeapYear(year)) return false;\n    if(month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\
    \ return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n     \
    \           return false;\n        }\n        else if (day > 28)\n           \
    \ return false;\n    }\n    else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n\
    \    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n     \
    \   return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    import std.conv;\n   \
    \ import std.array;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.string;\n    import std.format;\n\
    \    import std.stdio;\n    import std.exception;\n    import std.traits;\n  \
    \  import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.string;\n    import\
    \ std.format;\n    import std.stdio;\n    import std.exception;\n    import std.traits;\n\
    \    import std", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31];\n    auto parts = split(date, \"-\");\n    if (parts.length !=\
    \ 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > months[month - 1])\
    \ return false;\n    if (month == 2 && isLeapYear(year) && day > 29) return false;\n\
    \    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n \
    \       return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    // TODO: write your code\
    \ here\n    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n \
    \       return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ import std.algorithm : map;\n    import std.conv : to;\n    import std.range\
    \ : isInputRange;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple",
  "{\n    import std.algorithm : map;\n    import std.conv : to;\n    import std.range\
    \ : isInputRange;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple",
  "{\n    auto parts = split(date, \"-\");\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month < 1 || month\
    \ > 12) return false;\n    if (day < 1) return false;\n    if (month == 2) {\n\
    \        if (isLeapYear(year)) {\n            if (day > 29) return false;\n  \
    \      } else {\n            if (day > 28) return false;\n        }\n    } else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11) {\n        if (day\
    \ > 30) return false;\n    } else {\n        if (day > 31) return false;\n   \
    \ }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a => a.to!int()).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] > 12 || date_arr[0]\
    \ < 1) return false;\n    if (date_arr[1] > months[date_arr[0] - 1] || date_arr[1]\
    \ < 1) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n     \
    \   if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : isInputRange;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;", "{\n   \
    \ int[] months = [31,28,31,30,31,30,31,31,30,31,30,31];\n    int[] days = [0,0,0];\n\
    \    int i = 0;\n    foreach(immutable c; date)\n    {\n        if(c == '-')\n\
    \        {\n            i++;\n            continue;\n        }\n        if(!isDigit(c))\n\
    \            return false;\n        days[i] = 10*days[i] + to!int(c);\n    }\n\
    \    if(days[0] < 1 || days[0] > 12)\n        return false;\n    if(days[1] <\
    \ 1 || days[1] > months[days[0]-1])\n        return false;\n    if(days[0] ==\
    \ 2 && days[1] == 29)\n    {\n        if(days[2] % 4 != 0)\n            return\
    \ false;\n        if(days[2] % 100 == 0 && days[2] % 400 != 0)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    import std.conv;\n    import std.array;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.typecons;\n\
    \    import std.math;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length\
    \ != 3) return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (year < 1) return false;\n    if (month == 2) {\n        if (year\
    \ % 4 == 0) {\n            if (day < 1 || day > 29) return false;\n        } else\
    \ {\n            if (day < 1 || day > 28) return false;\n        }\n    } else\
    \ if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10 || month == 12) {\n        if (day < 1 || day > 31) return false;\n  \
    \  } else {\n        if (day < 1 || day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    string[] date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3) return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > days[month - 1]) return false;\n    if (month\
    \ == 2 && isLeapYear(year) && day > 29) return false;\n    return true;\n}", "{\n\
    \    if(date.length == 0) return false;\n    auto date_arr = date.split(\"-\"\
    );\n    if(date_arr.length != 3) return false;\n    auto month = date_arr[0].to!int;\n\
    \    auto day = date_arr[1].to!int;\n    auto year = date_arr[2].to!int;\n   \
    \ if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2 && day > 29) return false;\n    if(month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if(day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto parts = date.split(\"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n\
    \                return false;\n        }\n        else\n        {\n         \
    \   if (day > 28)\n                return false;\n        }\n    }\n    else if\
    \ (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    enum\
    \ months = [1,2,3,4,5,6,7,8,9,10,11,12];\n    enum days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    int month, day, year;\n    if (date.length == 0)\n        return false;\n\
    \    if (date.length != 10)\n        return false;\n    if (date[2] != '-' ||\
    \ date[5] != '-')\n        return false;\n    if (date[0] == '0')\n        month\
    \ = cast(int)date[1] - 48;\n    else\n        month = cast(int)date[0] - 48;\n\
    \    if (date[3] == '0')\n        day = cast(int)date[4] - 48;\n    else\n   \
    \     day = cast(int)date[3] - 48;\n    if (date[6] == '0')\n        year = cast(int)date[7]\
    \ - 48;\n    else\n        year = cast(int)date[6] - 48;\n    if (year < 0 ||\
    \ year > 9)\n        return false;\n    if (month < 0 || month > 9)\n        return\
    \ false;\n    if (day < 0 || day > 9)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (day > 29)\n            return false;\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    else\n    {\n        if (day\
    \ > 31)\n            return false;\n    }\n    return true;\n}", "{\n    import\
    \ std.algorithm : map;\n    import std.array : array;\n    import std.conv : to;\n\
    \    import std.range : isInputRange;\n    import std.string : split;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : TupleOf;\n    import std.typecons : tupleof;\n    import std.typecons : Unqual;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons", "{\n    if (date.length == 0)\n        return\
    \ false;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n\
    \        return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = split(date, \"-\"\
    );\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > months[month - 1])\
    \ return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    enum months = [1,2,3,4,5,6,7,8,9,10,11,12];\n\
    \    enum days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    if(date.length == 0)\n        return false;\n    auto date_split = date.split(\"\
    -\");\n    if(date_split.length != 3)\n        return false;\n    if(date_split[0].length\
    \ != 2 || date_split[1].length != 2 || date_split[2].length != 4)\n        return\
    \ false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(!(month in months))\n        return\
    \ false;\n    if(!(day in days))\n        return false;\n    if(year < 0)\n  \
    \      return false;\n    if(month == 2)\n    {\n        if(year % 4 == 0)\n \
    \       {\n            if(day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if(day > 28)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    else\n\
    \    {\n        if(day > 31)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if (date.length == 0)\n        return false;\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (year % 4 == 0)\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    auto parts = split(date, \"-\");\n    if\
    \ (parts.length != 3) return false;\n    auto month = to!int(parts[0]);\n    auto\
    \ day = to!int(parts[1]);\n    auto year = to!int(parts[2]);\n    if (month <\
    \ 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (day > 29) return false;\n        if (day ==\
    \ 29) {\n            if (year % 4 != 0) return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0) return false;\n        }\n    } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0) \n      \
    \  return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3) \n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12) \n        return false;\n    if (day < 1 || day >\
    \ 31) \n        return false;\n    if (month == 2) \n    {\n        if (day >\
    \ 29) \n            return false;\n        if (day == 29) \n        {\n      \
    \      if (year % 4 != 0) \n                return false;\n            if (year\
    \ % 100 == 0 && year % 400 != 0) \n                return false;\n        }\n\
    \    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11) \n\
    \    {\n        if (day > 30) \n            return false;\n    }\n    return true;\n\
    }", "{\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length !=\
    \ 3) return false;\n    if (date_parts[0].length != 2 || date_parts[1].length\
    \ != 2 || date_parts[2].length != 4) return false;\n    int month = date_parts[0].to!int;\n\
    \    int day = date_parts[1].to!int;\n    int year = date_parts[2].to!int;\n \
    \   if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return\
    \ false;\n    if (month == 2) {\n        if (day > 29) return false;\n       \
    \ if (day == 29) {\n            if (year % 4 != 0) return false;\n           \
    \ if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n    }\n  \
    \  else if (month == 4 || month == 6 || month == 9 || month == 11) {\n       \
    \ if (day > 30) return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_parts = date.split(\"-\");\n   \
    \ if (date_parts.length != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(to!int).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0]\
    \ > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0]\
    \ - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n    \
    \    if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    if(date.length == 0)\n        return false;\n    int[] date_arr = date.split(\"\
    -\").map!(a => a.to!int()).array;\n    if(date_arr.length != 3)\n        return\
    \ false;\n    if(date_arr[0] < 1 || date_arr[0] > 12)\n        return false;\n\
    \    if(date_arr[0] == 2)\n    {\n        if(date_arr[2] % 4 == 0)\n        {\n\
    \            if(date_arr[1] < 1 || date_arr[1] > 29)\n                return false;\n\
    \        }\n        else\n        {\n            if(date_arr[1] < 1 || date_arr[1]\
    \ > 28)\n                return false;\n        }\n    }\n    else if(date_arr[0]\
    \ == 1 || date_arr[0] == 3 || date_arr[0] == 5 || date_arr[0] == 7 || date_arr[0]\
    \ == 8 || date_arr[0] == 10 || date_arr[0] == 12)\n    {\n        if(date_arr[1]\
    \ < 1 || date_arr[1] > 31)\n            return false;\n    }\n    else\n    {\n\
    \        if(date_arr[1] < 1 || date_arr[1] > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    string[] date_arr = date.split(\"-\");\n    int\
    \ day = to!int(date_arr[0]);\n    int month = to!int(date_arr[1]);\n    int year\
    \ = to!int(date_arr[2]);\n    if (date_arr.length != 3) return false;\n    if\
    \ (day < 1 || day > months[month - 1]) return false;\n    if (month < 1 || month\
    \ > 12) return false;\n    if (year < 1) return false;\n    if (month == 2 &&\
    \ day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n  \
    \  int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ date_arr = date.split(\"-\").map!(to!int).array;\n    if (date_arr.length !=\
    \ 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n\
    \    if (date_arr[0] == 2 && isLeapYear(date_arr[2]) && date_arr[1] > 29) return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0)\n        return\
    \ false;\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_parts[0]);\n    auto\
    \ day = to!int(date_parts[1]);\n    auto year = to!int(date_parts[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[]\
    \ date_split = date.split(\"-\");\n    if (date_split.length != 3)\n        return\
    \ false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > days[month - 1])\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    return true;\n}", "{\n    if(date.length == 0)\n        return false;\n\
    \    auto date_split = date.split(\"-\");\n    if(date_split.length != 3)\n  \
    \      return false;\n    auto month = to!int(date_split[0]);\n    auto day =\
    \ to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2)\n    {\n        if(day > 29)\n       \
    \     return false;\n        if(day == 29)\n        {\n            if(year % 4\
    \ != 0)\n                return false;\n            if(year % 100 == 0 && year\
    \ % 400 != 0)\n                return false;\n        }\n    }\n    else if(month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3)\n        return false;\n    int month = to!int(parts[0]);\n    int day\
    \ = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month < 1 ||\
    \ month > 12)\n        return false;\n    if (day < 1 || day > 31)\n        return\
    \ false;\n    if (month == 2)\n    {\n        if (day > 29)\n            return\
    \ false;\n        if (day == 29)\n        {\n            if (year % 4 != 0)\n\
    \                return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    string[] date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3) return false;\n    int\
    \ month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int\
    \ year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2)\n    {\n    \
    \    if (day > 29) return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0) return false;\n            if (year % 100 == 0 && year\
    \ % 400 != 0) return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    auto parts = split(date, '-');\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0) return false;\n    auto date_arr = date.split(\"\
    -\");\n    if(date_arr.length != 3) return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2 && day > 29) return false;\n    if(month == 2 && day\
    \ == 29 && !isLeapYear(year)) return false;\n    if(month == 4 || month == 6 ||\
    \ month == 9 || month == 11)\n    {\n        if(day > 30) return false;\n    }\n\
    \    return true;\n}", "{\n    import std.algorithm;\n    import std.conv;\n \
    \   import std.range;\n    import std.array;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.stdio;\n    import std.string;\n    import std.exception;\n\
    \    import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n    import std.exception;\n  \
    \  import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n    import std.exception;\n  \
    \  import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n    import std.exception;\n  \
    \  import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n    import std.exception;\n  \
    \  import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n    import std.exception;\n  \
    \  import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.stdio;\n    import std.string;\n", "{\n    if (date.length ==\
    \ 0) return false;\n    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length\
    \ != 3) return false;\n    auto month = to!int(date_tuple[0]);\n    auto day =\
    \ to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (isLeapYear(year)) {\n            if (day >\
    \ 29) return false;\n        } else {\n            if (day > 28) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    if (date.length == 0)\n        return false;\n    auto date_split = date.split(\"\
    -\");\n    if (date_split.length != 3)\n        return false;\n    int month =\
    \ to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year =\
    \ to!int(date_split[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    auto parts = split(date, \"-\");\n    if (parts.length\
    \ != 3) return false;\n    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1) return false;\n    if (month\
    \ == 2) {\n        if (isLeapYear(year)) {\n            if (day > 29) return false;\n\
    \        } else {\n            if (day > 28) return false;\n        }\n    } else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11) {\n        if (day\
    \ > 30) return false;\n    } else {\n        if (day > 31) return false;\n   \
    \ }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31];\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > months[month - 1])\
    \ return false;\n    if (month == 2 && day == 29) {\n        if (year % 4 != 0)\
    \ return false;\n        if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \    }\n    return true;\n}", "{\n    string[] date_arr = date.split(\"-\");\n\
    \    if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    import std.algorithm : map;\n    import std.conv : to;\n    import\
    \ std.array : array;\n    import std.range : iota;\n    import std.typecons :\
    \ tuple;\n    import std.math : isNaN;\n    import std.stdio : writeln;\n    import\
    \ std.string : split;\n    import std.range : take;\n    import std.range : drop;\n\
    \    import std.range : takeExactly;\n    import std.range : dropExactly;\n  \
    \  import std.range : only;\n    import std.range : empty;\n    import std.range\
    \ : isInputRange;\n    import std.range : isForwardRange;\n    import std.range\
    \ : isBidirectionalRange;\n    import std.range : isRandomAccessRange;\n    import\
    \ std.range : isInfinite;\n    import std.range : isSorted;\n    import std.range\
    \ : isSorted!\"a < b\";\n    import std.range : isSorted!\"a > b\";\n    import\
    \ std.range : isSorted!\"a <= b\";\n    import std.range : isSorted!\"a >= b\"\
    ;\n    import std.range : isSorted!\"a.compare(b) < 0\";\n    import std.range\
    \ : isSorted!\"a.compare(b) > 0\";\n    import std.range : isSorted!\"a.compare(b)\
    \ <= 0\";\n    import std.range : isSorted!\"a.compare(b) >= 0\";\n    import\
    \ std.range : isSorted!\"a.compare(b)\";\n    import std.range : isSorted!\"a.compare(b)\
    \ > 0\";\n    import std.range : isSorted!\"a.compare(b) <= 0\";\n    import std.range\
    \ : isSorted!\"a.compare(b) >= 0\";\n    import std.range : isSorted!\"a.compare(b)\"\
    ;\n    import std.range : isSorted!\"a.compare(b)\";\n    import std.range : isSorted!\"\
    a.compare(b)\";\n    import std.range : isSorted!\"a.compare(b)\";\n    import",
  "{\n    int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length\
    \ != 10)\n        return false;\n    if (date[2] != '-' || date[5] != '-')\n \
    \       return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > days[month - 1])\n        return false;\n\
    \    if (month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31];\n    if (date.length != 10) return false;\n    if (date[2]\
    \ != '-' || date[5] != '-') return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1 || day > months[month\
    \ - 1]) return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0)\n        return\
    \ false;\n    if (date.length != 10)\n        return false;\n    if (date[2] !=\
    \ '-' || date[5] != '-')\n        return false;\n    if (date[0] == '0')\n   \
    \     return false;\n    if (date[3] == '0')\n        return false;\n    if (date[6]\
    \ == '0')\n        return false;\n    if (date[7] == '0')\n        return false;\n\
    \    if (date[8] == '0')\n        return false;\n    if (date[9] == '0')\n   \
    \     return false;\n    if (date[0] == '1' && date[1] == '3')\n        return\
    \ false;\n    if (date[0] == '1' && date[1] == '4')\n        return false;\n \
    \   if (date[0] == '1' && date[1] == '5')\n        return false;\n    if (date[0]\
    \ == '1' && date[1] == '6')\n        return false;\n    if (date[0] == '1' &&\
    \ date[1] == '7')\n        return false;\n    if (date[0] == '1' && date[1] ==\
    \ '8')\n        return false;\n    if (date[0] == '1' && date[1] == '9')\n   \
    \     return false;\n    if (date[0] == '2' && date[1] == '0')\n        return\
    \ false;\n    if (date[0] == '2' && date[1] == '1')\n        return false;\n \
    \   if (date[0] == '2' && date[1] == '2')\n        return false;\n    if (date[0]\
    \ == '2' && date[1] == '3')\n        return false;\n    if (date[0] == '2' &&\
    \ date[1] == '4')\n        return false;\n    if (date[0] == '2' && date[1] ==\
    \ '5')\n        return false;\n    if (date[0] == '2' && date[", "{\n    import\
    \ std.algorithm : map;\n    import std.array : array;\n    import std.conv : to;\n\
    \    import std.range : isInputRange;\n    import std.typecons : tuple;\n    import\
    \ std.math : isNaN;\n    import std.string : split;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n", "{\n    auto parts\
    \ = split(date, \"-\");\n    if (parts.length != 3) return false;\n    int month\
    \ = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1) return false;\n\
    \    if (month == 2) {\n        if (isLeapYear(year)) {\n            if (day >\
    \ 29) return false;\n        } else {\n            if (day > 28) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    } else {\n        if (day >\
    \ 31) return false;\n    }\n    return true;\n}", "{\n    int[] months = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int).array;\n    if (date_arr.length != 3) return false;\n    if\
    \ (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1] < 1\
    \ || date_arr[1] > months[date_arr[0] - 1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29) {\n        if (date_arr[2] % 4 != 0) return false;\n\
    \        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return false;\n\
    \    }\n    return true;\n}", "{\n    int[] days_per_month = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] date_parts = date.split(\"-\"\
    );\n    if (date_parts.length != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > days_per_month[month - 1])\n        return false;\n    if (month == 2 && day\
    \ == 29 && !isLeapYear(year))\n        return false;\n    return true;\n}", "{\n\
    \    int[] months = [31,28,31,30,31,30,31,31,30,31,30,31];\n    int[] date_arr\
    \ = date.split(\"-\").map!(to!int);\n    if (date_arr.length != 3) return false;\n\
    \    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1]\
    \ < 1 || date_arr[1] > months[date_arr[0]-1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4 != 0) return\
    \ false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    auto parts = split(date, \"-\"\
    );\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if(date.length < 10) return false;\n    if(date[2] != '-' || date[5] != '-')\
    \ return false;\n    int day = to!int(date[0..1]);\n    int month = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if(day < 1 || day > 31) return false;\n\
    \    if(month < 1 || month > 12) return false;\n    if(year < 1) return false;\n\
    \    if(month == 2)\n    {\n        if(year % 4 == 0)\n        {\n           \
    \ if(day > 29) return false;\n        }\n        else\n        {\n           \
    \ if(day > 28) return false;\n        }\n    }\n    else if(month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if(day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    string[] date_arr = date.split(\"-\");\n\
    \    if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    bool result = false;\n    if (date.length > 0)\n    {\n        int[]\
    \ date_array = date.split(\"-\").map!(to!int);\n        if (date_array.length\
    \ == 3)\n        {\n            int month = date_array[0];\n            int day\
    \ = date_array[1];\n            int year = date_array[2];\n            if (month\
    \ > 0 && month < 13)\n            {\n                if (month == 2)\n       \
    \         {\n                    if (isLeapYear(year))\n                    {\n\
    \                        if (day > 0 && day < 30)\n                        {\n\
    \                            result = true;\n                        }\n     \
    \               }\n                    else\n                    {\n         \
    \               if (day > 0 && day < 29)\n                        {\n        \
    \                    result = true;\n                        }\n             \
    \       }\n                }\n                else if (month == 1 || month ==\
    \ 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n\
    \                {\n                    if (day > 0 && day < 32)\n           \
    \         {\n                        result = true;\n                    }\n \
    \               }\n                else\n                {\n                 \
    \   if (day > 0 && day < 31)\n                    {\n                        result\
    \ = true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    int[] days = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12];\n    int[] years = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\
    \ 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,\
    \ 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,\
    \ 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,\
    \ 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,\
    \ 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,\
    \ 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,\
    \ 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,\
    \ 2099, 2100];\n    if (date.length == 0)\n        return false;\n    if (date.length\
    \ != 10)\n        return false;\n    if (date[2] != '-' || date[5] != '-')\n \
    \       return false;\n    if (date[0] == '0')\n        return false;\n    if\
    \ (date[3] == '0')\n        return false;\n    if (date[6] == '0')\n        return\
    \ false;\n    if (date[7] == '0')\n        return false;\n    if (date[8] == '0')\n\
    \        return false;\n    if (date[9] == '0')\n        return false;\n    if\
    \ (date[0] == '", "{\n    auto date_tuple = tuple(date.split(\"-\"));\n    if\
    \ (date_tuple.length != 3) return false;\n    auto month = to!int(date_tuple[0]);\n\
    \    auto day = to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2)\n    {\n        if (day > 29) return false;\n\
    \        if (day == 29)\n        {\n            if (year % 4 != 0) return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    if(date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if(date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2)\n    {\n\
    \        if(day > 29)\n            return false;\n        if(day == 29)\n    \
    \    {\n            if(year % 4 != 0)\n                return false;\n       \
    \     if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    if (date.length < 10) return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1 || day > months[month\
    \ - 1]) return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0) return false;\n\
    \    int[] date_arr = date.split(\"-\").map!(to!int);\n    if (date_arr.length\
    \ != 3) return false;\n    int month = date_arr[0];\n    int day = date_arr[1];\n\
    \    int year = date_arr[2];\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    if (date.length == 0) \n        return false;\n    auto date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3) \n        return false;\n\
    \    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) \n  \
    \      return false;\n    if (day < 1) \n        return false;\n    if (month\
    \ == 2) \n    {\n        if (day > 29) \n            return false;\n        if\
    \ (day == 29) \n        {\n            if (year % 4 != 0) \n                return\
    \ false;\n            if (year % 100 == 0 && year % 400 != 0) \n             \
    \   return false;\n        }\n    } \n    else if (month == 4 || month == 6 ||\
    \ month == 9 || month == 11) \n    {\n        if (day > 30) \n            return\
    \ false;\n    } \n    else \n    {\n        if (day > 31) \n            return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length < 10)\n        return\
    \ false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > months[month - 1])\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    return true;\n}", "{\n    if(date.length == 0)\n        return false;\n\
    \    auto date_tuple = split(date, \"-\");\n    if(date_tuple.length != 3)\n \
    \       return false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(month == 2)\n    {\n        if(day < 1 || day > 29)\n\
    \            return false;\n    }\n    else if(month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n    {\n   \
    \     if(day < 1 || day > 31)\n            return false;\n    }\n    else\n  \
    \  {\n        if(day < 1 || day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    // your code here\n    if(date.length == 0) return false;\n\
    \    if(date.length != 10) return false;\n    if(date[2] != '-' || date[5] !=\
    \ '-') return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if(month < 1 || month > 12) return false;\n\
    \    if(day < 1 || day > 31) return false;\n    if(month == 2)\n    {\n      \
    \  if(day > 29) return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0) return false;\n            if(year % 100 == 0 && year % 400 != 0)\
    \ return false;\n        }\n    }\n    else if(month == 4 || month == 6 || month\
    \ == 9 || month == 11)\n    {\n        if(day > 30) return false;\n    }\n   \
    \ return true;\n}", "{\n    auto date_tuple = tuple(date.split(\"-\"));\n    if\
    \ (date_tuple.length != 3)\n        return false;\n    auto day = to!int(date_tuple[1]);\n\
    \    auto month = to!int(date_tuple[0]);\n    auto year = to!int(date_tuple[2]);\n\
    \    if (day < 1 || day > 31 || month < 1 || month > 12 || year < 0)\n       \
    \ return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n \
    \       {\n            if (day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if (day > 28)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (date.length == 0) return false;\n    int[] months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > months[month - 1])\
    \ return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0)\n        return\
    \ false;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n\
    \        return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if(date.length == 0)\n\
    \        return false;\n    string[] date_arr = date.split(\"-\");\n    if(date_arr.length\
    \ != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n    int\
    \ day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2)\n    {\n        if(day > 29)\n       \
    \     return false;\n        if(day == 29)\n        {\n            if(year % 4\
    \ != 0)\n                return false;\n            if(year % 100 == 0 && year\
    \ % 400 != 0)\n                return false;\n        }\n    }\n    else if(month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    if(date.length\
    \ == 0) return false;\n    if(date.count(\"-\") != 2) return false;\n    auto\
    \ date_arr = date.split(\"-\");\n    if(date_arr.length != 3) return false;\n\
    \    if(date_arr[0].length != 2 || date_arr[1].length != 2 || date_arr[2].length\
    \ != 4) return false;\n    auto month = to!int(date_arr[0]);\n    auto day = to!int(date_arr[1]);\n\
    \    auto year = to!int(date_arr[2]);\n    if(month < 1 || month > 12) return\
    \ false;\n    if(day < 1 || day > 31) return false;\n    if(month == 2)\n    {\n\
    \        if(isLeapYear(year))\n        {\n            if(day > 29) return false;\n\
    \        }\n        else\n        {\n            if(day > 28) return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0)\n        return false;\n    auto date_split =\
    \ date.split(\"-\");\n    if(date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(month == 2)\n    {\n        if(year % 4 == 0)\n   \
    \     {\n            if(day < 1 || day > 29)\n                return false;\n\
    \        }\n        else\n        {\n            if(day < 1 || day > 28)\n   \
    \             return false;\n        }\n    }\n    else if(month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n\
    \    {\n        if(day < 1 || day > 31)\n            return false;\n    }\n  \
    \  else\n    {\n        if(day < 1 || day > 30)\n            return false;\n \
    \   }\n    return true;\n}", "{\n    auto parts = split(date, '-');\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (isLeapYear(year)) {\n            if (day > 29) return false;\n        } else\
    \ {\n            if (day > 28) return false;\n        }\n    } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length != 10)\n      \
    \  return false;\n    if (date[2] != '-' || date[5] != '-')\n        return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    int[] months = [1,3,5,7,8,10,12];\n    int[] months2\
    \ = [4,6,9,11];\n    int[] months3 = [2];\n    int[] days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    int[] days2 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n\
    \    int[] days3 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28];\n\
    \    int[] years = [2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,",
  "{\n    if(date.length == 0)\n        return false;\n    auto date_split = date.split(\"\
    -\");\n    if(date_split.length != 3)\n        return false;\n    int month =\
    \ to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year =\
    \ to!int(date_split[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2)\n    {\n\
    \        if(isLeapYear(year))\n        {\n            if(day > 29)\n         \
    \       return false;\n        }\n        else\n        {\n            if(day\
    \ > 28)\n                return false;\n        }\n    }\n    else if(month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    int[] months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int).array;\n    if (date_arr.length != 3) return false;\n    if\
    \ (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1] < 1\
    \ || date_arr[1] > months[date_arr[0] - 1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29) {\n        if (date_arr[2] % 4 != 0) return false;\n\
    \        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return false;\n\
    \    }\n    return true;\n}", "{\n    import std.conv;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.format;\n\
    \    import std.stdio;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.datetime;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.datetime;\n    import std.format;\n    import std.stdio;\n   \
    \ import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.format;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.format;\n\
    \    import std.stdio;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.datetime;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.datetime;\n    import std.format;\n    import std.stdio;\n   \
    \ import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.format;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math", "{\n    if (date.length == 0)\n       \
    \ return false;\n    auto date_tuple = split(date, '-');\n    if (date_tuple.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_tuple[0]);\n    auto\
    \ day = to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if(date.length == 0) return false;\n    auto parts = date.split(\"-\");\n  \
    \  if(parts.length != 3) return false;\n    int month = to!int(parts[0]);\n  \
    \  int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if(month\
    \ < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return false;\n\
    \    if(month == 2)\n    {\n        if(day > 29) return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0) return false;\n           \
    \ if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n    }\n   \
    \ else if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n    \
    \    if(day > 30) return false;\n    }\n    return true;\n}", "{\n    if(date.length\
    \ == 0)\n        return false;\n    auto date_parts = date.split(\"-\");\n   \
    \ if(date_parts.length != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2)\n    {\n        if(day > 29)\n\
    \            return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0)\n                return false;\n            if(year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    if(date.length\
    \ == 0)\n        return false;\n    int day = to!int(date[0..1]);\n    int month\
    \ = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if(day < 1 ||\
    \ day > 31 || month < 1 || month > 12 || year < 1)\n        return false;\n  \
    \  if(month == 2)\n    {\n        if(day > 29)\n            return false;\n  \
    \      if(day == 29)\n        {\n            if(year % 4 != 0)\n             \
    \   return false;\n            if(year % 100 == 0 && year % 400 != 0)\n      \
    \          return false;\n        }\n    }\n    else if(month == 4 || month ==\
    \ 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    // write your code here\n    return\
    \ false;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31];\n    int[] date_arr = date.split(\"-\").map!(to!int);\n    if (date_arr.length\
    \ != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n\
    \    if (date_arr[0] == 2 && date_arr[1] == 29) {\n        if (date_arr[2] % 4\
    \ != 0) return false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400\
    \ != 0) return false;\n    }\n    return true;\n}", "{\n    if (date.length ==\
    \ 0)\n        return false;\n    int month = to!int(date[0..1]);\n    int day\
    \ = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if (month < 1\
    \ || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n      \
    \  return false;\n    if (month == 2)\n    {\n        if (day > 29)\n        \
    \    return false;\n        if (day == 29)\n        {\n            if (year %\
    \ 4 != 0)\n                return false;\n            if (year % 100 == 0 && year\
    \ % 400 != 0)\n                return false;\n        }\n    }\n    else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    import std.conv;\n\
    \    import std.array;\n    import std.algorithm;\n    import std.range;\n   \
    \ import std.stdio;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.datetime;\n    import std.format;\n    import std.regex;\n\
    \    import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.format;\n    import std.regex;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.format;\n    import std.regex;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.format;\n\
    \    import std.regex;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.datetime;\n    import std.format;\n    import\
    \ std.regex;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.datetime;\n    import std.format;\n    import std.regex;\n   \
    \ import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.format;\n    import std.regex;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.format;\n    import std.regex;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.format;\n\
    \    import std.regex;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.datetime;\n    import std.format;\n    import\
    \ std.regex;\n    import std.traits;\n    import std.type", "{\n    auto date_parts\
    \ = split(date, \"-\");\n    if (date_parts.length != 3) return false;\n    int\
    \ month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int\
    \ year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0)\n        return false;\n    auto parts\
    \ = date.split(\"-\");\n    if (parts.length != 3)\n        return false;\n  \
    \  auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n    auto\
    \ year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n       \
    \ if (day > 29)\n            return false;\n        if (day == 29)\n        {\n\
    \            if (year % 4 != 0)\n                return false;\n            if\
    \ (year % 100 == 0 && year % 400 != 0)\n                return false;\n      \
    \  }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if (day > 30)\n            return false;\n    }\n    else\n  \
    \  {\n        if (day > 31)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0)\n        return false;\n    auto date_split =\
    \ date.split(\"-\");\n    if(date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0)\n        return false;\n    auto date_split\
    \ = date.split(\"-\");\n    if (date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length\
    \ != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n    int\
    \ day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (year % 4 == 0)\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_parts = split(date, \"-\");\n    if (date_parts.length != 3)\n\
    \        return false;\n    int month = to!int(date_parts[0]);\n    int day =\
    \ to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a => a.to!int);\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] > 12 || date_arr[0]\
    \ < 1) return false;\n    if (date_arr[1] > months[date_arr[0] - 1] || date_arr[1]\
    \ < 1) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n     \
    \   if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3) return\
    \ false;\n    int day = to!int(date_parts[0]);\n    int month = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (day < 1 || day > 31) return false;\n\
    \    if (month < 1 || month > 12) return false;\n    if (year < 1) return false;\n\
    \    if (month == 2) {\n        if (year % 4 == 0) {\n            if (day > 29)\
    \ return false;\n        } else {\n            if (day > 28) return false;\n \
    \       }\n    } else if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n  \
    \  if (date.length == 0)\n        return false;\n    if (date.length != 10)\n\
    \        return false;\n    if (date[2] != '-' || date[5] != '-')\n        return\
    \ false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    auto parts = split(date,\
    \ '-');\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (day > 29) return false;\n        if (day ==\
    \ 29) {\n            if (year % 4 != 0) return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0) return false;\n        }\n    } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] date_parts = date.split(\"-\"\
    );\n    if (date_parts.length != 3)\n        return false;\n    int month = date_parts[0].to!int;\n\
    \    int day = date_parts[1].to!int;\n    int year = date_parts[2].to!int;\n \
    \   if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > months[month - 1])\n        return false;\n    if (month == 2 && day == 29\
    \ && !isLeapYear(year))\n        return false;\n    return true;\n}", "{\n   \
    \ int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[]\
    \ date_split = date.split(\"-\");\n    if (date_split.length != 3)\n        return\
    \ false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > days[month - 1])\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    return true;\n}", "{\n    if (date.length != 10)\n        return\
    \ false;\n    if (date[2] != '-' || date[5] != '-')\n        return false;\n \
    \   int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    auto date_parts = split(date, \"-\");\n    if (date_parts.length\
    \ != 3) return false;\n    if (date_parts[0].length != 2 || date_parts[1].length\
    \ != 2 || date_parts[2].length != 4) return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) {\n        if (day > 29) return false;\n\
    \        if (day == 29) {\n            if (year % 4 != 0) return false;\n    \
    \        if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n  \
    \  }\n    else if (month == 4 || month == 6 || month == 9 || month == 11) {\n\
    \        if (day > 30) return false;\n    }\n    return true;\n}", "{\n    if\
    \ (date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n     \
    \           return false;\n        }\n        else\n        {\n            if\
    \ (day > 28)\n                return false;\n        }\n    }\n    else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    int[] months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = parts[0].to!int;\n\
    \    int day = parts[1].to!int;\n    int year = parts[2].to!int;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > months[month - 1])\
    \ return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(to!int).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0]\
    \ > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0]\
    \ - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n    \
    \    if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    int[] months = [31,28,31,30,31,30,31,31,30,31,30,31];\n    int[] date_arr\
    \ = date.split(\"-\").map!(to!int).array;\n    if (date_arr.length != 3) return\
    \ false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1]\
    \ < 1 || date_arr[1] > months[date_arr[0]-1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4 != 0) return\
    \ false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = date.split(\"-\");\n    if\
    \ (parts.length != 3)\n        return false;\n    int month = parts[0].to!int;\n\
    \    int day = parts[1].to!int;\n    int year = parts[2].to!int;\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > months[month\
    \ - 1])\n        return false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    int[] months = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int day = to!int(parts[1]);\n\
    \    int month = to!int(parts[0]);\n    int year = to!int(parts[2]);\n    if (year\
    \ < 0)\n        return false;\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > months[month - 1])\n        return false;\n\
    \    if (month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n     \
    \   return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length != 10)\n\
    \        return false;\n    if (date[2] != '-' || date[5] != '-')\n        return\
    \ false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2) {\n        if (year % 4 == 0) {\n            if (day > 29)\n  \
    \              return false;\n        } else {\n            if (day > 28)\n  \
    \              return false;\n        }\n    } else if (month == 4 || month ==\
    \ 6 || month == 9 || month == 11) {\n        if (day > 30)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0) return false;\n\
    \    if (date.length != 10) return false;\n    if (date[2] != '-' || date[5] !=\
    \ '-') return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length != 10)\n        return false;\n    if (date[2]\
    \ != '-' || date[5] != '-')\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ date_arr = date.split(\"-\").map!(to!int);\n    if (date_arr.length != 3) return\
    \ false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1]\
    \ < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4 != 0) return\
    \ false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    string[] month_days = [\"31\",\
    \ \"28\", \"31\", \"30\", \"31\", \"30\", \"31\", \"31\", \"30\", \"31\", \"30\"\
    , \"31\"];\n    string[] date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (year % 4 == 0)\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else\n    {\n        if (day > to!int(month_days[month\
    \ - 1]))\n            return false;\n    }\n    return true;\n}", "{\n    int[]\
    \ months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    // TODO: implement\n    import std.conv;\n    import std.algorithm;\n   \
    \ import std.range;\n    import std.array;\n    import std.string;\n    import\
    \ std.format;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.exception;\n    import std.typecons;\n    import std.math;\n \
    \   import std.range;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.string;\n    import std.format;\n    import std.typecons;\n    import std.math;\n\
    \    import std.stdio;\n    import std.exception;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.string;\n    import std.format;\n    import std.typecons;\n\
    \    import std.math;\n    import std.stdio;\n    import std.exception;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.string;\n    import std.format;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.exception;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.string;\n    import std.format;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.exception;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.string;\n  \
    \  import std.format;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.stdio;\n    import std.exception;\n    import std.typecons;\n    import\
    \ std.math;\n    import std", "{\n    bool result = true;\n    if (date.length\
    \ == 0)\n        return false;\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3)\n        return false;\n    int month = to!int(parts[0]);\n    int day\
    \ = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (year < 0)\n \
    \       return false;\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (month == 2)\n    {\n        if (day < 1 || day > 29)\n            return\
    \ false;\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day < 1 || day > 30)\n            return false;\n\
    \    }\n    else\n    {\n        if (day < 1 || day > 31)\n            return\
    \ false;\n    }\n    return result;\n}", "{\n    auto parts = split(date, \"-\"\
    );\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (year\
    \ < 0) return false;\n    if (month < 1 || month > 12) return false;\n    if (day\
    \ < 1) return false;\n    if (month == 2) {\n        if (day > 29) return false;\n\
    \        if (day == 29) {\n            if (year % 4 != 0) return false;\n    \
    \        if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n  \
    \  } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n     \
    \   if (day > 30) return false;\n    } else {\n        if (day > 31) return false;\n\
    \    }\n    return true;\n}", "{\n    if(date.length == 0) return false;\n   \
    \ if(date.find(\"-\") == -1) return false;\n    auto date_arr = date.split(\"\
    -\");\n    if(date_arr.length != 3) return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2)\n    {\n        if(isLeapYear(year))\n        {\n\
    \            if(day > 29) return false;\n        }\n        else\n        {\n\
    \            if(day > 28) return false;\n        }\n    }\n    else if(month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n       \
    \ return false;\n    auto month = date[0..2].to!int;\n    auto day = date[3..5].to!int;\n\
    \    auto year = date[6..9].to!int;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int).array;\n    if (date_arr.length != 3)\n        return false;\n\
    \    if (date_arr[0] < 1 || date_arr[0] > 12)\n        return false;\n    if (date_arr[1]\
    \ < 1 || date_arr[1] > months[date_arr[0] - 1])\n        return false;\n    if\
    \ (date_arr[0] == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4\
    \ != 0)\n            return false;\n        if (date_arr[2] % 100 == 0 && date_arr[2]\
    \ % 400 != 0)\n            return false;\n    }\n    return true;\n}", "{\n  \
    \  auto parts = split(date, '-');\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month < 1 || month\
    \ > 12) return false;\n    if (day < 1) return false;\n    if (month == 2) {\n\
    \        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {\n        \
    \    if (day > 29) return false;\n        } else {\n            if (day > 28)\
    \ return false;\n        }\n    } else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    } else {\n   \
    \     if (day > 31) return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3)\n        return false;\n    auto month = to!int(parts[0]);\n    auto day\
    \ = to!int(parts[1]);\n    auto year = to!int(parts[2]);\n    if (month < 1 ||\
    \ month > 12)\n        return false;\n    if (day < 1)\n        return false;\n\
    \    if (month == 2)\n    {\n        if (day > 29)\n            return false;\n\
    \        if (day == 29)\n        {\n            if (year % 4 != 0)\n         \
    \       return false;\n            if (year % 100 == 0 && year % 400 != 0)\n \
    \               return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    else\n    {\n        if (day > 31)\n           \
    \ return false;\n    }\n    return true;\n}", "{\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_arr = date.split(\"-\");\n    if\
    \ (date_arr.length != 3)\n        return false;\n    auto month = date_arr[0].to!int;\n\
    \    auto day = date_arr[1].to!int;\n    auto year = date_arr[2].to!int;\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1)\n    \
    \    return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 1 || month == 3 || month ==\
    \ 5 || month == 7 || month == 8 || month == 10 || month == 12)\n    {\n      \
    \  if (day > 31)\n            return false;\n    }\n    else\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ date_parts = date.split(\"-\").map!(to!int);\n    if (date_parts.length != 3)\
    \ return false;\n    if (date_parts[0] < 1 || date_parts[0] > 12) return false;\n\
    \    if (date_parts[1] < 1 || date_parts[1] > months[date_parts[0] - 1]) return\
    \ false;\n    if (date_parts[0] == 2 && date_parts[1] == 29 && !isLeapYear(date_parts[2]))\
    \ return false;\n    return true;\n}", "{\n    if(date.length == 0)\n        return\
    \ false;\n    auto date_parts = date.split(\"-\");\n    if(date_parts.length !=\
    \ 3)\n        return false;\n    int month = to!int(date_parts[0]);\n    int day\
    \ = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2 && day > 29)\n        return false;\n \
    \   if(month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n      \
    \  if(day > 30)\n            return false;\n    }\n    return true;\n}", "{\n\
    \    if(date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if(date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2 && day\
    \ > 29)\n        return false;\n    if(month == 4 || month == 6 || month == 9\
    \ || month == 11)\n        if(day > 30)\n            return false;\n    return\
    \ true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    auto parts = date.split(\"-\");\n    if (parts.length != 3) return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    if (date.length != 10)\n        return false;\n    if (date[2] != '-' ||\
    \ date[5] != '-')\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ // Write your code here\n    auto parts = split(date, '-');\n    if (parts.length\
    \ != 3) return false;\n    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    string[] date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] months = [1,3,5,7,8,10,12];\n    int[] months2 = [4,6,9,11];\n    int[]\
    \ months3 = [2];\n    int[] days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    int[] days2 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n\
    \    int[] days3 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28];\n\
    \    int[] years = [2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,",
  "{\n    if (date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    auto month\
    \ = to!int(date_parts[0]);\n    auto day = to!int(date_parts[1]);\n    auto year\
    \ = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (isLeapYear(year))\n        {\n            if (day > 29)\n  \
    \              return false;\n        }\n        else\n        {\n           \
    \ if (day > 28)\n                return false;\n        }\n    }\n    else if\
    \ (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    if(date.length\
    \ == 0)\n        return false;\n    auto date_arr = date.split(\"-\");\n    if(date_arr.length\
    \ != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n    int\
    \ day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(month == 2)\n    {\n     \
    \   if(year % 4 == 0)\n        {\n            if(day < 1 || day > 29)\n      \
    \          return false;\n        }\n        else\n        {\n            if(day\
    \ < 1 || day > 28)\n                return false;\n        }\n    }\n    else\
    \ if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10 || month == 12)\n    {\n        if(day < 1 || day > 31)\n            return\
    \ false;\n    }\n    else\n    {\n        if(day < 1 || day > 30)\n          \
    \  return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto split = date.split(\"-\");\n    if (split.length\
    \ != 3)\n        return false;\n    int month = to!int(split[0]);\n    int day\
    \ = to!int(split[1]);\n    int year = to!int(split[2]);\n    if (year < 0)\n \
    \       return false;\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n       \
    \ if (day > 29)\n            return false;\n        if (day == 29)\n        {\n\
    \            if (year % 4 != 0)\n                return false;\n            if\
    \ (year % 100 == 0 && year % 400 != 0)\n                return false;\n      \
    \  }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if (day > 30)\n            return false;\n    }\n    else\n  \
    \  {\n        if (day > 31)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if (date.length == 0)\n        return false;\n    auto date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3)\n        return false;\n\
    \    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    import std.algorithm :\
    \ map;\n    import std.conv : to;\n    import std.range : split;\n    import std.string\
    \ : strip;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.datetime\
    \ : DateTime;\n    import std.datetime : Date;\n    import std.datetime : Month;\n\
    \    import std.datetime : Year;\n    import std.datetime : Day;\n    import std.datetime\
    \ : MonthTuple;\n    import std.datetime : DayTuple;\n    import std.datetime\
    \ : YearTuple;\n    import std.datetime : DateTuple;\n    import std.datetime\
    \ : DateTimeTuple;\n    import std.datetime : DateTimeException;\n    import std.datetime\
    \ : DateException;\n    import std.datetime : TimeException;\n    import std.datetime\
    \ : Time;\n    import std.datetime : TimeTuple;\n    import std.datetime : TimeOfDay;\n\
    \    import std.datetime : TimeOfDayTuple;\n    import std.datetime : TimeOfDayException;\n\
    \    import std.datetime : TimeZone;\n    import std.datetime : TimeZoneException;\n\
    \    import std.datetime : TimeZoneTuple;\n    import std.datetime : TimeZoneOffset;\n\
    \    import std.datetime : TimeZoneOffsetTuple;\n    import std.datetime : TimeZoneOffsetException;\n\
    \    import std.datetime : TimeZoneName;\n    import std.datetime : TimeZoneNameTuple;\n\
    \    import std.datetime : TimeZoneNameException;\n    import std.datetime : TimeZoneAbbreviation;\n\
    \    import std.datetime : TimeZoneAbbreviationTuple;\n    import std.datetime\
    \ : TimeZoneAbbreviationException;\n    import std.datetime : DateTimeZone;\n\
    \    import std.datetime : DateTimeZoneTuple;\n    import std.datetime : DateTimeZoneException;\n\
    \    import std.datetime : DateTimeZoneOffset;\n    import std.datetime : DateTimeZoneOffsetTuple",
  "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto\
    \ parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n    int\
    \ month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month < 1\
    \ || month > 12) return false;\n    if (year < 1) return false;\n    if (month\
    \ == 2 && day == 29) {\n        if (year % 4 != 0) return false;\n        if (year\
    \ % 100 == 0 && year % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length !=\
    \ 3)\n        return false;\n    auto month = to!int(date_tuple[0]);\n    auto\
    \ day = to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ date_arr = date.split(\"-\").map!(to!int).array;\n    if (date_arr.length !=\
    \ 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n\
    \    if (date_arr[2] < 1) return false;\n    return true;\n}", "{\n    int[] months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length !=\
    \ 10)\n        return false;\n    if (date[2] != '-' || date[5] != '-')\n    \
    \    return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > months[month - 1])\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0) return false;\n\
    \    if (date.length != 10) return false;\n    if (date[2] != '-' || date[5] !=\
    \ '-') return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (year % 4 == 0) {\n            if (day > 29) return false;\n        } else {\n\
    \            if (day > 28) return false;\n        }\n    } else if (month == 4\
    \ || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    // your code here\n    if(date.length\
    \ == 0)\n        return false;\n    if(date.length != 10)\n        return false;\n\
    \    if(date[2] != '-' || date[5] != '-')\n        return false;\n    if(date[0]\
    \ == '0')\n        return false;\n    if(date[3] == '0')\n        return false;\n\
    \    if(date[6] == '0')\n        return false;\n    if(date[7] == '0')\n     \
    \   return false;\n    if(date[8] == '0')\n        return false;\n    if(date[9]\
    \ == '0')\n        return false;\n    if(date[0] > '1')\n        return false;\n\
    \    if(date[0] == '1' && date[1] > '2')\n        return false;\n    if(date[3]\
    \ > '3')\n        return false;\n    if(date[3] == '3' && date[4] > '1')\n   \
    \     return false;\n    if(date[0] == '0' && date[1] == '2' && date[3] == '3')\n\
    \        return false;\n    if(date[0] == '0' && date[1] == '2' && date[3] ==\
    \ '2' && date[4] == '9')\n        return false;\n    if(date[0] == '0' && date[1]\
    \ == '2' && date[3] == '2' && date[4] == '8' && date[6] == '2' && date[7] == '0'\
    \ && date[8] == '2' && date[9] == '0')\n        return false;\n    return true;\n\
    }", "{\n    if (date.length == 0)\n        return false;\n    auto date_tuple\
    \ = tuple(date.split(\"-\"));\n    if (date_tuple.length != 3)\n        return\
    \ false;\n    auto month = to!int(date_tuple[0]);\n    auto day = to!int(date_tuple[1]);\n\
    \    auto year = to!int(date_tuple[2]);\n    if (month < 1 || month > 12)\n  \
    \      return false;\n    if (day < 1 || day > 31)\n        return false;\n  \
    \  if (month == 2)\n    {\n        if (day > 29)\n            return false;\n\
    \        if (day == 29)\n        {\n            if (year % 4 != 0)\n         \
    \       return false;\n            if (year % 100 == 0 && year % 400 != 0)\n \
    \               return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] days = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length != 10)\n     \
    \   return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > days[month - 1])\n        return false;\n\
    \    if (month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n \
    \       return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    if (date.count('-') != 2)\n        return false;\n\
    \    auto date_split = date.split('-');\n    if (date_split.length != 3)\n   \
    \     return false;\n    if (date_split[0].length != 2 || date_split[1].length\
    \ != 2 || date_split[2].length != 4)\n        return false;\n    auto month =\
    \ to!int(date_split[0]);\n    auto day = to!int(date_split[1]);\n    auto year\
    \ = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (date.length == 0)\n        return false;\n   \
    \ auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n    \
    \    return false;\n    auto month = to!int(date_parts[0]);\n    auto day = to!int(date_parts[1]);\n\
    \    auto year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n  \
    \      return false;\n    if (day < 1 || day > 31)\n        return false;\n  \
    \  if (month == 2)\n    {\n        if (day > 29)\n            return false;\n\
    \        if (day == 29)\n        {\n            if (year % 4 != 0)\n         \
    \       return false;\n            if (year % 100 == 0 && year % 400 != 0)\n \
    \               return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    auto date_tuple = tuple(date.split(\"\
    -\"));\n    if (date_tuple.length != 3)\n        return false;\n    auto day =\
    \ to!int(date_tuple[1]);\n    auto month = to!int(date_tuple[0]);\n    auto year\
    \ = to!int(date_tuple[2]);\n    if (day < 1 || day > 31)\n        return false;\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (year < 1)\n\
    \        return false;\n    if (day == 31 && (month == 2 || month == 4 || month\
    \ == 6 || month == 9 || month == 11))\n        return false;\n    if (day == 30\
    \ && month == 2)\n        return false;\n    if (day == 29 && month == 2 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    import std.algorithm : map;\n\
    \    import std.array : array;\n    import std.conv : to;\n    import std.range\
    \ : isInputRange;\n    import std.typecons : tuple;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.string : split;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n   ", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(to!int).array;\n\
    \    if (date_arr.length != 3)\n        return false;\n    if (date_arr[0] < 1\
    \ || date_arr[0] > 12)\n        return false;\n    if (date_arr[1] < 1 || date_arr[1]\
    \ > months[date_arr[0] - 1])\n        return false;\n    if (date_arr[0] == 2\
    \ && date_arr[1] == 29)\n    {\n        int year = date_arr[2];\n        if (year\
    \ % 4 != 0)\n            return false;\n        if (year % 100 == 0 && year %\
    \ 400 != 0)\n            return false;\n    }\n    return true;\n}", "{\n    auto\
    \ date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length != 3) return\
    \ false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if (year < 0) return false;\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1) return false;\n  \
    \  if (month == 2)\n    {\n        if (year % 4 == 0)\n        {\n           \
    \ if (day > 29) return false;\n        }\n        else\n        {\n          \
    \  if (day > 28) return false;\n        }\n    }\n    else if (month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n\
    \    {\n        if (day > 31) return false;\n    }\n    else\n    {\n        if\
    \ (day > 30) return false;\n    }\n    return true;\n}", "{\n    string[] date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3)\n        return false;\n\
    \    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n  \
    \  int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n       \
    \ return false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (date.length == 0) return false;\n    auto split\
    \ = date.split(\"-\");\n    if (split.length != 3) return false;\n    int month\
    \ = to!int(split[0]);\n    int day = to!int(split[1]);\n    int year = to!int(split[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) {\n        if (year % 4 == 0) {\n       \
    \     if (day > 29) return false;\n        } else {\n            if (day > 28)\
    \ return false;\n        }\n    } else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0) return false;\n    auto date_arr = date.split(\"\
    -\");\n    if(date_arr.length != 3) return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2)\n    {\n        if(day > 29) return false;\n    \
    \    if(day == 29)\n        {\n            if(year % 4 != 0) return false;\n \
    \           if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if(month == 4 || month == 6 || month == 9 || month == 11)\n \
    \   {\n        if(day > 30) return false;\n    }\n    return true;\n}", "{\n \
    \   if (date.length == 0)\n        return false;\n    int day = to!int(date[0..1]);\n\
    \    int month = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n   \
    \ if (day < 1 || day > 31 || month < 1 || month > 12 || year < 1)\n        return\
    \ false;\n    if (month == 2)\n    {\n        if (day > 29)\n            return\
    \ false;\n        if (day == 29)\n        {\n            if (year % 4 != 0)\n\
    \                return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    if(date.length\
    \ == 0)\n        return false;\n    auto parts = date.split(\"-\");\n    if(parts.length\
    \ != 3)\n        return false;\n    int month = to!int(parts[0]);\n    int day\
    \ = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if(month < 1 || month\
    \ > 12)\n        return false;\n    if(day < 1 || day > 31)\n        return false;\n\
    \    if(month == 2)\n    {\n        if(day > 29)\n            return false;\n\
    \        if(day == 29)\n        {\n            if(year % 4 != 0)\n           \
    \     return false;\n            if(year % 100 == 0 && year % 400 != 0)\n    \
    \            return false;\n        }\n    }\n    else if(month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n          \
    \  return false;\n    }\n    return true;\n}", "{\n    if (date.length != 10)\n\
    \        return false;\n    if (date[2] != '-' || date[5] != '-')\n        return\
    \ false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (month == 2)\n    {\n        if (year % 4 == 0)\n   \
    \     {\n            if (day < 1 || day > 29)\n                return false;\n\
    \        }\n        else\n        {\n            if (day < 1 || day > 28)\n  \
    \              return false;\n        }\n    }\n    else if (month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n\
    \    {\n        if (day < 1 || day > 31)\n            return false;\n    }\n \
    \   else\n    {\n        if (day < 1 || day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int[] month_days = [31, 28, 31, 30, 31,\
    \ 30, 31, 31, 30, 31, 30, 31];\n    if (date.length != 10)\n        return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > month_days[month - 1])\n        return false;\n\
    \    if (month == 2 && isLeapYear(year) && day > 29)\n        return false;\n\
    \    if (date[2] != '-' || date[5] != '-')\n        return false;\n    return\
    \ true;\n}", "{\n    if (date.length == 0)\n        return false;\n    auto date_tuple\
    \ = split(date, \"-\");\n    if (date_tuple.length != 3)\n        return false;\n\
    \    auto month = to!int(date_tuple[0]);\n    auto day = to!int(date_tuple[1]);\n\
    \    auto year = to!int(date_tuple[2]);\n    if (month < 1 || month > 12)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day < 1 || day >\
    \ 29)\n            return false;\n    }\n    else if (month == 1 || month == 3\
    \ || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n \
    \   {\n        if (day < 1 || day > 31)\n            return false;\n    }\n  \
    \  else\n    {\n        if (day < 1 || day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    string[] date_arr = date.split(\"-\");\n\
    \    if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (year %\
    \ 4 == 0)\n        {\n            if (day > 29)\n                return false;\n\
    \        }\n        else\n        {\n            if (day > 28)\n             \
    \   return false;\n        }\n    }\n    else if (month == 4 || month == 6 ||\
    \ month == 9 || month == 11)\n    {\n        if (day > 30)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a\
    \ => to!int(a)).array;\n    if (date_arr.length != 3)\n        return false;\n\
    \    if (date_arr[0] < 1 || date_arr[0] > 12)\n        return false;\n    if (date_arr[1]\
    \ < 1 || date_arr[1] > months[date_arr[0] - 1])\n        return false;\n    if\
    \ (date_arr[0] == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4\
    \ != 0)\n            return false;\n        if (date_arr[2] % 100 == 0 && date_arr[2]\
    \ % 400 != 0)\n            return false;\n    }\n    return true;\n}", "{\n  \
    \  if (date.length < 10)\n        return false;\n    auto date_arr = date.split(\"\
    -\");\n    if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0) return false;\n    auto date_split = date.split(\"\
    -\");\n    if(date_split.length != 3) return false;\n    if(date_split[0].length\
    \ != 2 || date_split[1].length != 2 || date_split[2].length != 4) return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(month < 1 || month > 12) return\
    \ false;\n    if(day < 1 || day > 31) return false;\n    if(month == 2)\n    {\n\
    \        if(day > 29) return false;\n        if(day == 29)\n        {\n      \
    \      if(year % 4 != 0) return false;\n            if(year % 100 == 0 && year\
    \ % 400 != 0) return false;\n        }\n    }\n    else if(month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if(day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n \
    \       return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\
    \ return false;\n    auto parts = date.split(\"-\");\n    if (parts.length !=\
    \ 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    int[] date_arr = date.split(\"-\").map!(to!int).array;\n    if (date_arr.length\
    \ != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n\
    \    if (date_arr[0] == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2]\
    \ % 4 != 0) return false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] %\
    \ 400 != 0) return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if (date_split.length != 3)\n        return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    if (date.length == 0)\n        return false;\n    auto\
    \ date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n        return\
    \ false;\n    auto day = to!int(date_parts[0]);\n    auto month = to!int(date_parts[1]);\n\
    \    auto year = to!int(date_parts[2]);\n    if (day < 1 || day > 31)\n      \
    \  return false;\n    if (month < 1 || month > 12)\n        return false;\n  \
    \  if (month == 2 && day > 29)\n        return false;\n    if (month == 2 && day\
    \ == 29 && !isLeapYear(year))\n        return false;\n    if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n        if (day > 30)\n            return\
    \ false;\n    return true;\n}", "{\n    if(date.length == 0)\n        return false;\n\
    \    auto date_tuple = split(date, \"-\");\n    if(date_tuple.length != 3)\n \
    \       return false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_tuple[0]);\n    auto\
    \ day = to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n    if\
    \ (year < 0)\n        return false;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n\
    \    {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n   \
    \             return false;\n        }\n        else\n        {\n            if\
    \ (day > 28)\n                return false;\n        }\n    }\n    else if (month\
    \ == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10\
    \ || month == 12)\n    {\n        if (day > 31)\n            return false;\n \
    \   }\n    else\n    {\n        if (day > 30)\n            return false;\n   \
    \ }\n    return true;\n}", "{\n    if(date.length != 10)\n        return false;\n\
    \    if(date[2] != '-' || date[5] != '-')\n        return false;\n    int month\
    \ = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2 && day > 29)\n        return\
    \ false;\n    if(month == 4 || month == 6 || month == 9 || month == 11)\n    \
    \    if(day > 30)\n            return false;\n    if(year < 1)\n        return\
    \ false;\n    return true;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_147_get_max_triples
language: d
prompt: "import std.math;\n/*\n\n    You are given a positive integer n. You have\
  \ to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264\
  \ n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
  \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of\
  \ 3.\n\n    Example :\n    >>> get_max_triples(5L)\n    1L\n        Explanation:\
  \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
  \    \n*/\nlong get_max_triples(long n) \n"
tests: "unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
  \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
  \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k <= n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n - 1; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k <= n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    long a[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++) {\n        for (long j = i + 1; j < n;\
    \ j++) {\n            for (long k = j + 1; k < n; k++) {\n                if ((i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0) {\n                 \
    \   result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n - 1; i++)\n \
    \   {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k <= n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      res++;\n                }\n            }\n        }\n    }\n    return\
    \ res;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if (((i * i - i + 1) +\
    \ (j * j - j + 1) + (k * k - k + 1)) % 3 == 0)\n                {\n          \
    \          res++;\n                }\n            }\n        }\n    }\n    return\
    \ res;\n}", "{\n    long result = 0;\n    for (long i = 0; i < n - 2; i++)\n \
    \   {\n        for (long j = i + 1; j < n - 1; j++)\n        {\n            for\
    \ (long k = j + 1; k < n; k++)\n            {\n                if ((i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n         \
    \   for (long k = j + 1; k < n; k++)\n            {\n                if ((i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "{\n    long result = 0;\n    for (long i = 1; i\
    \ < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n    \
    \        for (long k = j + 1; k < n; k++)\n            {\n                if ((i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n\
    \                    result++;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] a = new long[n];\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n              \
    \  {\n                    count++;\n                }\n            }\n       \
    \ }\n    }\n    return count;\n}", "{\n    long result = 0;\n    for (long i =\
    \ 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k <= n; k++)\n            {\n         \
    \       if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n      \
    \          {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n  \
    \      {\n            for (long k = j + 1; k <= n; k++)\n            {\n     \
    \           if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n  \
    \  for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    result++;\n                }\n        \
    \    }\n        }\n    }\n    return result;\n}", "{\n    long max_triples = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    max_triples++;\n           \
    \     }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n  \
    \  long count = 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k <= n;\
    \ k++)\n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0)\n                {\n                    count++;\n  \
    \              }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

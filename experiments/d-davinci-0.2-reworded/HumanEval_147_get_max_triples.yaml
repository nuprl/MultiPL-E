name: HumanEval_147_get_max_triples
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
  \ integer n. You have to create an integer array a of length n.\n        For each\
  \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the\
  \ number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j]\
  \ + a[k] is a multiple of 3.\n\n    Example :\n    >>> get_max_triples(5L)\n   \
  \ 1L\n    \n*/\nlong get_max_triples(long n) \n"
tests: "unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
  \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
  \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
completions: ["{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long ret = 0L;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    ret++;\n                }\n          \
    \  }\n        }\n    }\n    return ret;\n}", "{\n    long res = 0;\n    for (long\
    \ i = 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n  \
    \      {\n            for (long k = j + 1; k <= n; k++)\n            {\n     \
    \           if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n  \
    \              {\n                    res++;\n                }\n            }\n\
    \        }\n    }\n    return res;\n}", "{\n    long res = 0;\n    for (long i\
    \ = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n            \
    \        res++;\n            }\n        }\n    }\n    return res;\n}", "{\n  \
    \  long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ res = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n  \
    \          {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n                    res++;\n            }\n        }\n    }\n\
    \    return res;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                    res++;\n     \
    \       }\n        }\n    }\n    return res;\n}", "{\n    long count = 0;\n  \
    \  for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    count++;\n                }\n         \
    \   }\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n   \
    \ long[] a = new long[n];\n    foreach(i; 0..n)\n    {\n        a[i] = i * i -\
    \ i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i..n)\n     \
    \   {\n            foreach(k; j..n)\n            {\n                if(a[i] +\
    \ a[j] + a[k] % 3 == 0)\n                {\n                    result++;\n  \
    \              }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k <= n; k++)\n \
    \           {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k <= n; k++)\n \
    \           {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    res++;\n            \
    \    }\n            }\n        }\n    }\n    return res;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                    res++;\n            }\n        }\n    }\n   \
    \ return res;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n - 1; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k <= n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      res++;\n                }\n            }\n        }\n    }\n    return\
    \ res;\n}", "{\n    long[] a = new long[n];\n    long result = 0;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           result++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n   \
    \ for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \                   res++;\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n      \
    \  for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    count++;\n          \
    \      }\n            }\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                    res++;\n            }\n        }\n    }\n   \
    \ return res;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    for (long i = 1; i < n; i++)\n   \
    \ {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long res = 0;\n    for (long i = 1; i < n - 1; i++)\n    {\n     \
    \   for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k <= n; k++)\n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ res = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n  \
    \          {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n                {\n                    res++;\n              \
    \  }\n            }\n        }\n    }\n    return res;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n         \
    \   for (long k = j + 1; k < n; k++)\n            {\n                if ((i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "{\n    long count = 0;\n    for (long i = 1; i\
    \ < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n    \
    \        for (long k = j + 1; k < n; k++)\n            {\n                if ((i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    res++;\n                }\n          \
    \  }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long count = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n  \
    \      {\n            for (long k = j + 1; k <= n; k++)\n            {\n     \
    \           if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n  \
    \  for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    result++;\n                }\n        \
    \    }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long res = 0;\n    for (long i = 1;\
    \ i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n  \
    \          for (long k = j + 1; k < n; k++)\n            {\n                if\
    \ ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n               \
    \     res++;\n            }\n        }\n    }\n    return res;\n}", "{\n    long\
    \ res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++) \n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\
    \ \n    {\n        for (long j = i + 1; j < n; j++) \n        {\n            for\
    \ (long k = j + 1; k < n; k++) \n            {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                    res++;\n            }\n        }\n  \
    \  }\n    return res;\n}", "{\n    long result = 0;\n    for (long i = 1; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n\
    \                    result++;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n  \
    \          for (long k = j + 1; k < n; k++)\n            {\n                if\
    \ ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n               \
    \ {\n                    result++;\n                }\n            }\n       \
    \ }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long i\
    \ = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n            \
    \    {\n                    result++;\n                }\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    long res = 0;\n    for (long i\
    \ = 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n    \
    \    {\n            for (long k = j + 1; k <= n; k++)\n            {\n       \
    \         if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n    \
    \            {\n                    res++;\n                }\n            }\n\
    \        }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n - 1; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n  \
    \      {\n            for (long k = j + 1; k <= n; k++)\n            {\n     \
    \           if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n    for\
    \ (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    res++;\n                }\n           \
    \ }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0..n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i+1..n)\n        {\n \
    \           foreach(k; j+1..n)\n            {\n                if((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                {\n                    result++;\n      \
    \          }\n            }\n        }\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    int[] a = new int[n];\n\
    \    long count = 0;\n    for (int i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (int i = 0; i < n; i++)\n    {\n        for (int\
    \ j = i + 1; j < n; j++)\n        {\n            for (int k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    count++;\n                }\n            }\n  \
    \      }\n    }\n    return count;\n}", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result\
    \ += 1;\n                }\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    count++;\n          \
    \      }\n            }\n        }\n    }\n    return count;\n}", "{\n    long\
    \ res = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n  \
    \          {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n                {\n                    res++;\n              \
    \  }\n            }\n        }\n    }\n    return res;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                    res++;\n     \
    \       }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n \
    \   for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n \
    \               {\n                    result++;\n                }\n        \
    \    }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    if (n < 3)\n\
    \        return 0;\n    long[] a = new long[n];\n    foreach (i, ref e; a)\n \
    \       e = i * i - i + 1;\n    long res = 0;\n    foreach (i, ref e; a)\n   \
    \ {\n        foreach (j, ref f; a[i + 1 .. $])\n        {\n            foreach\
    \ (k, ref g; a[j + 1 .. $])\n            {\n                if ((e + f + g) %\
    \ 3 == 0)\n                    res++;\n            }\n        }\n    }\n    return\
    \ res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n  \
    \  {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0..n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i+1..n)\n\
    \        {\n            foreach(k; j+1..n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                    res++;\n            }\n        }\n    }\n   \
    \ return res;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n   \
    \ foreach(i; 0..n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0..n)\n    {\n        foreach(j; i+1..n)\n        {\n            foreach(k;\
    \ j+1..n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0..n)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i+1..n)\n\
    \        {\n            foreach(k; j+1..n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long res = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n     \
    \   a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n \
    \       for (long j = i + 1; j < n; j++) \n        {\n            for (long k\
    \ = j + 1; k < n; k++) \n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0) \n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                    res++;\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n      \
    \  for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k < n; k++)\n            {\n                if (((i * i - i + 1) + (j * j\
    \ - j + 1) + (k * k - k + 1)) % 3 == 0)\n                {\n                 \
    \   result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    int[] a = new int[n];\n    for (int i = 0; i\
    \ < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (int i = 0;\
    \ i < n; i++)\n    {\n        for (int j = i + 1; j < n; j++)\n        {\n   \
    \         for (int k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j;\
    \ i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n      \
    \              result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      res++;\n                }\n            }\n        }\n    }\n    return\
    \ res;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j\
    \ * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                \
    \    res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n      \
    \  for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j +\
    \ 1; k < n; k++)\n            {\n                if ((i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ res = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i +\
    \ 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n  \
    \          {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n                    res++;\n            }\n        }\n    }\n\
    \    return res;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n              \
    \      result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0..n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0..n)\n \
    \   {\n        foreach(j; i+1..n)\n        {\n            foreach(k; j+1..n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \         {\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    long res = 0;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n       \
    \             res++;\n            }\n        }\n    }\n    return res;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                {\n                    result++;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1;\
    \ j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n     \
    \       {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[long] a;\n    foreach(i; 0..n)\n    {\n        a[i] = i * i -\
    \ i + 1;\n    }\n    foreach(i; 0..n)\n    {\n        foreach(j; i+1..n)\n   \
    \     {\n            foreach(k; j+1..n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    for (long i = 1; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0) \n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long res = 0;\n    for (long i = 1; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n                    res++;\n            }\n        }\n    }\n\
    \    return res;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n         \
    \   for (long k = j + 1; k < n; k++)\n            {\n                if ((i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n                {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

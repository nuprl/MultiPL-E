name: HumanEval_133_sum_squares
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given an array of numbers.\n\
  \    You need to return the sum of squared numbers in the given array,\n    round\
  \ each element in the array to the upper int(Ceiling) first.\n    Examples:\n  \
  \  >>> lst\n    [1L, 2L, 3L]\n    >>> lst\n    [1L, 4L, 9L]\n    >>> lst\n    [1L,\
  \ 3L, 5L, 7L]\n    >>> lst\n    [1.4, 4.2, 0L]\n    >>> lst\n    [-2.4, 1L, 1L]\n\
  \    \n\n    \n*/\nlong sum_squares(long[] lst) \n"
tests: "unittest\n{\n    alias candidate = sum_squares;\n\n    assert(candidate([1L,\
  \ 2L, 3L]) == 14L);\n    assert(candidate([1.0, 2L, 3L]) == 14L);\n    assert(candidate([1L,\
  \ 3L, 5L, 7L]) == 84L);\n    assert(candidate([1.4, 4.2, 0L]) == 29L);\n    assert(candidate([-2.4,\
  \ 1L, 1L]) == 6L);\n    assert(candidate([100L, 1L, 15L, 2L]) == 10230L);\n    assert(candidate([10000L,\
  \ 10000L]) == 200000000L);\n    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n  \
  \  assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0L])\
  \ == 0L);\n    assert(candidate([-1L]) == 1L);\n    assert(candidate([-1L, 1L, 0L])\
  \ == 2L);\n}\nvoid main(){}"
completions: ["{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += pow(ceil(e), 2);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += (long)ceil(e) * (long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n\
    \        sum += cast(long)ceil(l) * cast(long)ceil(l);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += ceil(e)\
    \ * ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(long i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e)*cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += ceil(e)\
    \ * ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n    \
    \    sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum =\
    \ 0;\n    foreach(var i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long result = 0;\n    foreach(elem; lst)\n\
    \    {\n        result += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n\
    \    return result;\n}", "{\n    return lst.map!(a => cast(long)ceil(a) * cast(long)ceil(a)).sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(long i; lst)\n\
    \    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(item; lst)\n    {\n        item = ceil(item);\n \
    \       sum += item * item;\n    }\n    return sum;\n}", "{\n    return lst.map!(a\
    \ => cast(long)ceil(a)).map!(a => a * a).sum;\n}", "{\n    long res = 0;\n   \
    \ foreach(e; lst)\n    {\n        res += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return res;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        e = ceil(e);\n\
    \        sum += e * e;\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += e * e;\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ return lst.map!(a => cast(long)ceil(a)).map!(a => a * a).sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(long i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += elem * elem;\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += ceil(elem) * ceil(elem);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(long i; lst)\n\
    \    {\n        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n  \
    \  long sum = 0;\n    foreach(elem; lst)\n    {\n        sum += ceil(elem) * ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n      \
    \  sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += ceil(i) * ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n   \
    \     sum += ceil(elem) * ceil(elem);\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += ceil(elem) * ceil(elem);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n \
    \       sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n        sum\
    \ += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += ceil(elem) * ceil(elem);\n    }\n\
    \    return sum;\n}", "{\n    long result = 0;\n    foreach(item; lst)\n    {\n\
    \        result += item * item;\n    }\n    return result;\n}", "{\n    long sum\
    \ = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n   \
    \     sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += ceil(elem) * ceil(elem);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(i; lst)\n    {\n        sum += ceil(i) * ceil(i);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += e * e;\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += e * e;\n    }\n    return sum;\n}\nlong sum_squares(double[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}\nlong sum_squares(real[] lst)\
    \ \n{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}\nlong sum_squares(int[] lst)\
    \ \n{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += e * e;\n\
    \    }\n    return sum;\n}\nlong sum_squares(short[] lst) \n{\n    long sum =\
    \ 0;\n    foreach(e; lst)\n    {\n        sum += e * e;\n    }\n    return sum;\n\
    }\nlong sum_squares(char[] lst) \n{\n    long sum = 0;\n    foreach(e; lst)\n\
    \    {\n        sum += e * e;\n    }\n    return sum;\n}\nlong sum_squares(byte[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += e *\
    \ e;\n    }\n    return sum;\n}\nlong sum_squares(ubyte[] lst) \n{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += e * e;\n    }\n    return sum;\n\
    }\nlong sum_squares(ushort[] lst) \n{\n    long sum = 0;\n    foreach(e; lst)\n\
    \    {\n        sum += e * e;\n    }\n    return sum;\n}\nlong sum_squares(uint[]\
    \ lst) \n{", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += e*e;\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(l; lst)\n    {\n        sum += cast(long)ceil(l) * cast(long)ceil(l);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long result = 0;\n    foreach(element; lst)\n    {\n        result\
    \ += pow(ceil(element), 2);\n    }\n    return result;\n}", "{\n    long sum =\
    \ 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n        sum += cast(long)\
    \ ceil(l*l);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(l; lst)\n    {\n        sum += cast(long)ceil(l*l);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(long i; lst)\n    {\n        sum\
    \ += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n \
    \   foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(num; lst)\n    {\n        sum += cast(long)ceil(num) * cast(long)ceil(num);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n   \
    \     sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n        sum += ceil(l)\
    \ * ceil(l);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem;\
    \ lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n  \
    \  {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n   \
    \ return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n    \
    \    sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return sum;\n\
    }", "{\n    return lst.map!(a => cast(long)ceil(a)^2).sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(l; lst)\n    {\n        sum += cast(long)ceil(l*l);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n \
    \       sum += elem * elem;\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n   \
    \     sum += ceil(elem) * ceil(elem);\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(elem; lst)\n    {\n        sum += ceil(elem) * ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(long x; lst)\n    {\n \
    \       sum += ceil(x) * ceil(x);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(num; lst)\n    {\n        sum += ceil(num) * ceil(num);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long result\
    \ = 0;\n    foreach(i; lst)\n    {\n        result += ceil(i) * ceil(i);\n   \
    \ }\n    return result;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += ceil(elem) * ceil(elem);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += ceil(i) * ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n   \
    \     sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(long i; lst)\n\
    \    {\n        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n  \
    \  long sum = 0;\n    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(elem; lst)\n    {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(elem; lst)\n \
    \   {\n        sum += cast(long)ceil(elem) * cast(long)ceil(elem);\n    }\n  \
    \  return sum;\n}", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n      \
    \  sum += cast(long)ceil(l * l);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long res = 0;\n    foreach(e; lst)\n    {\n\
    \        res += pow(ceil(e), 2);\n    }\n    return res;\n}", "{\n    long sum\
    \ = 0;\n    foreach(i; lst)\n    {\n        sum += ceil(i) * ceil(i);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += (long)ceil(e) * (long)ceil(e);\n    }\n    return sum;\n}", "{\n \
    \   long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(long i; lst)\n    {\n        sum += ceil(i)\
    \ * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i;\
    \ lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n        sum += cast(long)ceil(l\
    \ * l);\n    }\n    return sum;\n}", "{\n    return lst.map!(a => cast(long)ceil(a)^2).sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += ceil(e)\
    \ * ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i;\
    \ lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ ceil(e) * ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n        sum += ceil(l) * ceil(l);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n\
    \        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(l; lst)\n    {\n        sum += cast(long)ceil(l*l);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(i; lst)\n    {\n        sum +=\
    \ ceil(i) * ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i;\
    \ lst)\n    {\n        sum += ceil(i) * ceil(i);\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e)\
    \ * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long result = 0;\n    foreach(i; lst)\n \
    \   {\n        result += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return\
    \ result;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum\
    \ += ceil(e) * ceil(e);\n    }\n    return sum;\n}", "{\n    long result = 0;\n\
    \    foreach(elem; lst)\n    {\n        result += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return result;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n \
    \   {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(l; lst)\n    {\n\
    \        sum += cast(long)ceil(l*l);\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)ceil(e) * cast(long)ceil(e);\n\
    \    }\n    return sum;\n}", "{\n    long res = 0;\n    foreach(e; lst)\n    {\n\
    \        res += e*e;\n    }\n    return res;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += e * e;\n    }\n    return sum;\n}", "{\n    long\
    \ result = 0;\n    foreach(item; lst)\n    {\n        result += pow(ceil(item),\
    \ 2);\n    }\n    return result;\n}", "{\n    long sum = 0;\n    foreach(l; lst)\n\
    \    {\n        sum += cast(long)ceil(l) * cast(long)ceil(l);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(n; lst)\n    {\n        sum += cast(long)ceil(n)\
    \ * cast(long)ceil(n);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)ceil(e) * cast(long)ceil(e);\n    }\n    return sum;\n}", "{\n   \
    \ long sum = 0;\n    foreach(e; lst)\n    {\n        sum += e * e;\n    }\n  \
    \  return sum;\n}\nlong sum_squares(double[] lst) \n{\n    long sum = 0;\n   \
    \ foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ pow(ceil(e), 2);\n    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_138_is_equal_to_sum_even
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvnr6j8y6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpvnr6j8y6.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpvnr6j8y6.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd0a49554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    if (n < 0) \n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprfn0svmb.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmprfn0svmb.__unittest_L36_C1()\
    \ [0x427a6e]\\n??:? void tmprfn0svmb.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x8a4e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    if (n % 4 == 0)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz5ig38dh.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpz5ig38dh.__unittest_L26_C1()\
    \ [0x427ad9]\\n??:? void tmpz5ig38dh.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5e903554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code goes here\n    if(n<8)\n        return false;\n   \
    \ if(n==8)\n        return true;\n    if(n%2!=0)\n        return false;\n    long\
    \ a = n/4;\n    long b = n/2;\n    long c = n/2;\n    long d = n/2;\n    if(a+b+c+d==n)\n\
    \        return true;\n    else\n        return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo9thyg16.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e25]\\n??:? void tmpo9thyg16.__unittest_L32_C1()\
    \ [0x427b15]\\n??:? void tmpo9thyg16.__modtest() [0x427ba4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb4b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9de]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb71]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9b5]\\n??:? runModuleUnitTests [0x42b921]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428274]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281fb]\\n??:? _d_run_main [0x428166]\\n??:? main [0x427bb7]\\\
    n??:? __libc_start_main [0x536eb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptscgm37l.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmptscgm37l.__unittest_L35_C1()\
    \ [0x427a6e]\\n??:? void tmptscgm37l.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5d4b4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n\
    \    long d = n / 2;\n    long sum = a + b + c + d;\n    if (sum == n)\n     \
    \   return true;\n    return false;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxq34q40d.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpxq34q40d.__unittest_L42_C1()\
    \ [0x427ade]\\n??:? void tmpxq34q40d.__modtest() [0x427b8c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427b9f]\\\
    n??:? __libc_start_main [0x78264554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8wz8ptl9.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp8wz8ptl9.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmp8wz8ptl9.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xc48ea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    long\
    \ i = 0;\n    while (sum < n)\n    {\n        i += 2;\n        sum += i;\n   \
    \ }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfliggsfd.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpfliggsfd.__unittest_L27_C1()\
    \ [0x427aa5]\\n??:? void tmpfliggsfd.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0x9cf8d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n\
    \    }\n    return sum == n;\n}\n/*\nEvaluate whether the given number n can be\
    \ written as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7vu4q_vs.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmp7vu4q_vs.__unittest_L42_C1()\
    \ [0x427ac5]\\n??:? void tmp7vu4q_vs.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0x87d3d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long n_sqrt = cast(long)sqrt(n);\n    for (long i = 2; i <= n_sqrt;\
    \ i += 2)\n    {\n        long n_i = n - i;\n        long n_i_sqrt = cast(long)sqrt(n_i);\n\
    \        for (long j = 2; j <= n_i_sqrt; j += 2)\n        {\n            long\
    \ n_i_j = n_i - j;\n            long n_i_j_sqrt = cast(long)sqrt(n_i_j);\n   \
    \         for (long k = 2; k <= n_i_j_sqrt; k += 2)\n            {\n         \
    \       long n_i_j_k = n_i_j - k;\n                if (n_i_j_k % 2 == 0)\n   \
    \             {\n                    return true;\n                }\n       \
    \     }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwxh6sym_.d(16): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\n/tmp/tmpwxh6sym_.d(20): Error: `std.math.sqrt`\
    \ called with argument types `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\n/tmp/tmpwxh6sym_.d(24): Error: `std.math.sqrt`\
    \ called with argument types `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpwxh6sym_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n > 0 && n <= 4;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx53gnkt0.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpx53gnkt0.__unittest_L18_C1()\
    \ [0x427a52]\\n??:? void tmpx53gnkt0.__modtest() [0x427b40]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b53]\\\
    n??:? __libc_start_main [0x5e54a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        result\
    \ = true;\n        long sum = 0;\n        for (long i = 2; i <= n; i += 2)\n \
    \       {\n            sum += i;\n            if (sum == n)\n            {\n \
    \               break;\n            }\n        }\n        if (sum != n)\n    \
    \    {\n            result = false;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphs09j_uf.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmphs09j_uf.__unittest_L36_C1()\
    \ [0x427ab9]\\n??:? void tmphs09j_uf.__modtest() [0x427b88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b9b]\\\
    n??:? __libc_start_main [0x362b1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if(n % 2 == 0)\n    {\n        long a\
    \ = n / 2;\n        long b = a - 2;\n        long c = b - 2;\n        long d =\
    \ c - 2;\n        if(a + b + c + d == n)\n        {\n            result = true;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvlpv1lrl.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpvlpv1lrl.__unittest_L30_C1()\
    \ [0x427aca]\\n??:? void tmpvlpv1lrl.__modtest() [0x427b78]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b8b]\\\
    n??:? __libc_start_main [0x329b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c % 2 == 0 && d % 2 == 0)\n            return true;\n\
    \        if (c % 2 != 0)\n            a = c + 1;\n        else\n            b\
    \ = c - 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx9odtqj8.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmpx9odtqj8.__unittest_L33_C1()\
    \ [0x427afe]\\n??:? void tmpx9odtqj8.__modtest() [0x427bec]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9fd]\\n??:? runModuleUnitTests [0x42b969]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428243]\\n??:? _d_run_main [0x4281ae]\\n??:? main [0x427bff]\\\
    n??:? __libc_start_main [0xaadea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    if (n % 4 == 0)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc4fjybpi.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpc4fjybpi.__unittest_L26_C1()\
    \ [0x427ad9]\\n??:? void tmpc4fjybpi.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd3f4c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n <= 8)\n      \
    \  return false;\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpemjcg53g.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpemjcg53g.__unittest_L22_C1()\
    \ [0x427a8e]\\n??:? void tmpemjcg53g.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0x95aa7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n % 4 == 0)\n  \
    \      return true;\n    return false;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(5L)\n    false\n    >>> is_equal_to_sum_odd(7L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph1vz242k.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmph1vz242k.__unittest_L32_C1()\
    \ [0x427a66]\\n??:? void tmph1vz242k.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x69edd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8) return false;\n    if (n % 2 != 0) return false;\n  \
    \  long nn = n / 2;\n    long nn_sqrt = cast(long)sqrt(nn);\n    for (long a =\
    \ 2; a <= nn_sqrt; a += 2) \n    {\n        long b = nn - a;\n        if (b %\
    \ 2 != 0) continue;\n        long bb = b / 2;\n        long bb_sqrt = cast(long)sqrt(bb);\n\
    \        for (long c = 2; c <= bb_sqrt; c += 2) \n        {\n            long\
    \ d = bb - c;\n            if (d % 2 != 0) continue;\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4nl2__ur.d(19): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\n/tmp/tmp4nl2__ur.d(25): Error: `std.math.sqrt`\
    \ called with argument types `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp4nl2__ur.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    int count = 0;\n   \
    \ for (int i = 1; i <= n; i++)\n    {\n        if (n % i == 0 && i % 2 == 0)\n\
    \            count++;\n    }\n    return count == 4;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpybp1nevu.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpybp1nevu.__unittest_L26_C1()\
    \ [0x427ae2]\\n??:? void tmpybp1nevu.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0x94dfe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if(n % 2 != 0)\n        return result;\n\
    \    else\n    {\n        long m = n / 2;\n        for(long i = 2; i <= m; i +=\
    \ 2)\n        {\n            for(long j = 2; j <= m; j += 2)\n            {\n\
    \                for(long k = 2; k <= m; k += 2)\n                {\n        \
    \            for(long l = 2; l <= m; l += 2)\n                    {\n        \
    \                if(i + j + k + l == n)\n                        {\n         \
    \                   result = true;\n                            break;\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(5L)\n\
    \    false\n    >>> is_equal_to_sum_odd(7L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8b3ewduo.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp8b3ewduo.__unittest_L33_C1()\
    \ [0x427a7a]\\n??:? void tmp8b3ewduo.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa5ac1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else if (n == 0)\n \
    \       return true;\n    else\n        return is_equal_to_sum_even(n - 2);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7p4j5arz.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp7p4j5arz.__unittest_L23_C1()\
    \ [0x427a62]\\n??:? void tmp7p4j5arz.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xc8f00554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n\
    \        long sum = 0;\n        for (a = 0; a <= n; a += 2)\n        {\n     \
    \       for (b = 0; b <= n; b += 2)\n            {\n                for (c = 0;\
    \ c <= n; c += 2)\n                {\n                    for (d = 0; d <= n;\
    \ d += 2)\n                    {\n                        sum = a + b + c + d;\n\
    \                        if (sum == n)\n                            return true;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false;\n    }\n}\n/*\nEvaluate whether the given number n can be written as\
    \ the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_1ybghh4.d(59): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e5d]\\n??:? void tmp_1ybghh4.__unittest_L55_C1()\
    \ [0x427af2]\\n??:? void tmp_1ybghh4.__modtest() [0x427be0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ed]\\n??:? runModuleUnitTests [0x42b959]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ac]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428233]\\n??:? _d_run_main [0x42819e]\\n??:? main [0x427bf3]\\\
    n??:? __libc_start_main [0x66de2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppyxea1jx.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmppyxea1jx.__unittest_L31_C1()\
    \ [0x427ac5]\\n??:? void tmppyxea1jx.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xe1b04554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    long a = 2;\n    long b = n - 2;\n    while (a <= b)\n\
    \    {\n        if (a + b == n)\n            return true;\n        a += 2;\n \
    \       b -= 2;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppawul78p.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e35]\\n??:? void tmppawul78p.__unittest_L35_C1()\
    \ [0x427aca]\\n??:? void tmppawul78p.__modtest() [0x427bb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb5b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb81]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430030]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb0d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9c5]\\n??:? runModuleUnitTests [0x42b931]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428284]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42820b]\\n??:? _d_run_main [0x428176]\\n??:? main [0x427bcb]\\\
    n??:? __libc_start_main [0xf4afc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long sum = 0;\n        for (long i = 2; i <= n; i += 2)\n        {\n      \
    \      sum += i;\n            if (sum == n)\n                return true;\n  \
    \      }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7qmdit9o.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp7qmdit9o.__unittest_L30_C1()\
    \ [0x427ab5]\\n??:? void tmp7qmdit9o.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0x803db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpblf5g58d.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpblf5g58d.__unittest_L31_C1()\
    \ [0x427ac5]\\n??:? void tmpblf5g58d.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xa7330554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 2;\n    while (sum < n)\n   \
    \ {\n        sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\n/*\n\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(7L)\n    true\n\
    */\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsqkhwiy5.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpsqkhwiy5.__unittest_L39_C1()\
    \ [0x427ab9]\\n??:? void tmpsqkhwiy5.__modtest() [0x427b88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b9b]\\\
    n??:? __libc_start_main [0x2e595554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n   \
    \ {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy5wal39q.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpy5wal39q.__unittest_L29_C1()\
    \ [0x427ab5]\\n??:? void tmpy5wal39q.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0x67ba1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkecot6e4.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpkecot6e4.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpkecot6e4.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x7a9e7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n   \
    \ {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;\n}\n/*\n\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n\
    \    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp36h4rwwm.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp36h4rwwm.__unittest_L41_C1()\
    \ [0x427ab5]\\n??:? void tmp36h4rwwm.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xdad6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    auto a = n / 2;\n    auto b = n / 2;\n    while (a >= 0)\n\
    \    {\n        while (b >= 0)\n        {\n            if (a + b == n)\n     \
    \           return true;\n            b -= 2;\n        }\n        a -= 2;\n  \
    \      b = n / 2;\n    }\n    return false;\n}\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmes1nqmv.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e35]\\n??:? void tmpmes1nqmv.__unittest_L47_C1()\
    \ [0x427aca]\\n??:? void tmpmes1nqmv.__modtest() [0x427bb8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb5b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb81]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430030]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb0d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9c5]\\n??:? runModuleUnitTests [0x42b931]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428284]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42820b]\\n??:? _d_run_main [0x428176]\\n??:? main [0x427bcb]\\\
    n??:? __libc_start_main [0xeb7ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long max = n / 2;\n\
    \    long min = 2;\n    long a = min;\n    long b = min;\n    long c = min;\n\
    \    long d = min;\n    while (a <= max)\n    {\n        while (b <= max)\n  \
    \      {\n            while (c <= max)\n            {\n                while (d\
    \ <= max)\n                {\n                    if (a + b + c + d == n)\n  \
    \                      return true;\n                    d += 2;\n           \
    \     }\n                c += 2;\n                d = min;\n            }\n  \
    \          b += 2;\n            c = min;\n        }\n        a += 2;\n       \
    \ b = min;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    long a = 0;\n    long b = n;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae =\
    \ 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n\
    \    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long\
    \ an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar =\
    \ 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n\
    \    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long\
    \ ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be =\
    \ 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n\
    \    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long\
    \ bn = 0;\n    long bo =\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz8qce6_5.d(85): Error: expression expected, not `unittest`\\\
    n/tmp/tmpz8qce6_5.d(86): Error: semicolon expected, not `{`\\n/tmp/tmpz8qce6_5.d(98):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8qce6_5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n <= 0) return false;\n    if (n % 2 != 0) return false;\n \
    \   if (n == 4) return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpliiyznre.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dc5]\\n??:? void tmpliiyznre.__unittest_L21_C1()\
    \ [0x427a79]\\n??:? void tmpliiyznre.__modtest() [0x427b48]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a97e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb11]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a955]\\n??:? runModuleUnitTests [0x42b8c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428214]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819b]\\n??:? _d_run_main [0x428106]\\n??:? main [0x427b5b]\\\
    n??:? __libc_start_main [0x91d4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long a\
    \ = n / 2;\n        long b = a / 2;\n        long c = b / 2;\n        long d =\
    \ c / 2;\n        if (a + b + c + d == n)\n        {\n            result = true;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmped9m0k9x.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmped9m0k9x.__unittest_L30_C1()\
    \ [0x427aea]\\n??:? void tmped9m0k9x.__modtest() [0x427b98]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427bab]\\\
    n??:? __libc_start_main [0xc1480554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long m = n / 2;\n    long k = (long)sqrt(m);\n    for (long\
    \ i = 2; i <= k; i += 2)\n    {\n        if (is_equal_to_sum_even(m - i))\n  \
    \          return true;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphhzt4402.d(21): Error: C style cast illegal, use `cast(long)sqrt(m)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphhzt4402.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long a\
    \ = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  for (long i = 2; i <= n / 2; i += 2)\n        {\n            for (long j =\
    \ 2; j <= n / 2; j += 2)\n            {\n                for (long k = 2; k <=\
    \ n / 2; k += 2)\n                {\n                    for (long l = 2; l <=\
    \ n / 2; l += 2)\n                    {\n                        if (i + j + k\
    \ + l == n)\n                        {\n                            a = i;\n \
    \                           b = j;\n                            c = k;\n     \
    \                       d = l;\n                            result = true;\n \
    \                           break;\n                        }\n              \
    \      }\n                }\n            }\n        }\n        if (result)\n \
    \       {\n            writeln(\"a = \", a, \" b = \", b, \" c = \", c, \" d =\
    \ \", d);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmynzztb_.d(46): Error: `writeln` is not defined, perhaps `import\
    \ std.stdio;` is needed?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpmynzztb_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpynn939n3.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpynn939n3.__unittest_L21_C1()\
    \ [0x427a6e]\\n??:? void tmpynn939n3.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x8a7a7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c % 2 == 0 && d % 2 == 0)\n            return true;\n\
    \        if (c % 2 != 0)\n            a = c + 1;\n        else\n            b\
    \ = c - 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr0nid6g6.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmpr0nid6g6.__unittest_L37_C1()\
    \ [0x427b1e]\\n??:? void tmpr0nid6g6.__modtest() [0x427c0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c1f]\\\
    n??:? __libc_start_main [0x4068f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ sum = c * (c + 1);\n        if (sum == n)\n            return true;\n      \
    \  if (sum < n)\n            a = c + 1;\n        else\n            b = c - 1;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj9xcg51n.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpj9xcg51n.__unittest_L37_C1()\
    \ [0x427b05]\\n??:? void tmpj9xcg51n.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x6db35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else if (n == 0)\n \
    \       return true;\n    else\n        return is_equal_to_sum_even(n - 2);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmiylzau8.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpmiylzau8.__unittest_L23_C1()\
    \ [0x427a62]\\n??:? void tmpmiylzau8.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd82a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx9nyflh_.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpx9nyflh_.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpx9nyflh_.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x833b4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnuyr0gfs.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpnuyr0gfs.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpnuyr0gfs.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5aea6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c % 2 == 0 && d % 2 == 0)\n            return true;\n\
    \        if (c % 2 != 0)\n            a = c + 1;\n        else\n            b\
    \ = c - 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3g8fwquz.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmp3g8fwquz.__unittest_L37_C1()\
    \ [0x427b1e]\\n??:? void tmp3g8fwquz.__modtest() [0x427c0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c1f]\\\
    n??:? __libc_start_main [0x55f31554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long[] arr = new long[n\
    \ / 2 + 1];\n    for (int i = 0; i < arr.length; i++)\n        arr[i] = 2 * i;\n\
    \    return is_equal_to_sum_even(n, arr);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_fjaredq.d(25): Error: function `tmp_fjaredq.is_equal_to_sum_even(long\
    \ n)` is not callable using argument types `(long, long[])`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_fjaredq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    long a = 2;\n   \
    \ long b = n - 2;\n    while (a <= b)\n    {\n        if (a == b)\n          \
    \  return true;\n        a += 2;\n        b -= 2;\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppokwy2nk.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e25]\\n??:? void tmppokwy2nk.__unittest_L33_C1()\
    \ [0x427ab6]\\n??:? void tmppokwy2nk.__modtest() [0x427ba4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb4b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9de]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb71]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9b5]\\n??:? runModuleUnitTests [0x42b921]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428274]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281fb]\\n??:? _d_run_main [0x428166]\\n??:? main [0x427bb7]\\\
    n??:? __libc_start_main [0x2b8d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl36_8ook.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpl36_8ook.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpl36_8ook.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb6aff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxersdu_n.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxersdu_n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgrtru2s0.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpgrtru2s0.__unittest_L36_C1()\
    \ [0x427aae]\\n??:? void tmpgrtru2s0.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb3c46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    if (n == 2)\n    \
    \    return false;\n    if (n == 4)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 4);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpshrw71il.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpshrw71il.__unittest_L28_C1()\
    \ [0x427a86]\\n??:? void tmpshrw71il.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0x33616554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    if (n == 2)\n    \
    \    return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxt2_sdm7.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpxt2_sdm7.__unittest_L26_C1()\
    \ [0x427aba]\\n??:? void tmpxt2_sdm7.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3a76e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    auto is_even = (long x) { return x % 2 == 0; };\n    auto is_odd\
    \ = (long x) { return x % 2 != 0; };\n    auto is_positive = (long x) { return\
    \ x > 0; };\n    auto is_negative = (long x) { return x < 0; };\n    auto is_zero\
    \ = (long x) { return x == 0; };\n    auto is_non_zero = (long x) { return x !=\
    \ 0; };\n    auto is_divisible_by_2 = (long x) { return x % 2 == 0; };\n    auto\
    \ is_divisible_by_3 = (long x) { return x % 3 == 0; };\n    auto is_divisible_by_4\
    \ = (long x) { return x % 4 == 0; };\n    auto is_divisible_by_5 = (long x) {\
    \ return x % 5 == 0; };\n    auto is_divisible_by_6 = (long x) { return x % 6\
    \ == 0; };\n    auto is_divisible_by_7 = (long x) { return x % 7 == 0; };\n  \
    \  auto is_divisible_by_8 = (long x) { return x % 8 == 0; };\n    auto is_divisible_by_9\
    \ = (long x) { return x % 9 == 0; };\n    auto is_divisible_by_10 = (long x) {\
    \ return x % 10 == 0; };\n    auto is_divisible_by_11 = (long x) { return x %\
    \ 11 == 0; };\n    auto is_divisible_by_12 = (long x) { return x % 12 == 0; };\n\
    \    auto is_divisible_by_13 = (long x) { return x % 13 == 0; };\n    auto is_divisible_by_14\
    \ = (long x) { return x % 14 == 0; };\n    auto is_divisible_by_15 = (long x)\
    \ { return x % 15 == 0; };\n    auto is_divisible_by_16 = (long x) { return x\
    \ % 16 == 0; };\n    auto is_divisible_by_17 = (long x) { return x % 17\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv4elidjg.d(38): Error: found `unittest` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpv4elidjg.d(51): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpv4elidjg.d(51): Error:\
    \ semicolon expected following auto declaration, not `End of File`\\n/tmp/tmpv4elidjg.d(51):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4elidjg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgxkuqhsk.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpgxkuqhsk.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpgxkuqhsk.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9124e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvj7uecot.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpvj7uecot.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpvj7uecot.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xa993e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6qa8m9wo.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6qa8m9wo.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmp6qa8m9wo.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x991f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n%2 != 0) return false;\n    long a = n/2;\n    long b = n/2;\n\
    \    long c = n/2;\n    long d = n/2;\n    long sum = a+b+c+d;\n    if (sum ==\
    \ n) return true;\n    else return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpstjt17xq.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpstjt17xq.__unittest_L25_C1()\
    \ [0x427ace]\\n??:? void tmpstjt17xq.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0xf0c6f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu224v02z.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpu224v02z.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmpu224v02z.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xaeb2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else if (n == 0)\n \
    \       return true;\n    else\n        return is_equal_to_sum_even(n - 2);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4196exgd.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp4196exgd.__unittest_L23_C1()\
    \ [0x427a62]\\n??:? void tmp4196exgd.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x862bd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n <= 8)\n        return\
    \ false;\n    if(n == 8)\n        return true;\n    long a = 2;\n    long b =\
    \ 2;\n    long c = 2;\n    long d = 2;\n    long sum = a + b + c + d;\n    while(sum\
    \ != n)\n    {\n        if(sum > n)\n        {\n            if(a == 2)\n     \
    \       {\n                a = 4;\n                sum = a + b + c + d;\n    \
    \        }\n            else if(b == 2)\n            {\n                b = 4;\n\
    \                sum = a + b + c + d;\n            }\n            else if(c ==\
    \ 2)\n            {\n                c = 4;\n                sum = a + b + c +\
    \ d;\n            }\n            else if(d == 2)\n            {\n            \
    \    d = 4;\n                sum = a + b + c + d;\n            }\n           \
    \ else\n            {\n                return false;\n            }\n        }\n\
    \        else\n        {\n            if(a == 2)\n            {\n            \
    \    a = 4;\n                sum = a + b + c + d;\n            }\n           \
    \ else if(b == 2)\n            {\n                b = 4;\n                sum\
    \ = a + b + c + d;\n            }\n            else if(c == 2)\n            {\n\
    \                c = 4;\n                sum = a + b + c + d;\n            }\n\
    \            else if(d == 2)\n            {\n                d = 4;\n        \
    \        sum = a + b + c + d;\n            }\n            else\n            {\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2sxwj1k6.d(92): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f75]\\n??:? void tmp2sxwj1k6.__unittest_L86_C1()\
    \ [0x427c4a]\\n??:? void tmp2sxwj1k6.__modtest() [0x427cf8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430170]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab05]\\n??:? runModuleUnitTests [0x42ba71]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42834b]\\n??:? _d_run_main [0x4282b6]\\n??:? main [0x427d0b]\\\
    n??:? __libc_start_main [0xe0866554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    if (n == 2) \n        return false;\n    if (n == 4) \n\
    \        return true;\n    if (n == 6) \n        return false;\n    if (n == 8)\
    \ \n        return true;\n    if (n == 10) \n        return false;\n    if (n\
    \ == 12) \n        return true;\n    if (n == 14) \n        return false;\n  \
    \  if (n == 16) \n        return true;\n    if (n == 18) \n        return false;\n\
    \    if (n == 20) \n        return true;\n    if (n == 22) \n        return false;\n\
    \    if (n == 24) \n        return true;\n    if (n == 26) \n        return false;\n\
    \    if (n == 28) \n        return true;\n    if (n == 30) \n        return false;\n\
    \    if (n == 32) \n        return true;\n    if (n == 34) \n        return false;\n\
    \    if (n == 36) \n        return true;\n    if (n == 38) \n        return false;\n\
    \    if (n == 40) \n        return true;\n    if (n == 42) \n        return false;\n\
    \    if (n == 44) \n        return true;\n    if (n == 46) \n        return false;\n\
    \    if (n == 48) \n        return true;\n    if (n == 50) \n        return false;\n\
    \    if (n == 52) \n        return true;\n    if (n == 54) \n        return false;\n\
    \    if (n == 56) \n        return true;\n    if (n == 58) \n        return false;\n\
    \    if (n == 60) \n        return true;\n    if (n == 62) \n        return false;\n\
    \    if (n == 64) \n        return true;\n    if (n == 66) \n        return false;\n\
    \    if (n == 68) \n        return true;\n    if (\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyv3dsybp.d(89): Error: expression expected, not `unittest`\\\
    n/tmp/tmpyv3dsybp.d(90): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyv3dsybp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppf1f0e72.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmppf1f0e72.__unittest_L36_C1()\
    \ [0x427aae]\\n??:? void tmppf1f0e72.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x9b1c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 4) return false;\n    if (n % 2 != 0) return false;\n  \
    \  long m = n / 2;\n    for (long i = 1; i <= m; i++)\n    {\n        long j =\
    \ m - i;\n        if (i % 2 == 0 && j % 2 == 0) return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyp4muno0.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e25]\\n??:? void tmpyp4muno0.__unittest_L26_C1()\
    \ [0x427aba]\\n??:? void tmpyp4muno0.__modtest() [0x427ba8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb4b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9de]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb71]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9b5]\\n??:? runModuleUnitTests [0x42b921]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428274]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281fb]\\n??:? _d_run_main [0x428166]\\n??:? main [0x427bbb]\\\
    n??:? __libc_start_main [0xaf4ef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvv07e4t4.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpvv07e4t4.__unittest_L22_C1()\
    \ [0x427a7a]\\n??:? void tmpvv07e4t4.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x59865554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 8)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 8);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvt6ny7tv.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpvt6ny7tv.__unittest_L24_C1()\
    \ [0x427acd]\\n??:? void tmpvt6ny7tv.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5143a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    if (n == 0) \n    \
    \    return true;\n    if (n < 0) \n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaen03umy.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpaen03umy.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpaen03umy.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x38045554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi181u2i0.d(63): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi181u2i0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    if (sum\
    \ == n) return true;\n    else return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpadgkntza.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmpadgkntza.__unittest_L27_C1()\
    \ [0x427aee]\\n??:? void tmpadgkntza.__modtest() [0x427b9c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427baf]\\\
    n??:? __libc_start_main [0xbb1fa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp78ihw60o.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp78ihw60o.__unittest_L36_C1()\
    \ [0x427a6e]\\n??:? void tmp78ihw60o.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5c3de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long n_sqrt = cast(long)sqrt(n);\n    for (long i = 2; i <= n_sqrt;\
    \ i += 2) \n    {\n        long j = n - i;\n        if (j % 2 == 0) \n       \
    \ {\n            long k = j / 2;\n            long l = k - 2;\n            if\
    \ (l % 2 == 0) \n            {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7__1p_hx.d(16): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp7__1p_hx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwo76ff8l.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpwo76ff8l.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpwo76ff8l.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xd0696554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkiyhnxhp.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpkiyhnxhp.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpkiyhnxhp.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xa2e1b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    else\n    {\n       \
    \ long sum = 0;\n        for(long i = 2; i <= n; i += 2)\n        {\n        \
    \    sum += i;\n            if(sum == n)\n                return true;\n     \
    \   }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpksxc556e.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmpksxc556e.__unittest_L30_C1()\
    \ [0x427ab5]\\n??:? void tmpksxc556e.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0x4b306554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n != 0;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgcqpxiak.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpgcqpxiak.__unittest_L18_C1()\
    \ [0x427a4e]\\n??:? void tmpgcqpxiak.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0xa0331554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long a\
    \ = n / 2;\n        long b = n / 2;\n        long c = n / 2;\n        long d =\
    \ n / 2;\n        if (a + b + c + d == n)\n        {\n            result = true;\n\
    \        }\n    }\n    return result;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpge76eoj7.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpge76eoj7.__unittest_L41_C1()\
    \ [0x427ac6]\\n??:? void tmpge76eoj7.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0xf5912554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n <= 0)\n        return false;\n    if (n % 2 != 0)\n      \
    \  return false;\n    if (n == 2)\n        return false;\n    if (n == 4)\n  \
    \      return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy4qxhp31.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpy4qxhp31.__unittest_L26_C1()\
    \ [0x427a6a]\\n??:? void tmpy4qxhp31.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0x5fbfd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp3ld9tet.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpp3ld9tet.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpp3ld9tet.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x3be54554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0) return false;\n    if(n < 8) return false;\n    if(n\
    \ == 8) return true;\n    if(n % 4 == 0) return true;\n    return false;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx4qmxeb9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpx4qmxeb9.__unittest_L22_C1()\
    \ [0x427ad9]\\n??:? void tmpx4qmxeb9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xfd6ac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptb4b3_x3.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmptb4b3_x3.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmptb4b3_x3.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x948e6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    if (n == 2)\n    \
    \    return false;\n    if (n == 4)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 4);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl9ej2dxq.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpl9ej2dxq.__unittest_L28_C1()\
    \ [0x427a86]\\n??:? void tmpl9ej2dxq.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0xdd804554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n   \
    \ {\n        sum += 2 * i;\n        i++;\n    }\n    return sum == n;\n}\n/*\n\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n\
    \    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4bhdnnim.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp4bhdnnim.__unittest_L41_C1()\
    \ [0x427ab5]\\n??:? void tmp4bhdnnim.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xb298b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp60azxnh0.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp60azxnh0.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmp60azxnh0.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xfbb73554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp345__t3v.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp345__t3v.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmp345__t3v.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x9e426554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp87r95anq.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp87r95anq.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmp87r95anq.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x4e76d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else if (n == 0)\n \
    \       return true;\n    else\n        return is_equal_to_sum_even(n - 2);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwgqw42br.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpwgqw42br.__unittest_L23_C1()\
    \ [0x427a62]\\n??:? void tmpwgqw42br.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x44842554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n%2!=0)\n        return false;\n    if(n==0)\n        return\
    \ true;\n    if(n<0)\n        return false;\n    long a=0;\n    long b=0;\n  \
    \  long c=0;\n    long d=0;\n    long sum=0;\n    for(a=0;a<=n;a+=2)\n    {\n\
    \        for(b=0;b<=n;b+=2)\n        {\n            for(c=0;c<=n;c+=2)\n     \
    \       {\n                for(d=0;d<=n;d+=2)\n                {\n           \
    \         sum=a+b+c+d;\n                    if(sum==n)\n                     \
    \   return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphmgh325s.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e7d]\\n??:? void tmphmgh325s.__unittest_L44_C1()\
    \ [0x427b0e]\\n??:? void tmphmgh325s.__modtest() [0x427bfc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bba3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa0d]\\n??:? runModuleUnitTests [0x42b979]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428253]\\n??:? _d_run_main [0x4281be]\\n??:? main [0x427c0f]\\\
    n??:? __libc_start_main [0xfa6b2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    for (i = 2; i <= n; i += 2)\n\
    \    {\n        for (j = 2; j <= n; j += 2)\n        {\n            for (k = 2;\
    \ k <= n; k += 2)\n            {\n                for (l = 2; l <= n; l += 2)\n\
    \                {\n                    if (i + j + k + l == n)\n            \
    \            return true;\n                }\n            }\n        }\n    }\n\
    \    return false;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    if(n < 0)\n        return false;\n    if(n == 2)\n        return\
    \ false;\n    long sum = 0;\n    long i = 0;\n    while(sum < n)\n    {\n    \
    \    sum += 2 * i;\n        i++;\n    }\n    if(sum == n)\n        return true;\n\
    \    return false;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzx_96d1e.d(52): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e2d]\\n??:? void tmpzx_96d1e.__unittest_L47_C1()\
    \ [0x427add]\\n??:? void tmpzx_96d1e.__modtest() [0x427bac]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb53]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb79]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9bd]\\n??:? runModuleUnitTests [0x42b929]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42827c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428203]\\n??:? _d_run_main [0x42816e]\\n??:? main [0x427bbf]\\\
    n??:? __libc_start_main [0xee909554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm7c1mj5r.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpm7c1mj5r.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmpm7c1mj5r.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe3d4e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\n/*\nEvaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwf25339k.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpwf25339k.__unittest_L35_C1()\
    \ [0x427a62]\\n??:? void tmpwf25339k.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x33932554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long a = n / 2;\n        long b = 0;\n        long c = 0;\n        long d =\
    \ 0;\n        for (long i = 0; i <= a; i++)\n        {\n            for (long\
    \ j = 0; j <= a; j++)\n            {\n                for (long k = 0; k <= a;\
    \ k++)\n                {\n                    for (long l = 0; l <= a; l++)\n\
    \                    {\n                        if (i + j + k + l == a)\n    \
    \                    {\n                            b = i;\n                 \
    \           c = j;\n                            d = k;\n                     \
    \       return true;\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpue8_3goi.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e5d]\\n??:? void tmpue8_3goi.__unittest_L46_C1()\
    \ [0x427af2]\\n??:? void tmpue8_3goi.__modtest() [0x427be0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb83]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa16]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ed]\\n??:? runModuleUnitTests [0x42b959]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ac]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428233]\\n??:? _d_run_main [0x42819e]\\n??:? main [0x427bf3]\\\
    n??:? __libc_start_main [0xe8f8a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_lgz0o84.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp_lgz0o84.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmp_lgz0o84.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x811de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8deuv07v.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp8deuv07v.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmp8deuv07v.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x7b1bf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n >= 4;\n}\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    true\n    >>> is_equal_to_sum_odd(8L)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0_lq51p9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmp0_lq51p9.__unittest_L28_C1()\
    \ [0x427a4e]\\n??:? void tmp0_lq51p9.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0x2e76e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n > 3;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppj8kedq5.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmppj8kedq5.__unittest_L18_C1()\
    \ [0x427a4e]\\n??:? void tmppj8kedq5.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0x9d7ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv3bruxnh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpv3bruxnh.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpv3bruxnh.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x3b7f1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) \n        return false;\n    else if (n == 0) \n\
    \        return true;\n    else \n        return is_equal_to_sum_even(n - 2);\n\
    }\n/*\nEvaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    true\n\
    \    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpby9hcicy.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpby9hcicy.__unittest_L33_C1()\
    \ [0x427a62]\\n??:? void tmpby9hcicy.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x30df3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long n1 = n / 2;\n\
    \    long n2 = n1 / 2;\n    long n3 = n2 / 2;\n    long n4 = n3 / 2;\n    if (n4\
    \ == 0)\n        return false;\n    return n == n1 + n2 + n3 + n4;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8olly8ps.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e2d]\\n??:? void tmp8olly8ps.__unittest_L30_C1()\
    \ [0x427b02]\\n??:? void tmp8olly8ps.__modtest() [0x427bb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb53]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb79]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9bd]\\n??:? runModuleUnitTests [0x42b929]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42827c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428203]\\n??:? _d_run_main [0x42816e]\\n??:? main [0x427bc3]\\\
    n??:? __libc_start_main [0x64d13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    for (i = 0; i <= n; i += 2)\n\
    \    {\n        for (j = 0; j <= n; j += 2)\n        {\n            for (k = 0;\
    \ k <= n; k += 2)\n            {\n                for (l = 0; l <= n; l += 2)\n\
    \                {\n                    if (i + j + k + l == n)\n            \
    \            return true;\n                }\n            }\n        }\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprpbhdj28.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e7d]\\n??:? void tmprpbhdj28.__unittest_L42_C1()\
    \ [0x427b0e]\\n??:? void tmprpbhdj28.__modtest() [0x427bfc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bba3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa0d]\\n??:? runModuleUnitTests [0x42b979]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428253]\\n??:? _d_run_main [0x4281be]\\n??:? main [0x427c0f]\\\
    n??:? __libc_start_main [0x82b9c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    long a = n / 2;\n\
    \    long b = n / 2;\n    long c = n / 2;\n    long d = n / 2;\n    long sum =\
    \ a + b + c + d;\n    while (sum != n)\n    {\n        if (a == 0)\n         \
    \   return false;\n        if (sum > n)\n        {\n            a--;\n       \
    \     sum--;\n        }\n        else\n        {\n            a++;\n         \
    \   sum++;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8a_l6kzb.d(50): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e4d]\\n??:? void tmp8a_l6kzb.__unittest_L44_C1()\
    \ [0x427b1e]\\n??:? void tmp8a_l6kzb.__modtest() [0x427bcc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb73]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa06]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb99]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9dd]\\n??:? runModuleUnitTests [0x42b949]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42829c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428223]\\n??:? _d_run_main [0x42818e]\\n??:? main [0x427bdf]\\\
    n??:? __libc_start_main [0x7bb18554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n   \
    \ {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1kmysdfe.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp1kmysdfe.__unittest_L29_C1()\
    \ [0x427ab5]\\n??:? void tmp1kmysdfe.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xba705554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        i += 2;\n        sum += i;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpptby73sc.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpptby73sc.__unittest_L31_C1()\
    \ [0x427ac1]\\n??:? void tmpptby73sc.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0xd880c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0, b = 0,\
    \ c = 0, d = 0;\n    for (a = 0; a <= n; a += 2)\n    {\n        for (b = 0; b\
    \ <= n; b += 2)\n        {\n            for (c = 0; c <= n; c += 2)\n        \
    \    {\n                for (d = 0; d <= n; d += 2)\n                {\n     \
    \               if (a + b + c + d == n)\n                        return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphn0won3_.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e7d]\\n??:? void tmphn0won3_.__unittest_L39_C1()\
    \ [0x427b0e]\\n??:? void tmphn0won3_.__modtest() [0x427bfc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bba3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa0d]\\n??:? runModuleUnitTests [0x42b979]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428253]\\n??:? _d_run_main [0x4281be]\\n??:? main [0x427c0f]\\\
    n??:? __libc_start_main [0x49ed3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeo64jalu.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpeo64jalu.__unittest_L22_C1()\
    \ [0x427a7a]\\n??:? void tmpeo64jalu.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xeb26e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c + d == n && c % 2 == 0 && d % 2 == 0)\n          \
    \  return true;\n        if (c + d > n)\n            b = c - 2;\n        else\n\
    \            a = c + 2;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ri0_2pv.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmp3ri0_2pv.__unittest_L37_C1()\
    \ [0x427b26]\\n??:? void tmp3ri0_2pv.__modtest() [0x427c14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c27]\\\
    n??:? __libc_start_main [0x36b3c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long sum = 0;\n    for (a = 2; a <= n; a += 2)\n\
    \    {\n        for (b = 2; b <= n; b += 2)\n        {\n            for (c = 2;\
    \ c <= n; c += 2)\n            {\n                for (d = 2; d <= n; d += 2)\n\
    \                {\n                    sum = a + b + c + d;\n               \
    \     if (sum == n)\n                    {\n                        result = true;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq7x2b2nx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpq7x2b2nx.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpq7x2b2nx.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xde1be554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphvajmjqr.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphvajmjqr.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmphvajmjqr.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3b45554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqruy3h8_.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpqruy3h8_.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpqruy3h8_.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x7f0c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw3ncy7lu.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpw3ncy7lu.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpw3ncy7lu.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2faf8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    for (int i = 0; i < n; i++)\n    {\n \
    \       for (int j = 0; j < n; j++)\n        {\n            for (int k = 0; k\
    \ < n; k++)\n            {\n                for (int l = 0; l < n; l++)\n    \
    \            {\n                    if (i + j + k + l == n && i % 2 == 0 && j\
    \ % 2 == 0 && k % 2 == 0 && l % 2 == 0)\n                    {\n             \
    \           result = true;\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4_0hy33l.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e7d]\\n??:? void tmp4_0hy33l.__unittest_L35_C1()\
    \ [0x427b0e]\\n??:? void tmp4_0hy33l.__modtest() [0x427bfc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bba3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa0d]\\n??:? runModuleUnitTests [0x42b979]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428253]\\n??:? _d_run_main [0x4281be]\\n??:? main [0x427c0f]\\\
    n??:? __libc_start_main [0xf3d3f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n % 2 != 0)\n        return false;\n \
    \   if(n == 0)\n        return true;\n    if(n == 2)\n        return false;\n\
    \    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkplnbfsy.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpkplnbfsy.__unittest_L25_C1()\
    \ [0x427aae]\\n??:? void tmpkplnbfsy.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x3cd29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphjh0p_me.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmphjh0p_me.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmphjh0p_me.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x4cf4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpam0_npw0.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpam0_npw0.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpam0_npw0.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x32128554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n < 8) return false;\n  \
    \  if (n == 8) return true;\n    return is_equal_to_sum_even(n - 8);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1nvmybiv.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp1nvmybiv.__unittest_L21_C1()\
    \ [0x427ac1]\\n??:? void tmp1nvmybiv.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x68da7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpab7vnm_s.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpab7vnm_s.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpab7vnm_s.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0xa2eb4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n < 0) return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    if (sum\
    \ == n) return true;\n    long diff = n - sum;\n    if (diff == 0) return true;\n\
    \    if (diff % 2 != 0) return false;\n    if (diff < 0) return false;\n    long\
    \ e = diff / 2;\n    long f = diff / 2;\n    long g = diff / 2;\n    long h =\
    \ diff / 2;\n    long sum2 = e + f + g + h;\n    if (sum2 == diff) return true;\n\
    \    return false;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4L)\n\
    \    false\n    >>> is_equal_to_sum_even(6L)\n    false\n    >>> is_equal_to_sum_even(8L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqphjr929.d(54): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e9d]\\n??:? void tmpqphjr929.__unittest_L48_C1()\
    \ [0x427b72]\\n??:? void tmpqphjr929.__modtest() [0x427c20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbc3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa56]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa2d]\\n??:? runModuleUnitTests [0x42b999]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428273]\\n??:? _d_run_main [0x4281de]\\n??:? main [0x427c33]\\\
    n??:? __libc_start_main [0xf3bd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp63btv7zg.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp63btv7zg.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmp63btv7zg.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x76bc0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long a = n / 2;\n        long b = 0;\n        long c = 0;\n        long d =\
    \ 0;\n        for (long i = 0; i <= a; i++)\n        {\n            b = a - i;\n\
    \            for (long j = 0; j <= b; j++)\n            {\n                c =\
    \ b - j;\n                for (long k = 0; k <= c; k++)\n                {\n \
    \                   d = c - k;\n                    if (i + j + k + d == a)\n\
    \                        return true;\n                }\n            }\n    \
    \    }\n        return false;\n    }\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdhp7dskq.d(57): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e65]\\n??:? void tmpdhp7dskq.__unittest_L53_C1()\
    \ [0x427af6]\\n??:? void tmpdhp7dskq.__modtest() [0x427be4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa1e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9f5]\\n??:? runModuleUnitTests [0x42b961]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42823b]\\n??:? _d_run_main [0x4281a6]\\n??:? main [0x427bf7]\\\
    n??:? __libc_start_main [0xb2423554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ga_lwie.d(63): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ga_lwie.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 2)\n      \
    \  return false;\n    if (n == 4)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    true\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphqplwagd.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmphqplwagd.__unittest_L34_C1()\
    \ [0x427a62]\\n??:? void tmphqplwagd.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x9eb52554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu9imk1_y.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu9imk1_y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcqnvybou.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpcqnvybou.__unittest_L31_C1()\
    \ [0x427ac5]\\n??:? void tmpcqnvybou.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xe0fe9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    if (n == 2)\n    \
    \    return false;\n    if (n == 4)\n        return true;\n    if (n == 6)\n \
    \       return false;\n    if (n == 8)\n        return true;\n    if (n == 10)\n\
    \        return false;\n    if (n == 12)\n        return true;\n    if (n == 14)\n\
    \        return false;\n    if (n == 16)\n        return true;\n    if (n == 18)\n\
    \        return false;\n    if (n == 20)\n        return true;\n    if (n == 22)\n\
    \        return false;\n    if (n == 24)\n        return true;\n    if (n == 26)\n\
    \        return false;\n    if (n == 28)\n        return true;\n    if (n == 30)\n\
    \        return false;\n    if (n == 32)\n        return true;\n    if (n == 34)\n\
    \        return false;\n    if (n == 36)\n        return true;\n    if (n == 38)\n\
    \        return false;\n    if (n == 40)\n        return true;\n    if (n == 42)\n\
    \        return false;\n    if (n == 44)\n        return true;\n    if (n == 46)\n\
    \        return false;\n    if (n == 48)\n        return true;\n    if (n == 50)\n\
    \        return false;\n    if (n == 52)\n        return true;\n    if (n == 54)\n\
    \        return false;\n    if (n == 56)\n        return true;\n    if (n == 58)\n\
    \        return false;\n    if (n == 60)\n        return true;\n    if (n == 62)\n\
    \        return false;\n    if (n == 64)\n        return true;\n    if (n == 66)\n\
    \        return false;\n    if (n == 68)\n        return true;\n    if (n == 70)\n\
    \        return false;\n    if (n == 72)\n        return true;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_hyz5x3_.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_hyz5x3_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx_1hffj8.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpx_1hffj8.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpx_1hffj8.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x91c84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long sum = 0;\n        long i = 0;\n        while (sum < n)\n        {\n  \
    \          sum += 2 * i;\n            i++;\n        }\n        return sum == n;\n\
    \    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjs801oby.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmpjs801oby.__unittest_L30_C1()\
    \ [0x427aa5]\\n??:? void tmpjs801oby.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0x492d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ sum = c * (c + 1);\n        if (sum == n)\n            return true;\n      \
    \  if (sum < n)\n            a = c + 1;\n        else\n            b = c - 1;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2zzr7ckm.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmp2zzr7ckm.__unittest_L37_C1()\
    \ [0x427b05]\\n??:? void tmp2zzr7ckm.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0x5b6a8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx3kx6epq.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpx3kx6epq.__unittest_L19_C1()\
    \ [0x427a6a]\\n??:? void tmpx3kx6epq.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x1fa89554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphnokvr42.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmphnokvr42.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmphnokvr42.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x874bc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp58vbfjya.d(63): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp58vbfjya.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcmcjngam.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpcmcjngam.__unittest_L22_C1()\
    \ [0x427a7a]\\n??:? void tmpcmcjngam.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc12d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3hubqre7.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp3hubqre7.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmp3hubqre7.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5eec4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    else\n    {\n      \
    \  long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n\
    \        for (a = 2; a < n; a += 2)\n        {\n            for (b = 2; b < n;\
    \ b += 2)\n            {\n                for (c = 2; c < n; c += 2)\n       \
    \         {\n                    for (d = 2; d < n; d += 2)\n                \
    \    {\n                        if (a + b + c + d == n)\n                    \
    \        return true;\n                    }\n                }\n            }\n\
    \        }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n <= 8)\n      \
    \  return false;\n    if (n == 8)\n        return true;\n    return is_equal_to_sum_even(n\
    \ - 8);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n    >>> is_equal_to_sum_odd(11L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyf7ti98z.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpyf7ti98z.__unittest_L38_C1()\
    \ [0x427aa2]\\n??:? void tmpyf7ti98z.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x892df554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptb7argnk.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmptb7argnk.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmptb7argnk.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xdafda554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsa_vt_nw.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpsa_vt_nw.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmpsa_vt_nw.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x89056554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwtn80jey.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpwtn80jey.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmpwtn80jey.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb1f44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c % 2 == 0 && d % 2 == 0)\n            return true;\n\
    \        if (c % 2 != 0)\n            a = c + 1;\n        else\n            b\
    \ = c - 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp731djs8d.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmp731djs8d.__unittest_L37_C1()\
    \ [0x427b1e]\\n??:? void tmp731djs8d.__modtest() [0x427c0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c1f]\\\
    n??:? __libc_start_main [0x735c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyc_ev66r.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpyc_ev66r.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmpyc_ev66r.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x1e75c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n > 3;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    true\n    >>> is_equal_to_sum_odd(8L)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw1jovpxt.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpw1jovpxt.__unittest_L28_C1()\
    \ [0x427a4e]\\n??:? void tmpw1jovpxt.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0x5f208554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l\
    \ = 0;\n    for (i = 2; i <= n; i += 2)\n    {\n        for (j = 2; j <= n; j\
    \ += 2)\n        {\n            for (k = 2; k <= n; k += 2)\n            {\n \
    \               for (l = 2; l <= n; l += 2)\n                {\n             \
    \       if (i + j + k + l == n)\n                        return true;\n      \
    \          }\n            }\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6ncbgkvf.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp6ncbgkvf.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmp6ncbgkvf.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x35e4e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n % 4 == 0)\n  \
    \      return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7qozdwmf.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmp7qozdwmf.__unittest_L22_C1()\
    \ [0x427a66]\\n??:? void tmp7qozdwmf.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0x17293554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvh0ppagq.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpvh0ppagq.__unittest_L19_C1()\
    \ [0x427a6a]\\n??:? void tmpvh0ppagq.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x67d21554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0i6_cshu.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp0i6_cshu.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmp0i6_cshu.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x324a7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    long sum = 0;\n    for\
    \ (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        if (sum == n)\n\
    \            return true;\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7buqgsqx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp7buqgsqx.__unittest_L27_C1()\
    \ [0x427ab5]\\n??:? void tmp7buqgsqx.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0x4c9f1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpivt0awhk.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpivt0awhk.__unittest_L26_C1()\
    \ [0x427a7a]\\n??:? void tmpivt0awhk.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7edbd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe1p_cwml.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpe1p_cwml.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpe1p_cwml.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x3b738554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 != 0)\n        return result;\n\
    \    long sum = 0;\n    long i = 0;\n    while (sum < n)\n    {\n        i +=\
    \ 2;\n        sum += i;\n    }\n    if (sum == n)\n        result = true;\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnzax6onq.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpnzax6onq.__unittest_L30_C1()\
    \ [0x427ab1]\\n??:? void tmpnzax6onq.__modtest() [0x427b80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b93]\\\
    n??:? __libc_start_main [0xf4a77554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  int count = 0;\n        for (int i = 2; i <= n; i += 2)\n        {\n      \
    \      for (int j = 2; j <= n; j += 2)\n            {\n                for (int\
    \ k = 2; k <= n; k += 2)\n                {\n                    for (int l =\
    \ 2; l <= n; l += 2)\n                    {\n                        if (i + j\
    \ + k + l == n)\n                            count++;\n                    }\n\
    \                }\n            }\n        }\n        if (count == 1)\n      \
    \      return true;\n        else\n            return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdi14_l7h.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e4d]\\n??:? void tmpdi14_l7h.__unittest_L41_C1()\
    \ [0x427b41]\\n??:? void tmpdi14_l7h.__modtest() [0x427bd0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb73]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa06]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb99]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9dd]\\n??:? runModuleUnitTests [0x42b949]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42829c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428223]\\n??:? _d_run_main [0x42818e]\\n??:? main [0x427be3]\\\
    n??:? __libc_start_main [0xbdd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if (n % 2 != 0) return false;\n    if (n\
    \ == 0) return true;\n    if (n == 2) return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8omw8yg6.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp8omw8yg6.__unittest_L22_C1()\
    \ [0x427aae]\\n??:? void tmp8omw8yg6.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xda0e5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        i += 2;\n        sum += i;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdhe75odm.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpdhe75odm.__unittest_L31_C1()\
    \ [0x427ac1]\\n??:? void tmpdhe75odm.__modtest() [0x427b90]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427ba3]\\\
    n??:? __libc_start_main [0x7d2f9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n%2!=0)\n    {\n        return false;\n\
    \    }\n    else\n    {\n        int count=0;\n        for(int i=2;i<=n;i+=2)\n\
    \        {\n            for(int j=2;j<=n;j+=2)\n            {\n              \
    \  for(int k=2;k<=n;k+=2)\n                {\n                    for(int l=2;l<=n;l+=2)\n\
    \                    {\n                        if(i+j+k+l==n)\n             \
    \           {\n                            count++;\n                        }\n\
    \                    }\n                }\n            }\n        }\n        if(count==1)\n\
    \        {\n            return true;\n        }\n        else\n        {\n   \
    \         return false;\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplpg7yt5a.d(57): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e4d]\\n??:? void tmplpg7yt5a.__unittest_L50_C1()\
    \ [0x427b41]\\n??:? void tmplpg7yt5a.__modtest() [0x427bd0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb73]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa06]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb99]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9dd]\\n??:? runModuleUnitTests [0x42b949]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42829c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428223]\\n??:? _d_run_main [0x42818e]\\n??:? main [0x427be3]\\\
    n??:? __libc_start_main [0xc5898554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long sum\
    \ = 0;\n        long i = 1;\n        while (sum < n)\n        {\n            sum\
    \ += 2 * i;\n            i++;\n        }\n        if (sum == n)\n        {\n \
    \           result = true;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpchghc4y3.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpchghc4y3.__unittest_L33_C1()\
    \ [0x427aad]\\n??:? void tmpchghc4y3.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0x2ed55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8) return false;\n    if (n % 2 != 0) return false;\n  \
    \  long max = n / 4;\n    for (long i = 2; i <= max; i += 2) \n    {\n       \
    \ for (long j = i; j <= max; j += 2) \n        {\n            for (long k = j;\
    \ k <= max; k += 2) \n            {\n                for (long l = k; l <= max;\
    \ l += 2) \n                {\n                    if (i + j + k + l == n) return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\n/*\nEvaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4L)\n   \
    \ false\n    >>> is_equal_to_sum_even(6L)\n    false\n    >>> is_equal_to_sum_even(8L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjwghs0x1.d(52): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e75]\\n??:? void tmpjwghs0x1.__unittest_L45_C1()\
    \ [0x427b65]\\n??:? void tmpjwghs0x1.__modtest() [0x427bf4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa05]\\n??:? runModuleUnitTests [0x42b971]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42824b]\\n??:? _d_run_main [0x4281b6]\\n??:? main [0x427c07]\\\
    n??:? __libc_start_main [0xa8adf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdivk1axf.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpdivk1axf.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpdivk1axf.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x80732554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ao2j9fh.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6ao2j9fh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    auto n_sqrt = cast(long)sqrt(n);\n\
    \    for (long i = 2; i <= n_sqrt; i += 2)\n    {\n        auto j = n - i;\n \
    \       if (j % 2 == 0)\n            return true;\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpavb0id82.d(18): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpavb0id82.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 == 1)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long m = n / 2;\n\
    \    long k = (long)sqrt(m);\n    for (long i = 2; i <= k; i += 2)\n    {\n  \
    \      if (is_equal_to_sum_even(m - i))\n            return true;\n    }\n   \
    \ return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpya6fqen0.d(23): Error: C style cast illegal, use `cast(long)sqrt(m)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpya6fqen0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n\
    \    long d = n / 2;\n    long sum = a + b + c + d;\n    if (sum == n)\n     \
    \   return true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd936ia1r.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e0d]\\n??:? void tmpd936ia1r.__unittest_L30_C1()\
    \ [0x427ade]\\n??:? void tmpd936ia1r.__modtest() [0x427b8c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb33]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9c6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb59]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a99d]\\n??:? runModuleUnitTests [0x42b909]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42825c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281e3]\\n??:? _d_run_main [0x42814e]\\n??:? main [0x427b9f]\\\
    n??:? __libc_start_main [0x44a2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long i = 0;\n    while (sum < n)\n    {\n        sum += 2 * i;\n        i++;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9oqt1lr3.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmp9oqt1lr3.__unittest_L31_C1()\
    \ [0x427ac5]\\n??:? void tmp9oqt1lr3.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xe30a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n\
    \    long d = n / 2;\n    while (a >= 0)\n    {\n        while (b >= 0)\n    \
    \    {\n            while (c >= 0)\n            {\n                while (d >=\
    \ 0)\n                {\n                    if (a + b + c + d == n)\n       \
    \                 return true;\n                    d--;\n                }\n\
    \                c--;\n                d = n / 2;\n            }\n           \
    \ b--;\n            c = n / 2;\n            d = n / 2;\n        }\n        a--;\n\
    \        b = n / 2;\n        c = n / 2;\n        d = n / 2;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp0gy08vv.d(54): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e95]\\n??:? void tmpp0gy08vv.__unittest_L50_C1()\
    \ [0x427b2a]\\n??:? void tmpp0gy08vv.__modtest() [0x427c18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbbb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa4e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbe1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa25]\\n??:? runModuleUnitTests [0x42b991]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42826b]\\n??:? _d_run_main [0x4281d6]\\n??:? main [0x427c2b]\\\
    n??:? __libc_start_main [0xc0e55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphzfnw038.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmphzfnw038.__unittest_L22_C1()\
    \ [0x427a62]\\n??:? void tmphzfnw038.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x1aa25554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8) \n        return false;\n    if (n % 2 != 0) \n     \
    \   return false;\n    long m = n / 2;\n    long a = m / 2;\n    long b = m -\
    \ a;\n    long c = b / 2;\n    long d = b - c;\n    return a % 2 == 0 && c % 2\
    \ == 0 && d % 2 == 0;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6cht0vl_.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmp6cht0vl_.__unittest_L39_C1()\
    \ [0x427b1a]\\n??:? void tmp6cht0vl_.__modtest() [0x427bc8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bdb]\\\
    n??:? __libc_start_main [0xa5b27554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8)\n        return false;\n    if (n % 2 != 0)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    long a = n / 4;\n\
    \    long b = n / 2;\n    long c = n / 4 * 3;\n    long d = n;\n    return a +\
    \ b + c + d == n;\n}\n/*\nEvaluate whether the given number n can be written as\
    \ the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_djfzc_x.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmp_djfzc_x.__unittest_L39_C1()\
    \ [0x427b11]\\n??:? void tmp_djfzc_x.__modtest() [0x427ba0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427bb3]\\\
    n??:? __libc_start_main [0x3ab9f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long n_sqrt = (long)sqrt(n);\n        for (long i = 2; i <= n_sqrt; i += 2)\n\
    \        {\n            if (n % i == 0)\n            {\n                long j\
    \ = n / i;\n                if (j % 2 == 0)\n                    return true;\n\
    \            }\n        }\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy7byv0r9.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy7byv0r9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long i, j, k, l;\n    bool result = false;\n    for (i = 0; i <=\
    \ n; i += 2)\n    {\n        for (j = 0; j <= n; j += 2)\n        {\n        \
    \    for (k = 0; k <= n; k += 2)\n            {\n                for (l = 0; l\
    \ <= n; l += 2)\n                {\n                    if (i + j + k + l == n)\n\
    \                    {\n                        result = true;\n             \
    \           break;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk3_28em4.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpk3_28em4.__unittest_L37_C1()\
    \ [0x427ad6]\\n??:? void tmpk3_28em4.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xa3dbc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0) return false;\n    if (n == 0) return true;\n  \
    \  if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6) return\
    \ false;\n    if (n == 8) return true;\n    if (n == 10) return false;\n    if\
    \ (n == 12) return true;\n    if (n == 14) return false;\n    if (n == 16) return\
    \ true;\n    if (n == 18) return false;\n    if (n == 20) return true;\n    if\
    \ (n == 22) return false;\n    if (n == 24) return true;\n    if (n == 26) return\
    \ false;\n    if (n == 28) return true;\n    if (n == 30) return false;\n    if\
    \ (n == 32) return true;\n    if (n == 34) return false;\n    if (n == 36) return\
    \ true;\n    if (n == 38) return false;\n    if (n == 40) return true;\n    if\
    \ (n == 42) return false;\n    if (n == 44) return true;\n    if (n == 46) return\
    \ false;\n    if (n == 48) return true;\n    if (n == 50) return false;\n    if\
    \ (n == 52) return true;\n    if (n == 54) return false;\n    if (n == 56) return\
    \ true;\n    if (n == 58) return false;\n    if (n == 60) return true;\n    if\
    \ (n == 62) return false;\n    if (n == 64) return true;\n    if (n == 66) return\
    \ false;\n    if (n == 68) return true;\n    if (n == 70) return false;\n    if\
    \ (n == 72) return true;\n    if (n == 74) return false;\n    if (n == 76) return\
    \ true;\n    if (n == 78) return false;\n    if (n == 80) return true;\n    if\
    \ (n == 82) return false;\n    if (n == 84) return true;\n    if (n == 86) return\
    \ false;\n    if (n == 88) return true;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7swcf8tv.d(63): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7swcf8tv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8) return false;\n    if (n % 2 != 0) return false;\n  \
    \  long a = n / 4;\n    long b = n / 2;\n    long c = n / 4 * 3;\n    long d =\
    \ n;\n    return a + b + c + d == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi66g78kx.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmpi66g78kx.__unittest_L24_C1()\
    \ [0x427ae6]\\n??:? void tmpi66g78kx.__modtest() [0x427b94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427ba7]\\\
    n??:? __libc_start_main [0xfacc5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    long a = 2;\n    long\
    \ b = 2;\n    long c = 2;\n    long d = n - 6;\n    if (d % 2 != 0)\n        return\
    \ false;\n    if (d < 2)\n        return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long x = n / 2;\n\
    \    long y = x;\n    long z = x;\n    long w = x;\n    while (x >= 0)\n    {\n\
    \        while (y >= 0)\n        {\n            while (z >= 0)\n            {\n\
    \                while (w >= 0)\n                {\n                    if (x\
    \ + y + z + w == n)\n                        return true;\n                  \
    \  w -= 2;\n                }\n                z -= 2;\n                w = z;\n\
    \            }\n            y -= 2;\n            z = y;\n            w = y;\n\
    \        }\n        x -= 2;\n        y = x;\n        z = x;\n        w = x;\n\
    \    }\n    return false;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwvvvatni.d(68): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e85]\\n??:? void tmpwvvvatni.__unittest_L64_C1()\
    \ [0x427b16]\\n??:? void tmpwvvvatni.__modtest() [0x427c04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa3e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa15]\\n??:? runModuleUnitTests [0x42b981]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42825b]\\n??:? _d_run_main [0x4281c6]\\n??:? main [0x427c17]\\\
    n??:? __libc_start_main [0x589a3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        long a\
    \ = n / 2;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n  \
    \      long e = 0;\n        long f = 0;\n        long g = 0;\n        long h =\
    \ 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long\
    \ l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n    \
    \    long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n\
    \        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long aa = 0;\n     \
    \   long ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae\
    \ = 0;\n        long af = 0;\n        long ag = 0;\n        long ah = 0;\n   \
    \     long ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al\
    \ = 0;\n        long am = 0;\n        long an = 0;\n        long ao = 0;\n   \
    \     long ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as\
    \ = 0;\n        long at = 0;\n        long au = 0;\n        long av = 0;\n   \
    \     long aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az\
    \ = 0;\n        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n   \
    \     long bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg\
    \ = 0;\n        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n   \
    \     long bk = 0;\n        long bl = 0;\n        long bm = 0;\n        long bn\
    \ = 0;\n        long bo = 0;\n        long bp = 0;\n        long\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmzigz15s.d(87): Error: no identifier for declarator `long`\\\
    n/tmp/tmpmzigz15s.d(87): Error: found `unittest` instead of statement\\n/tmp/tmpmzigz15s.d(100):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzigz15s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    if (n % 4 == 0)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7a7j7eal.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp7a7j7eal.__unittest_L26_C1()\
    \ [0x427ad9]\\n??:? void tmp7a7j7eal.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc8856554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    else\n    {\n    \
    \    long sum = 0;\n        long i = 0;\n        while (sum < n)\n        {\n\
    \            sum += 2 * i;\n            i++;\n        }\n        if (sum == n)\n\
    \            return true;\n        else\n            return false;\n    }\n}\n\
    /*\nEvaluate whether the given number n can be written as the sum of exactly 4\
    \ positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n\
    \    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkglzghxy.d(54): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmpkglzghxy.__unittest_L49_C1()\
    \ [0x427acd]\\n??:? void tmpkglzghxy.__modtest() [0x427b9c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427baf]\\\
    n??:? __libc_start_main [0x3ad6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    long sum = 0;\n    long i = 0;\n    while(sum < n)\n    {\n     \
    \   sum += 2 * i;\n        i++;\n    }\n    return sum == n;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3da4jvhy.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp3da4jvhy.__unittest_L29_C1()\
    \ [0x427ab5]\\n??:? void tmp3da4jvhy.__modtest() [0x427b84]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b97]\\\
    n??:? __libc_start_main [0xc46ff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2)\n    {\n   \
    \     sum += i;\n        if (sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpav2g3cu8.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpav2g3cu8.__unittest_L25_C1()\
    \ [0x427a89]\\n??:? void tmpav2g3cu8.__modtest() [0x427b58]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b6b]\\\
    n??:? __libc_start_main [0xac5f5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 8) return false;\n    if (n % 2 != 0) return false;\n  \
    \  if (n == 8) return true;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n\
    \    long d = n - 6;\n    while (d > 0)\n    {\n        if (d % 2 == 0)\n    \
    \    {\n            return true;\n        }\n        d -= 2;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  for (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        if (sum\
    \ == n)\n            return true;\n        if (sum > n)\n            return false;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzmojxhno.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e35]\\n??:? void tmpzmojxhno.__unittest_L33_C1()\
    \ [0x427ae5]\\n??:? void tmpzmojxhno.__modtest() [0x427bb4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb5b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb81]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430030]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb0d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9c5]\\n??:? runModuleUnitTests [0x42b931]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428284]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42820b]\\n??:? _d_run_main [0x428176]\\n??:? main [0x427bc7]\\\
    n??:? __libc_start_main [0x882a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long a = 0;\n    long\
    \ b = n;\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        long\
    \ d = n - c;\n        if (c % 2 == 0 && d % 2 == 0)\n            return true;\n\
    \        if (c % 2 != 0)\n            a = c + 1;\n        else\n            b\
    \ = c - 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4zp6ndhe.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmp4zp6ndhe.__unittest_L37_C1()\
    \ [0x427b1e]\\n??:? void tmp4zp6ndhe.__modtest() [0x427c0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c1f]\\\
    n??:? __libc_start_main [0x8644f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long count = 0;\n    long i = 2;\n    while (sum\
    \ < n)\n    {\n        if (i % 2 == 0)\n        {\n            sum += i;\n   \
    \         count++;\n        }\n        i++;\n    }\n    return sum == n && count\
    \ == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7o4m7dfx.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e05]\\n??:? void tmp7o4m7dfx.__unittest_L30_C1()\
    \ [0x427ada]\\n??:? void tmp7o4m7dfx.__modtest() [0x427b88]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb2b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb51]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a995]\\n??:? runModuleUnitTests [0x42b901]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428254]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281db]\\n??:? _d_run_main [0x428146]\\n??:? main [0x427b9b]\\\
    n??:? __libc_start_main [0x4709e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n < 4)\n        return false;\n    if (n % 2 != 0)\n       \
    \ return false;\n    if (n % 4 == 0)\n        return true;\n    return false;\n\
    }\n/*\nEvaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n\
    \    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxe9p88f8.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpxe9p88f8.__unittest_L36_C1()\
    \ [0x427a6e]\\n??:? void tmpxe9p88f8.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xef94d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    long sum = 0;\n    long\
    \ i = 0;\n    while(sum < n)\n    {\n        sum += 2 * i;\n        i++;\n   \
    \ }\n    return sum == n;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(5L)\n\
    \    false\n    >>> is_equal_to_sum_odd(7L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3xjg53jw.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427df5]\\n??:? void tmp3xjg53jw.__unittest_L37_C1()\
    \ [0x427aa5]\\n??:? void tmp3xjg53jw.__modtest() [0x427b74]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42facd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a985]\\n??:? runModuleUnitTests [0x42b8f1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428244]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281cb]\\n??:? _d_run_main [0x428136]\\n??:? main [0x427b87]\\\
    n??:? __libc_start_main [0x60bc2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpai2mv8jk.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpai2mv8jk.__unittest_L36_C1()\
    \ [0x427a6e]\\n??:? void tmpai2mv8jk.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xba9e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjhbtk2eh.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjhbtk2eh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n        return\
    \ true;\n    if(n < 0)\n        return false;\n    long sum = 0;\n    for(long\
    \ i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        if(sum == n)\n   \
    \         return true;\n    }\n    return false;\n}\n/*\nEvaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(5L)\n    false\n    >>> is_equal_to_sum_odd(7L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5j4zhcp4.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmp5j4zhcp4.__unittest_L41_C1()\
    \ [0x427ad1]\\n??:? void tmp5j4zhcp4.__modtest() [0x427ba0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427bb3]\\\
    n??:? __libc_start_main [0x1e6d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxctpk4vi.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpxctpk4vi.__unittest_L24_C1()\
    \ [0x427a6e]\\n??:? void tmpxctpk4vi.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x3a9a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfelah57r.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpfelah57r.__unittest_L24_C1()\
    \ [0x427aae]\\n??:? void tmpfelah57r.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xe5cc5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    return n % 2 == 0 && n >= 4;\n}\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(5L)\n\
    \    false\n    >>> is_equal_to_sum_odd(7L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn3wslcok.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpn3wslcok.__unittest_L28_C1()\
    \ [0x427a4e]\\n??:? void tmpn3wslcok.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0xb4679554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\n/*\nEvaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(5L)\n    false\n    >>> is_equal_to_sum_odd(7L)\n\
    \    false\n    >>> is_equal_to_sum_odd(9L)\n    true\n*/\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1as1gqoo.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmp1as1gqoo.__unittest_L32_C1()\
    \ [0x427a62]\\n??:? void tmp1as1gqoo.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x2e08b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    return is_equal_to_sum_even(n - 2);\n}\n/*\nEvaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz2ss95d0.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dcd]\\n??:? void tmpz2ss95d0.__unittest_L34_C1()\
    \ [0x427a62]\\n??:? void tmpz2ss95d0.__modtest() [0x427b50]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a986]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb19]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a95d]\\n??:? runModuleUnitTests [0x42b8c9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42821c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a3]\\n??:? _d_run_main [0x42810e]\\n??:? main [0x427b63]\\\
    n??:? __libc_start_main [0x1f0c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if(n % 2 != 0)\n        return false;\n    if(n < 8)\n        return\
    \ false;\n    if(n == 8)\n        return true;\n    long max_even = n / 4;\n \
    \   long min_even = 2;\n    long sum = 0;\n    for(long i = min_even; i <= max_even;\
    \ i+=2)\n    {\n        sum = i;\n        for(long j = i + 2; j <= max_even; j+=2)\n\
    \        {\n            sum += j;\n            if(sum == n)\n                return\
    \ true;\n            if(sum > n)\n                break;\n            for(long\
    \ k = j + 2; k <= max_even; k+=2)\n            {\n                sum += k;\n\
    \                if(sum == n)\n                    return true;\n            \
    \    if(sum > n)\n                    break;\n                for(long l = k +\
    \ 2; l <= max_even; l+=2)\n                {\n                    sum += l;\n\
    \                    if(sum == n)\n                        return true;\n    \
    \                if(sum > n)\n                        break;\n               \
    \     sum -= l;\n                }\n                sum -= k;\n            }\n\
    \            sum -= j;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmsmd3lk0.d(65): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f15]\\n??:? void tmpmsmd3lk0.__unittest_L58_C1()\
    \ [0x427c05]\\n??:? void tmpmsmd3lk0.__modtest() [0x427c94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aaa5]\\n??:? runModuleUnitTests [0x42ba11]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428364]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282eb]\\n??:? _d_run_main [0x428256]\\n??:? main [0x427ca7]\\\
    n??:? __libc_start_main [0x40627554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n  \
    \  long count = 0;\n    while (sum < n)\n    {\n        sum += 2;\n        count++;\n\
    \    }\n    if (sum == n)\n        return true;\n    return false;\n}\n/*\nEvaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive even\
    \ numbers\n    Example\n    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2ek2ko_y.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmp2ek2ko_y.__unittest_L44_C1()\
    \ [0x427aaa]\\n??:? void tmp2ek2ko_y.__modtest() [0x427b98]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427bab]\\\
    n??:? __libc_start_main [0x9ac4d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    long a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n\
    \    long d = n / 2;\n    while (a >= 0)\n    {\n        while (b >= 0)\n    \
    \    {\n            while (c >= 0)\n            {\n                while (d >=\
    \ 0)\n                {\n                    if (a + b + c + d == n)\n       \
    \                 return true;\n                    d -= 2;\n                }\n\
    \                c -= 2;\n                d = n / 2;\n            }\n        \
    \    b -= 2;\n            c = n / 2;\n            d = n / 2;\n        }\n    \
    \    a -= 2;\n        b = n / 2;\n        c = n / 2;\n        d = n / 2;\n   \
    \ }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp67jrjf8x.d(54): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp67jrjf8x.__unittest_L50_C1()\
    \ [0x427b3e]\\n??:? void tmp67jrjf8x.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x4d432554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long a = n / 2;\n        long b = n / 2;\n        long c = n / 2;\n       \
    \ long d = n / 2;\n        return a + b + c + d == n;\n    }\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqy0izz4x.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ded]\\n??:? void tmpqy0izz4x.__unittest_L27_C1()\
    \ [0x427ac2]\\n??:? void tmpqy0izz4x.__modtest() [0x427b70]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a97d]\\n??:? runModuleUnitTests [0x42b8e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42823c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281c3]\\n??:? _d_run_main [0x42812e]\\n??:? main [0x427b83]\\\
    n??:? __libc_start_main [0x1c99554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    int i = 0;\n    int j = 0;\n    int k\
    \ = 0;\n    int l = 0;\n    for (i = 0; i < n; i++)\n    {\n        for (j = 0;\
    \ j < n; j++)\n        {\n            for (k = 0; k < n; k++)\n            {\n\
    \                for (l = 0; l < n; l++)\n                {\n                \
    \    if (i + j + k + l == n)\n                    {\n                        if\
    \ (i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0)\n                   \
    \     {\n                            result = true;\n                        }\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n/*\nEvaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even_2(4L)\n\
    \    false\n    >>> is_equal_to_sum_even_2(6L)\n    false\n    >>> is_equal_to_sum_even_2(8L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiow5tg31.d(57): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e7d]\\n??:? void tmpiow5tg31.__unittest_L53_C1()\
    \ [0x427b12]\\n??:? void tmpiow5tg31.__modtest() [0x427c00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bba3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa36]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa0d]\\n??:? runModuleUnitTests [0x42b979]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428253]\\n??:? _d_run_main [0x4281be]\\n??:? main [0x427c13]\\\
    n??:? __libc_start_main [0xe4fdd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    bool result = false;\n    if (n % 2 == 0)\n    {\n        int count\
    \ = 0;\n        for (int i = 2; i <= n; i += 2)\n        {\n            if (count\
    \ == 4)\n            {\n                break;\n            }\n            for\
    \ (int j = 2; j <= n; j += 2)\n            {\n                if (count == 4)\n\
    \                {\n                    break;\n                }\n          \
    \      for (int k = 2; k <= n; k += 2)\n                {\n                  \
    \  if (count == 4)\n                    {\n                        break;\n  \
    \                  }\n                    for (int l = 2; l <= n; l += 2)\n  \
    \                  {\n                        if (count == 4)\n              \
    \          {\n                            break;\n                        }\n\
    \                        if (i + j + k + l == n)\n                        {\n\
    \                            count++;\n                        }\n           \
    \         }\n                }\n            }\n        }\n        if (count ==\
    \ 1)\n        {\n            result = true;\n        }\n    }\n    return result;\n\
    }\n/*\nEvaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(5L)\n    false\n\
    \    >>> is_equal_to_sum_odd(7L)\n    false\n    >>> is_equal_to_sum_odd(9L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeyrk3i_n.d(76): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmpeyrk3i_n.__unittest_L69_C1()\
    \ [0x427b61]\\n??:? void tmpeyrk3i_n.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9fd]\\n??:? runModuleUnitTests [0x42b969]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428243]\\n??:? _d_run_main [0x4281ae]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0x5637b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n      \
    \  return true;\n    if (n == 2)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n == 6)\n        return false;\n    if (n == 8)\n\
    \        return true;\n    if (n == 10)\n        return false;\n    if (n == 12)\n\
    \        return true;\n    if (n == 14)\n        return false;\n    if (n == 16)\n\
    \        return true;\n    if (n == 18)\n        return false;\n    if (n == 20)\n\
    \        return true;\n    if (n == 22)\n        return false;\n    if (n == 24)\n\
    \        return true;\n    if (n == 26)\n        return false;\n    if (n == 28)\n\
    \        return true;\n    if (n == 30)\n        return false;\n    if (n == 32)\n\
    \        return true;\n    if (n == 34)\n        return false;\n    if (n == 36)\n\
    \        return true;\n    if (n == 38)\n        return false;\n    if (n == 40)\n\
    \        return true;\n    if (n == 42)\n        return false;\n    if (n == 44)\n\
    \        return true;\n    if (n == 46)\n        return false;\n    if (n == 48)\n\
    \        return true;\n    if (n == 50)\n        return false;\n    if (n == 52)\n\
    \        return true;\n    if (n == 54)\n        return false;\n    if (n == 56)\n\
    \        return true;\n    if (n == 58)\n        return false;\n    if (n == 60)\n\
    \        return true;\n    if (n == 62)\n        return false;\n    if (n == 64)\n\
    \        return true;\n    if (n == 66)\n        return false;\n    if (n == 68)\n\
    \        return true;\n    if (n == 70)\n        return false;\n    if (n == 72)\n\
    \        return true;\n    if (n == 74)\n        return false;\n\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpynlbsi_i.d(95): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpynlbsi_i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    else\n    {\n      \
    \  long half = n / 2;\n        long i = 2;\n        long j = 2;\n        long\
    \ k = 2;\n        long l = 2;\n        for (; i <= half; i += 2)\n        {\n\
    \            for (; j <= half; j += 2)\n            {\n                for (;\
    \ k <= half; k += 2)\n                {\n                    for (; l <= half;\
    \ l += 2)\n                    {\n                        if (i + j + k + l ==\
    \ n)\n                            return true;\n                    }\n      \
    \          }\n            }\n        }\n        return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeynk3hef.d(53): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpeynk3hef.__unittest_L42_C1()\
    \ [0x427bc5]\\n??:? void tmpeynk3hef.__modtest() [0x427bd8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427beb]\\\
    n??:? __libc_start_main [0x7ea43554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    if (n % 2 != 0)\n        return false;\n    if (n < 8)\n       \
    \ return false;\n    if (n == 8)\n        return true;\n    long a = n / 4;\n\
    \    long b = n / 2;\n    long c = n / 4 * 3;\n    long d = n;\n    return a +\
    \ b + c + d == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3k94qr08.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e1d]\\n??:? void tmp3k94qr08.__unittest_L28_C1()\
    \ [0x427b11]\\n??:? void tmp3k94qr08.__modtest() [0x427ba0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb43]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9d6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb69]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9ad]\\n??:? runModuleUnitTests [0x42b919]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42826c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281f3]\\n??:? _d_run_main [0x42815e]\\n??:? main [0x427bb3]\\\
    n??:? __libc_start_main [0x49d1a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    // your code here\n    if(n%2!=0)\n        return false;\n    else\n\
    \    {\n        long a=n/2;\n        long b=a/2;\n        long c=b/2;\n      \
    \  long d=c/2;\n        return a+b+c+d==n;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp714i5yk6.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e15]\\n??:? void tmp714i5yk6.__unittest_L28_C1()\
    \ [0x427aea]\\n??:? void tmp714i5yk6.__modtest() [0x427b98]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb3b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9ce]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb61]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faed]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9a5]\\n??:? runModuleUnitTests [0x42b911]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428264]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281eb]\\n??:? _d_run_main [0x428156]\\n??:? main [0x427bab]\\\
    n??:? __libc_start_main [0xdc6aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

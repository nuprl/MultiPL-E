name: HumanEval_161_solve
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjwnm_0x5.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpjwnm_0x5.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpjwnm_0x5.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpjwnm_0x5.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjwnm_0x5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzvzbskbf.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpzvzbskbf.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpzvzbskbf.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpzvzbskbf.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzvzbskbf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(isAlpha(c))\n            result ~= toLower(c) ? toUpper(c)\
    \ : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnven6oqg.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpnven6oqg.d(26):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpnven6oqg.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpnven6oqg.d(26): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnven6oqg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n      \
    \  {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n   \
    \     {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoa8kpwaa.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpoa8kpwaa.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoa8kpwaa.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0_ate_lg.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp0_ate_lg.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp0_ate_lg.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp0_ate_lg.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_ate_lg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n\
    \        if(c.isLetter)\n        {\n            if(c.isUpper)\n              \
    \  res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n  \
    \      }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpllbgzq0z.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpllbgzq0z.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpllbgzq0z.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpllbgzq0z.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpllbgzq0z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result.length == 0\
    \ ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5cbax33.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpq5cbax33.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpq5cbax33.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5cbax33.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph6tcmxab.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmph6tcmxab.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmph6tcmxab.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmph6tcmxab.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph6tcmxab.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toUpper(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwl461kk.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmppwl461kk.d(25):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppwl461kk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzu771rj1.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpzu771rj1.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpzu771rj1.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpzu771rj1.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzu771rj1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_k2gd6ik.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmp_k2gd6ik.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_k2gd6ik.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_k2gd6ik.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_k2gd6ik.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n\
    \            res ~= isUpper(c) ? toLower(c) : toUpper(c);\n        }\n       \
    \ else\n        {\n            res ~= c;\n        }\n    }\n    return res.length\
    \ == 0 ? s.dup.reverse : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3fcxersl.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp3fcxersl.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp3fcxersl.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp3fcxersl.d(25): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp3fcxersl.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3fcxersl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplorpqr_e.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmplorpqr_e.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmplorpqr_e.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmplorpqr_e.d(28): Error: undefined identifier `toLower`\\\
    n/tmp/tmplorpqr_e.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmplorpqr_e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n           \
    \ res ~= c.toUpper;\n        else\n            res ~= c;\n    }\n    return res.length\
    \ ? res : s.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi322fszp.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpi322fszp.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpi322fszp.d(28): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpi322fszp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= to!string(toUpper(s[i]));\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n         \
    \   result ~= to!string(toLower(s[i]));\n        }\n        else\n        {\n\
    \            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmi_7slq2.d(25): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpmi_7slq2.d(29): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmi_7slq2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(c; s)\n    {\n        if (c.isAlpha)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c;\n    }\n    return result.reverse;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiazw0pce.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpiazw0pce.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpiazw0pce.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpiazw0pce.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n\
    \        return s;\n    }\n    else\n    {\n        return result;\n    }\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpav0n_7ik.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpav0n_7ik.d(25):\
    \ Error: undefined identifier `toLower`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpav0n_7ik.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpip7psf8x.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpip7psf8x.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpip7psf8x.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpip7psf8x.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip7psf8x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a'\
    \ && s[i] <= 'z')\n        {\n            result ~= to!string(s[i]).toUpper();\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n         \
    \   result ~= to!string(s[i]).toLower();\n        }\n        else\n        {\n\
    \            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpit_e8ull.d(25): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpit_e8ull.d(29): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpit_e8ull.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa9j99e8e.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpa9j99e8e.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpa9j99e8e.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpa9j99e8e.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9j99e8e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp72fingyi.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp72fingyi.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp72fingyi.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp72fingyi.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmp72fingyi.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp72fingyi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodssyr7b.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpodssyr7b.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpodssyr7b.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpodssyr7b.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodssyr7b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(i; s)\n    {\n        if(isAlpha(i))\n       \
    \ {\n            if(isUpper(i))\n                result ~= toLower(i);\n     \
    \       else\n                result ~= toUpper(i);\n        }\n        else\n\
    \            result ~= i;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzubrt1xf.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpzubrt1xf.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpzubrt1xf.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpzubrt1xf.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzubrt1xf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpavisiool.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpavisiool.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpavisiool.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpavisiool.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpavisiool.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp946g2vkr.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp946g2vkr.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp946g2vkr.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp946g2vkr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe6xuwn5j.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpe6xuwn5j.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpe6xuwn5j.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpe6xuwn5j.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe6xuwn5j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1e2jz98t.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp1e2jz98t.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp1e2jz98t.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp1e2jz98t.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1e2jz98t.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n\
    \            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n\
    \            res ~= c;\n        }\n    }\n    return res.length == 0 ? s : res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpycce73ae.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpycce73ae.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpycce73ae.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n       \
    \ {\n            result ~= c.toUpper;\n        }\n        else\n        {\n  \
    \          result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5nvcj2ce.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp5nvcj2ce.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp5nvcj2ce.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp5nvcj2ce.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toUpper(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwvl8uwh.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmppwvl8uwh.d(25):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppwvl8uwh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmxqlsjl3.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpmxqlsjl3.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpmxqlsjl3.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpmxqlsjl3.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmxqlsjl3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toLower;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0o2haj7q.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp0o2haj7q.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp0o2haj7q.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp0o2haj7q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyual1kft.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpyual1kft.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyual1kft.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm9ej933f.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpm9ej933f.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpm9ej933f.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpm9ej933f.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm9ej933f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string r;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n            r\
    \ ~= toUpper(c);\n        else\n            r ~= toLower(c);\n    }\n    return\
    \ r;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdvzh5m4w.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpdvzh5m4w.d(24):\
    \ Error: undefined identifier `toUpper`\\n/tmp/tmpdvzh5m4w.d(26): Error: undefined\
    \ identifier `toLower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpdvzh5m4w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmze_ipq6.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpmze_ipq6.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpmze_ipq6.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpmze_ipq6.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmze_ipq6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n       \
    \ {\n            result ~= c.toUpper;\n        }\n        else\n        {\n  \
    \          result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp985wev53.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp985wev53.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp985wev53.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n\
    \        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2uhcva2z.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp2uhcva2z.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp2uhcva2z.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp2uhcva2z.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2uhcva2z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n\
    \        {\n            result ~= to!string(toUpper(s[i]));\n        }\n     \
    \   else\n        {\n            result ~= to!string(toLower(s[i]));\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp45ocfzwu.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp45ocfzwu.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp45ocfzwu.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp45ocfzwu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toUpper(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbgdv7zvh.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpbgdv7zvh.d(25):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpbgdv7zvh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        foreach(i; 0 .. s.length)\n        {\n      \
    \      if(s[i] >= 'a' && s[i] <= 'z')\n            {\n                result ~=\
    \ s[i].toUpper();\n            }\n            else if(s[i] >= 'A' && s[i] <= 'Z')\n\
    \            {\n                result ~= s[i].toLower();\n            }\n   \
    \         else\n            {\n                result ~= s[i];\n            }\n\
    \        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_ghaqucy.d(31): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp_ghaqucy.d(35): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ghaqucy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c) == c ? toUpper(c) : toLower(c);\n      \
    \  }\n        else\n        {\n            result ~= c;\n        }\n    }\n  \
    \  return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp253v3719.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp253v3719.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp253v3719.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp253v3719.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp253v3719.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0) return s;\n    string result = \"\";\n    foreach(c; s)\n\
    \    {\n        if (c.isLetter) result ~= c.toUpper;\n        else result ~= c;\n\
    \    }\n    return result.length == 0 ? s.reverse : result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiauduwo8.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpiauduwo8.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpiauduwo8.d(27): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpiauduwo8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \                result ~= toUpper(c);\n            else\n                result\
    \ ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   if(result.length == s.length)\n        return result;\n    else\n        return\
    \ reverse(result);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkqgf14uu.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpkqgf14uu.d(27):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpkqgf14uu.d(28): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpkqgf14uu.d(30): Error: undefined identifier `toLower`\\\
    n/tmp/tmpkqgf14uu.d(38): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpkqgf14uu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    if(s.length == 0) return s;\n    foreach(c; s)\n    {\n \
    \       if(c.isLetter)\n        {\n            if(c.isUpper)\n               \
    \ res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n   \
    \     }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplg5yctwr.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmplg5yctwr.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmplg5yctwr.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmplg5yctwr.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplg5yctwr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result.dup.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyi96fl14.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpyi96fl14.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpyi96fl14.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpyi96fl14.d(28): Error: undefined identifier `toUpper`\\\
    n/tmp/tmpyi96fl14.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpyi96fl14.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if (c.isAlpha)\n            res ~= c.toUpper;\n        else\n\
    \            res ~= c;\n    }\n    if (res.length == s.length)\n        return\
    \ res.reverse;\n    else\n        return s.reverse;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr3ucy9i7.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpr3ucy9i7.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpr3ucy9i7.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpr3ucy9i7.d(33):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpr3ucy9i7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(isAlpha(c))\n            result ~= toLower(c) ? toUpper(c)\
    \ : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbue5emep.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpbue5emep.d(26):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpbue5emep.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpbue5emep.d(26): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbue5emep.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph7rem9nh.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmph7rem9nh.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmph7rem9nh.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmph7rem9nh.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph7rem9nh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n          \
    \  res ~= c.toUpper;\n        else\n            res ~= c;\n    }\n    return res.length\
    \ ? res : s.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp45k_hx6z.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp45k_hx6z.d(24): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp45k_hx6z.d(28): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp45k_hx6z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length ? result.dup.reverse\
    \ : s.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpes__e3_x.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpes__e3_x.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpes__e3_x.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpes__e3_x.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpes__e3_x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(c; s)\n    {\n        if (isAlpha(c))\n        {\n            if (isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp78tmotf0.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmp78tmotf0.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp78tmotf0.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp78tmotf0.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78tmotf0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n \
    \               result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf7f_3569.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpf7f_3569.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpf7f_3569.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpf7f_3569.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf7f_3569.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n\
    \            res ~= toLower(c);\n        }\n        else\n        {\n        \
    \    res ~= c;\n        }\n    }\n    return res.reverse;\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnbxfyg4w.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpnbxfyg4w.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpnbxfyg4w.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpnbxfyg4w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result.dup.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp81me6vde.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp81me6vde.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp81me6vde.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp81me6vde.d(28): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp81me6vde.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp81me6vde.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoyc0ij32.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpoyc0ij32.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpoyc0ij32.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpoyc0ij32.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoyc0ij32.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0) return result;\n    if(s.length\
    \ == 1) return s.toUpper();\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0rm50rs1.d(22): Error: no property `toUpper` for type `string`\\\
    n/tmp/tmp0rm50rs1.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp0rm50rs1.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp0rm50rs1.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp0rm50rs1.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rm50rs1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toLower;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result.length ==\
    \ 0 ? s.dup.reverse : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5cxano7_.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp5cxano7_.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp5cxano7_.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp5cxano7_.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cxano7_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvd7blyuy.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpvd7blyuy.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpvd7blyuy.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpvd7blyuy.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvd7blyuy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeicnws9y.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpeicnws9y.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpeicnws9y.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpeicnws9y.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeicnws9y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.canFind(\"[a-zA-Z]\"))\n    {\n        foreach(c;\
    \ s)\n        {\n            if(c.isAlpha)\n                result ~= c.toUpper;\n\
    \            else\n                result ~= c.toLower;\n        }\n    }\n  \
    \  else\n    {\n        foreach(c; s)\n            result ~= c;\n    }\n    return\
    \ result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi1uqb55n.d(21): Error: no property `canFind` for type `string`\\\
    n/tmp/tmpi1uqb55n.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpi1uqb55n.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpi1uqb55n.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpi1uqb55n.d(36): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpi1uqb55n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4qkp1me.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpa4qkp1me.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpa4qkp1me.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpa4qkp1me.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa4qkp1me.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmply9kw5q6.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmply9kw5q6.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmply9kw5q6.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmply9kw5q6.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmply9kw5q6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpefbb7an9.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpefbb7an9.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpefbb7an9.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpefbb7an9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyzh1mp9e.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpyzh1mp9e.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpyzh1mp9e.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpyzh1mp9e.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzh1mp9e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= to!string(toUpper(s[i]));\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n         \
    \   result ~= to!string(toLower(s[i]));\n        }\n        else\n        {\n\
    \            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp88oplcsn.d(25): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp88oplcsn.d(29): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp88oplcsn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \                result ~= toUpper(c);\n            else\n                result\
    \ ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplnbetdsv.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmplnbetdsv.d(27):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmplnbetdsv.d(28): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmplnbetdsv.d(30): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplnbetdsv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string ret = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n   \
    \     {\n            ret ~= toLower(c) == c ? toUpper(c) : toLower(c);\n     \
    \   }\n        else\n        {\n            ret ~= c;\n        }\n    }\n    return\
    \ ret.length == 0 ? s : ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwev2reta.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpwev2reta.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpwev2reta.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpwev2reta.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwev2reta.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp94c8ymnc.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp94c8ymnc.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp94c8ymnc.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp94c8ymnc.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp94c8ymnc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    foreach(i,\
    \ c; s)\n    {\n        if (isAlpha(c))\n            res ~= toUpper(c);\n    \
    \    else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfkuia2n1.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpfkuia2n1.d(26):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpfkuia2n1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprwtuqbri.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmprwtuqbri.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprwtuqbri.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkxjedpvk.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpkxjedpvk.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpkxjedpvk.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpkxjedpvk.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkxjedpvk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(c;\
    \ s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n \
    \               result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptyf3jtqm.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmptyf3jtqm.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmptyf3jtqm.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmptyf3jtqm.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyf3jtqm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result.length\
    \ == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp95iqb01r.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmp95iqb01r.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95iqb01r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n\
    \        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdm5mwsrw.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpdm5mwsrw.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpdm5mwsrw.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpdm5mwsrw.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdm5mwsrw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isalpha(c))\n\
    \        {\n            if(isupper(c))\n                result ~= tolower(c);\n\
    \            else\n                result ~= toupper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4fe94ajf.d(23): Error: undefined identifier `isalpha`\\n/tmp/tmp4fe94ajf.d(25):\
    \ Error: undefined identifier `isupper`\\n/tmp/tmp4fe94ajf.d(26): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmp4fe94ajf.d(28): Error: undefined identifier `toupper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4fe94ajf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl2o94oqr.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpl2o94oqr.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpl2o94oqr.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpl2o94oqr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuut2wmg4.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpuut2wmg4.d(25): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpuut2wmg4.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpuut2wmg4.d(28): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpuut2wmg4.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpuut2wmg4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length == 0)\n    {\n        return res;\n  \
    \  }\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n          \
    \  res ~= c.toUpper().toLower();\n        }\n        else\n        {\n       \
    \     res ~= c;\n        }\n    }\n    return res.reverse;\n}\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgcfii3w9.d(27): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpgcfii3w9.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpgcfii3w9.d(36): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpgcfii3w9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length == 0) return res;\n    foreach(c; s)\n\
    \    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n       \
    \         res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n\
    \        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzoljmcuh.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpzoljmcuh.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpzoljmcuh.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpzoljmcuh.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzoljmcuh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s) \n    {\n        if(isAlpha(c)) \n     \
    \   {\n            result ~= toLower(c);\n        }\n        else \n        {\n\
    \            result ~= c;\n        }\n    }\n    return result.length ? result\
    \ : s.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtt3lix1.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmprtt3lix1.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmprtt3lix1.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmprtt3lix1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0) return s;\n    foreach(c; s)\n\
    \    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n      \
    \          result ~= toLower(c);\n            else\n                result ~=\
    \ toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwjfqrfk_.d(24): Error: undefined identifier `isAlpha`\\n/tmp/tmpwjfqrfk_.d(26):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpwjfqrfk_.d(27): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpwjfqrfk_.d(29): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjfqrfk_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= isUpper(c) ? toLower(c) : toUpper(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpula_b6_z.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpula_b6_z.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpula_b6_z.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpula_b6_z.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpula_b6_z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n     \
    \   else\n            result ~= c;\n    }\n    if (result.length == s.length)\n\
    \        return result.reverse;\n    else\n        return s.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphyfdzc3l.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmphyfdzc3l.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmphyfdzc3l.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmphyfdzc3l.d(33):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmphyfdzc3l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if (s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if (isLetter(c))\n            result ~= toLower(c) ? toUpper(c)\
    \ : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuqw9h1dk.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmpuqw9h1dk.d(26):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpuqw9h1dk.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpuqw9h1dk.d(26): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuqw9h1dk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= isUpper(c) ? toLower(c) : toUpper(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_qqgggzg.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp_qqgggzg.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_qqgggzg.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_qqgggzg.d(25): Error: undefined identifier `toUpper`\\\
    n/tmp/tmp_qqgggzg.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp_qqgggzg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= to!string(toUpper(s[i]));\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n         \
    \   result ~= to!string(toLower(s[i]));\n        }\n        else\n        {\n\
    \            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq15to_2p.d(25): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpq15to_2p.d(29): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq15to_2p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            result ~= to!string(c).toUpper();\n        }\n       \
    \ else\n        {\n            result ~= to!string(c).toLower();\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_b0au4t.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpm_b0au4t.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpm_b0au4t.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpm_b0au4t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    if(s.length == 0)\n        return res;\n    foreach(c; s)\n\
    \    {\n        if(c.isAlpha)\n            res ~= c.toUpper;\n        else\n \
    \           res ~= c;\n    }\n    return res.length == 0 ? s.reverse : res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxvronww2.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpxvronww2.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpxvronww2.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpxvronww2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n\
    \            result ~= c.toUpper;\n        }\n        else\n        {\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0232aov4.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp0232aov4.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0232aov4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpam8k3j_0.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpam8k3j_0.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpam8k3j_0.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpam8k3j_0.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpam8k3j_0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toUpper(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2rbq_ej.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpu2rbq_ej.d(25):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpu2rbq_ej.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuqgbdovg.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpuqgbdovg.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpuqgbdovg.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpuqgbdovg.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmpuqgbdovg.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpuqgbdovg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n \
    \       {\n            result ~= c.toUpper;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphipwayph.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmphipwayph.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphipwayph.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= s[i].toUpper;\n   \
    \     }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result\
    \ ~= s[i].toLower;\n        }\n        else\n        {\n            result ~=\
    \ s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_xgkefxt.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp_xgkefxt.d(29): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xgkefxt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_m7q9c9y.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp_m7q9c9y.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp_m7q9c9y.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp_m7q9c9y.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_m7q9c9y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxuzf3vgs.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpxuzf3vgs.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpxuzf3vgs.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpxuzf3vgs.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmpxuzf3vgs.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpxuzf3vgs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_7umcjn.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp4_7umcjn.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp4_7umcjn.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp4_7umcjn.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4_7umcjn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if (isAlpha(c))\n            res ~= to!string(c).toUpper();\n\
    \        else\n            res ~= to!string(c).toLower();\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr0hqnq6p.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpr0hqnq6p.d(26):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpr0hqnq6p.d(28): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpr0hqnq6p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n \
    \           result ~= to!string(toUpper(s[i]));\n        else if(s[i] >= 'A' &&\
    \ s[i] <= 'Z')\n            result ~= to!string(toLower(s[i]));\n        else\n\
    \            result ~= to!string(s[i]);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9gu9xpt.d(26): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpd9gu9xpt.d(28): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpd9gu9xpt.d(30):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9gu9xpt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isAlpha)\n            result ~= c.toLower.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result.length == 0\
    \ ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqmy8a7vx.d(25): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpqmy8a7vx.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpqmy8a7vx.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmy8a7vx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n  \
    \      {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5k1s2v3f.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp5k1s2v3f.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmp5k1s2v3f.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp5k1s2v3f.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5k1s2v3f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n \
    \           result ~= to!string(toUpper(s[i]));\n        else if(s[i] >= 'A' &&\
    \ s[i] <= 'Z')\n            result ~= to!string(toLower(s[i]));\n        else\n\
    \            result ~= to!string(s[i]);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0vpd1v_m.d(26): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmp0vpd1v_m.d(28): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp0vpd1v_m.d(30):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vpd1v_m.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n   \
    \     {\n            res ~= c.toUpper;\n        }\n        else\n        {\n \
    \           res ~= c;\n        }\n    }\n    return res.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb3gpa719.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpb3gpa719.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpb3gpa719.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3gpa719.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result.length == 0\
    \ ? s.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgu_fngje.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpgu_fngje.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpgu_fngje.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu_fngje.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if (isAlpha(c))\n        {\n            if (isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnp4xdrym.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpnp4xdrym.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpnp4xdrym.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpnp4xdrym.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnp4xdrym.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpauh4_aiz.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpauh4_aiz.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpauh4_aiz.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpauh4_aiz.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpauh4_aiz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= to!string(toUpper(s[i]));\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n         \
    \   result ~= to!string(toLower(s[i]));\n        }\n        else\n        {\n\
    \            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqfmffytj.d(25): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpqfmffytj.d(29): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqfmffytj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpljuljo9a.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmpljuljo9a.d(27):\
    \ Error: no property `isUpper` for type `immutable(char)`\\n/tmp/tmpljuljo9a.d(28):\
    \ Error: no property `toLower` for type `immutable(char)`\\n/tmp/tmpljuljo9a.d(30):\
    \ Error: no property `toUpper` for type `immutable(char)`\\nFailed: [\"dmd\",\
    \ \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljuljo9a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7gf1wgtv.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp7gf1wgtv.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp7gf1wgtv.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp7gf1wgtv.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7gf1wgtv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n       \
    \ {\n            result ~= c.isUpper ? c.toLower : c.toUpper;\n        }\n   \
    \     else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvuj0ph9y.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpvuj0ph9y.d(25): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpvuj0ph9y.d(25): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpvuj0ph9y.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpvuj0ph9y.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvuj0ph9y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c) == c ? toUpper(c) : toLower(c);\n      \
    \  }\n        else\n        {\n            result ~= c;\n        }\n    }\n  \
    \  return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplsgnxnnc.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmplsgnxnnc.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmplsgnxnnc.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmplsgnxnnc.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmplsgnxnnc.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmplsgnxnnc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n\
    \        {\n            result ~= to!string(toUpper(s[i]));\n        }\n     \
    \   else\n        {\n            result ~= to!string(toLower(s[i]));\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc14d_r8q.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpc14d_r8q.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpc14d_r8q.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpc14d_r8q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n\
    \        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4te8yfhz.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp4te8yfhz.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp4te8yfhz.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp4te8yfhz.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4te8yfhz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty) return s;\n    string res = \"\";\n    foreach (c; s)\n    {\n\
    \        if (isAlpha(c))\n            res ~= toLower(c) ? toUpper(c) : toLower(c);\n\
    \        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb30e78n0.d(20): Error: no property `empty` for type `string`\\\
    n/tmp/tmpb30e78n0.d(24): Error: undefined identifier `isAlpha`\\n/tmp/tmpb30e78n0.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpb30e78n0.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpb30e78n0.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb30e78n0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0) return s;\n    string result = \"\";\n    foreach(c; s)\n\
    \    {\n        if (c.isAlpha)\n        {\n            if (c.isUpper)\n      \
    \          result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvpk55spj.d(24): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpvpk55spj.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpvpk55spj.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpvpk55spj.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpk55spj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(i, c;\
    \ s)\n    {\n        if(c.isLetter)\n            result ~= c.toLower.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5kt5kium.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp5kt5kium.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5kt5kium.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq_0ex_y.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmphq_0ex_y.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphq_0ex_y.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphq_0ex_y.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq_0ex_y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbcplo85e.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpbcplo85e.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpbcplo85e.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpbcplo85e.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbcplo85e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7fp2mpgx.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp7fp2mpgx.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp7fp2mpgx.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp7fp2mpgx.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7fp2mpgx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0) return s;\n    foreach(i, c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbl4ndutx.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpbl4ndutx.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpbl4ndutx.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpbl4ndutx.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbl4ndutx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0) return result;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw6mus27_.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpw6mus27_.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpw6mus27_.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpw6mus27_.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6mus27_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmqzpg0xa.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpmqzpg0xa.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpmqzpg0xa.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpmqzpg0xa.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmqzpg0xa.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6asucyc3.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmp6asucyc3.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp6asucyc3.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp6asucyc3.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6asucyc3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr9lrecqd.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpr9lrecqd.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpr9lrecqd.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpr9lrecqd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n\
    \        {\n            if(isUpper(ch))\n                result ~= toLower(ch);\n\
    \            else\n                result ~= toUpper(ch);\n        }\n       \
    \ else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0e9d17dw.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp0e9d17dw.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp0e9d17dw.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp0e9d17dw.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0e9d17dw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgmi0j2lp.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpgmi0j2lp.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpgmi0j2lp.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpgmi0j2lp.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmi0j2lp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmputr4pmey.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmputr4pmey.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmputr4pmey.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmputr4pmey.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmputr4pmey.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a'\
    \ && s[i] <= 'z')\n        {\n            res ~= s[i].toUpper;\n        }\n  \
    \      else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            res ~= s[i].toLower;\n\
    \        }\n        else\n        {\n            res ~= s[i];\n        }\n   \
    \ }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnwjgtki2.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpnwjgtki2.d(29): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnwjgtki2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n \
    \       {\n            result ~= c.toUpper.toLower;\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    if(result.length ==\
    \ 0)\n    {\n        return s.dup.reverse;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj1frls6m.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpj1frls6m.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpj1frls6m.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpj1frls6m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c);\n        }\n        else\n     \
    \   {\n            result ~= c;\n        }\n    }\n    if(result.length > 0)\n\
    \    {\n        return result.reverse;\n    }\n    else\n    {\n        return\
    \ s.reverse;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwdvxk14p.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpwdvxk14p.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpwdvxk14p.d(34): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpwdvxk14p.d(38):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdvxk14p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= to!string(c).toUpper();\n        }\n        else\n\
    \        {\n            result ~= to!string(c).toLower();\n        }\n    }\n\
    \    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5shfhrtb.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp5shfhrtb.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp5shfhrtb.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp5shfhrtb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c);\n        }\n        else\n     \
    \   {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n\
    \    {\n        return s.dup.reverse;\n    }\n    else\n    {\n        return\
    \ result.dup.reverse;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpokfoa6ey.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpokfoa6ey.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpokfoa6ey.d(34): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpokfoa6ey.d(38):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpokfoa6ey.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    foreach(c;\
    \ s)\n    {\n        if (c.isLetter)\n            res ~= c.toUpper;\n        else\n\
    \            res ~= c;\n    }\n    return res.length == 0 ? s.reverse : res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwk2m1twx.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpwk2m1twx.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpwk2m1twx.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk2m1twx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper.toLower;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcy4w33_x.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpcy4w33_x.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcy4w33_x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp36s0tzy0.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmp36s0tzy0.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp36s0tzy0.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp36s0tzy0.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36s0tzy0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result.length ==\
    \ 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvchpw6nl.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpvchpw6nl.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpvchpw6nl.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvchpw6nl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn79klttr.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpn79klttr.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpn79klttr.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpn79klttr.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn79klttr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3bbc1x1p.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp3bbc1x1p.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmp3bbc1x1p.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp3bbc1x1p.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3bbc1x1p.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp602po7_3.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp602po7_3.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp602po7_3.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp602po7_3.d(25): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp602po7_3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptqc77qrx.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmptqc77qrx.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmptqc77qrx.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmptqc77qrx.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqc77qrx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper.toLower;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodlir0n7.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpodlir0n7.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodlir0n7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n \
    \       {\n            result ~= c.toUpper;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result.length == 0\
    \ ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmci56ogp.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpmci56ogp.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpmci56ogp.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpmci56ogp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \                result ~= toUpper(c);\n            else\n                result\
    \ ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr_tb0_t3.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpr_tb0_t3.d(27):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpr_tb0_t3.d(28): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpr_tb0_t3.d(30): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr_tb0_t3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n\
    \        {\n            result ~= toLower(ch);\n        }\n        else\n    \
    \    {\n            result ~= ch;\n        }\n    }\n    if(result.length)\n \
    \   {\n        return result;\n    }\n    else\n    {\n        return s.dup.reverse;\n\
    \    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6p4queud.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp6p4queud.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp6p4queud.d(38): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp6p4queud.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper().toLower();\n\
    \        else\n            result ~= c;\n    }\n    return result.length == 0\
    \ ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuxkngq01.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpuxkngq01.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpuxkngq01.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxkngq01.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi43zvaqm.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpi43zvaqm.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpi43zvaqm.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpi43zvaqm.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi43zvaqm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8xn_5br.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpo8xn_5br.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpo8xn_5br.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpo8xn_5br.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo8xn_5br.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(c.isLetter)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    return result.length == s.length ? result\
    \ : result.reversed;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwat19ybu.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpwat19ybu.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpwat19ybu.d(30): Error: no property `reversed` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwat19ybu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            if(isUpper(c))\n                result ~= toLower(c);\n     \
    \       else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphxfov98e.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmphxfov98e.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmphxfov98e.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmphxfov98e.d(28): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphxfov98e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(c;\
    \ s)\n    {\n        if (isLetter(c))\n            result ~= toLower(c) ? toUpper(c)\
    \ : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9lvocx3q.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmp9lvocx3q.d(26):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp9lvocx3q.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp9lvocx3q.d(26): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9lvocx3q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw13ldbwb.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpw13ldbwb.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpw13ldbwb.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpw13ldbwb.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw13ldbwb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprrg2f_jm.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmprrg2f_jm.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmprrg2f_jm.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmprrg2f_jm.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmprrg2f_jm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n\
    \            res ~= toLower(c);\n        }\n        else\n        {\n        \
    \    res ~= c;\n        }\n    }\n    return res.length == 0 ? s : res.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcg6j6spz.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpcg6j6spz.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpcg6j6spz.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpcg6j6spz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            if(c.isUpper)\n                result ~= c.toLower;\n\
    \            else\n                result ~= c.toUpper;\n        }\n        else\n\
    \            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcnt7ow6n.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpcnt7ow6n.d(25): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpcnt7ow6n.d(26): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpcnt7ow6n.d(28): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpcnt7ow6n.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnt7ow6n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyrjb_2r3.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpyrjb_2r3.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpyrjb_2r3.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpyrjb_2r3.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyrjb_2r3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpilydkrks.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpilydkrks.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpilydkrks.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpilydkrks.d(28): Error: undefined identifier `toLower`\\\
    n/tmp/tmpilydkrks.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpilydkrks.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z')\n        {\n            result ~= s[i].toUpper;\n   \
    \     }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result\
    \ ~= s[i].toLower;\n        }\n        else\n        {\n            result ~=\
    \ s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0bteffo.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpg0bteffo.d(29): Error: no property `toLower` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0bteffo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5avjw0xm.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp5avjw0xm.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp5avjw0xm.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp5avjw0xm.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmp5avjw0xm.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp5avjw0xm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppk8p7f73.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmppk8p7f73.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmppk8p7f73.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmppk8p7f73.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo_7mogic.d(23): Error: undefined identifier `isLetter`\\n/tmp/tmpo_7mogic.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpo_7mogic.d(26): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpo_7mogic.d(28): Error: undefined identifier `toUpper`\\\
    n/tmp/tmpo_7mogic.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpo_7mogic.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n\
    \            if(isLower(c))\n                res ~= toUpper(c);\n            else\n\
    \                res ~= toLower(c);\n        }\n        else\n            res\
    \ ~= c;\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsju6xy47.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpsju6xy47.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpsju6xy47.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpsju6xy47.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsju6xy47.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5g4z_u7w.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp5g4z_u7w.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5g4z_u7w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0) return result;\n    foreach(i,\
    \ c; s)\n    {\n        if (c.isLetter)\n        {\n            if (c.isUpper)\n\
    \                result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps3oqsb99.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmps3oqsb99.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmps3oqsb99.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmps3oqsb99.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps3oqsb99.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= to!string(c).toUpper();\n        }\n       \
    \ else\n        {\n            result ~= to!string(c).toLower();\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp93p42kbt.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp93p42kbt.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmp93p42kbt.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp93p42kbt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n     \
    \           res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n\
    \        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz51d_rnm.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmpz51d_rnm.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpz51d_rnm.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpz51d_rnm.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz51d_rnm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n    \
    \    }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnjmoqrxd.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpnjmoqrxd.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpnjmoqrxd.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpnjmoqrxd.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmpnjmoqrxd.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpnjmoqrxd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0) return s;\n    string result = \"\";\n    foreach(c; s)\n\
    \    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n \
    \       }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0z4ir_31.d(24): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp0z4ir_31.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0z4ir_31.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            result ~= c.toUpper;\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn9xpnso_.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpn9xpnso_.d(27): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn9xpnso_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0) return result;\n    foreach(i,\
    \ c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \                result ~= toUpper(c);\n            else\n                result\
    \ ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbisg7eqh.d(24): Error: undefined identifier `isAlpha`\\n/tmp/tmpbisg7eqh.d(26):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpbisg7eqh.d(27): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpbisg7eqh.d(29): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbisg7eqh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphmagn9e0.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmphmagn9e0.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmphmagn9e0.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmphmagn9e0.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphmagn9e0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return result;\n  \
    \  foreach(i, c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    if (result.length == s.length)\n\
    \        return result.reverse;\n    else\n        return s.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzoo4krzy.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpzoo4krzy.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpzoo4krzy.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmpzoo4krzy.d(33):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpzoo4krzy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0) return s;\n    string result = \"\";\n    foreach(c; s)\n\
    \    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n        \
    \        result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n\
    \        }\n        else\n            result ~= c;\n    }\n    return result.length\
    \ == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp35j85eh1.d(24): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmp35j85eh1.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp35j85eh1.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp35j85eh1.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp35j85eh1.d(34): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp35j85eh1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n  \
    \              result ~= c.toLower;\n            else\n                result\
    \ ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf204fn52.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpf204fn52.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmpf204fn52.d(28): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmpf204fn52.d(30): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf204fn52.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n \
    \       {\n            result ~= c.toUpper;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmgu8qtv3.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmpmgu8qtv3.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmgu8qtv3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.length > 0 ? result : s.dup.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpagx12r4q.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpagx12r4q.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpagx12r4q.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpagx12r4q.d(28): Error: undefined identifier `toLower`\\\
    n/tmp/tmpagx12r4q.d(33): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpagx12r4q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result.length ? result : result.dup.reverse;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi2tdwdz7.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpi2tdwdz7.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpi2tdwdz7.d(25): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpi2tdwdz7.d(25): Error: undefined identifier `toLower`\\\
    n/tmp/tmpi2tdwdz7.d(32): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpi2tdwdz7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(isAlpha(c))\n            result ~= to!string(c).toUpper();\n\
    \        else\n            result ~= to!string(c).toLower();\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb67rgokx.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpb67rgokx.d(26):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpb67rgokx.d(28): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpb67rgokx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \                result ~= toUpper(c);\n            else\n                result\
    \ ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyny0tco5.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpyny0tco5.d(27):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpyny0tco5.d(28): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpyny0tco5.d(30): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyny0tco5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(c;\
    \ s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper.toLower;\n\
    \        else\n            result ~= c;\n    }\n    return result.length == s.length\
    \ ? result : result.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4q2qywd.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmpw4q2qywd.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmpw4q2qywd.d(30): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(char[])`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpw4q2qywd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw21lq6o7.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpw21lq6o7.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpw21lq6o7.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpw21lq6o7.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw21lq6o7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(i, c;\
    \ s)\n    {\n        if(isAlpha(c))\n            result ~= toLower(c) == c ? toUpper(c)\
    \ : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3caqlaf.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpn3caqlaf.d(26):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmpn3caqlaf.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpn3caqlaf.d(26): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3caqlaf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0) return s;\n    string result = \"\";\n    foreach(c; s)\n\
    \    {\n        if (c.isLetter)\n        {\n            if (c.isUpper)\n     \
    \           result ~= c.toLower;\n            else\n                result ~=\
    \ c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3jjwa00f.d(24): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp3jjwa00f.d(26): Error: no property `isUpper` for type `immutable(char)`\\\
    n/tmp/tmp3jjwa00f.d(27): Error: no property `toLower` for type `immutable(char)`\\\
    n/tmp/tmp3jjwa00f.d(29): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jjwa00f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7nrphpod.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp7nrphpod.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp7nrphpod.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp7nrphpod.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7nrphpod.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n\
    \        {\n            if(isUpper(s[i]))\n            {\n                result\
    \ ~= toLower(s[i]);\n            }\n            else\n            {\n        \
    \        result ~= toUpper(s[i]);\n            }\n        }\n        else\n  \
    \      {\n            result ~= s[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe2hr00lv.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpe2hr00lv.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpe2hr00lv.d(27): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpe2hr00lv.d(31): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2hr00lv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    foreach(i,\
    \ c; s)\n    {\n        if (isAlpha(c))\n            res ~= toUpper(c);\n    \
    \    else\n            res ~= c;\n    }\n    if (res.length == s.length)\n   \
    \     return res;\n    else\n        return s.dup.reverse;\n}\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvy9vbu58.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpvy9vbu58.d(26):\
    \ Error: undefined identifier `toUpper`\\n/tmp/tmpvy9vbu58.d(33): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvy9vbu58.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n   \
    \     {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n   \
    \     {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzriw2mbc.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpzriw2mbc.d(25):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzriw2mbc.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if (isAlpha(c))\n            result ~= toUpper(c);\n \
    \       else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpturhg5.d(25): Error: undefined identifier `isAlpha`\\n/tmp/tmpjpturhg5.d(26):\
    \ Error: undefined identifier `toUpper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpjpturhg5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n\
    \            res ~= isUpper(c) ? toLower(c) : toUpper(c);\n        }\n       \
    \ else\n        {\n            res ~= c;\n        }\n    }\n    return res.length\
    \ == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwwwq0ppw.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpwwwq0ppw.d(25):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpwwwq0ppw.d(25): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpwwwq0ppw.d(25): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwwq0ppw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n    {\n        return s;\n \
    \   }\n    foreach(i; 0 .. s.length)\n    {\n        if(s[i] >= 'a' && s[i] <=\
    \ 'z')\n        {\n            result ~= to!string(toUpper(s[i]));\n        }\n\
    \        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            result ~=\
    \ to!string(toLower(s[i]));\n        }\n        else\n        {\n            result\
    \ ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9nzliop.d(29): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpv9nzliop.d(33): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv9nzliop.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if (s.length == 0)\n        return s;\n    foreach(i,\
    \ c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n  \
    \      else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph1w9owlr.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmph1w9owlr.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph1w9owlr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n\
    \                result ~= toLower(c);\n            else\n                result\
    \ ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0f_ub8gd.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmp0f_ub8gd.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmp0f_ub8gd.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmp0f_ub8gd.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0f_ub8gd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else\n      \
    \  {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp08hl_mes.d(23): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp08hl_mes.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08hl_mes.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n \
    \       {\n            result ~= c.toUpper;\n        }\n        else\n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphwk4kddd.d(23): Error: no property `isAlpha` for type `immutable(char)`\\\
    n/tmp/tmphwk4kddd.d(25): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphwk4kddd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(c.isLetter)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    if(result.length == s.length)\n        return\
    \ result.reverse;\n    else\n        return s.reverse;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2rcklwkb.d(25): Error: no property `isLetter` for type `immutable(char)`\\\
    n/tmp/tmp2rcklwkb.d(26): Error: no property `toUpper` for type `immutable(char)`\\\
    n/tmp/tmp2rcklwkb.d(31): Error: template `std.typecons.reverse` cannot deduce\
    \ function from argument types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp2rcklwkb.d(33):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rcklwkb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n    {\n        return result;\n\
    \    }\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n     \
    \       if(isUpper(c))\n            {\n                result ~= toLower(c);\n\
    \            }\n            else\n            {\n                result ~= toUpper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwldelo7s.d(27): Error: undefined identifier `isAlpha`\\n/tmp/tmpwldelo7s.d(29):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpwldelo7s.d(31): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpwldelo7s.d(35): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwldelo7s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n\
    \            if(isLower(ch))\n                res ~= toUpper(ch);\n          \
    \  else\n                res ~= toLower(ch);\n        }\n        else\n      \
    \      res ~= ch;\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiqrc50k2.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmpiqrc50k2.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmpiqrc50k2.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmpiqrc50k2.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiqrc50k2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n\
    \    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n     \
    \           result ~= toLower(c);\n            else\n                result ~=\
    \ toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnvhuuxt_.d(25): Error: undefined identifier `isLetter`\\n/tmp/tmpnvhuuxt_.d(27):\
    \ Error: undefined identifier `isUpper`\\n/tmp/tmpnvhuuxt_.d(28): Error: undefined\
    \ identifier `toLower`\\n/tmp/tmpnvhuuxt_.d(30): Error: undefined identifier `toUpper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvhuuxt_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n       \
    \ {\n            result ~= toLower(c);\n        }\n        else\n        {\n \
    \           result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse\
    \ : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp64vim73t.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp64vim73t.d(25):\
    \ Error: undefined identifier `toLower`\\n/tmp/tmp64vim73t.d(32): Error: template\
    \ `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`,\
    \ candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\n/tmp/tmp64vim73t.d(32):\
    \ Error: template `std.typecons.reverse` cannot deduce function from argument\
    \ types `!()(string)`, candidates are:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):\
    \        `std.typecons.reverse(T)(T t) if (isTuple!T)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp64vim73t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n                result ~= toUpper(c);\n\
    \            else\n                result ~= toLower(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp35pcov00.d(23): Error: undefined identifier `isAlpha`\\n/tmp/tmp35pcov00.d(25):\
    \ Error: undefined identifier `isLower`\\n/tmp/tmp35pcov00.d(26): Error: undefined\
    \ identifier `toUpper`\\n/tmp/tmp35pcov00.d(28): Error: undefined identifier `toLower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35pcov00.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

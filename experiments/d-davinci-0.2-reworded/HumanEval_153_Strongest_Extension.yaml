name: HumanEval_153_Strongest_Extension
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou will be given the name of\
  \ a class (a string) and an array of extensions.\n    The extensions are to be used\
  \ to load additional classes to the class. The\n    strength of the extension is\
  \ as follows: Let CAP be the number of the uppercase\n    letters in the extension's\
  \ name, and let SM be the number of lowercase letters \n    in the extension's name,\
  \ the strength is given by the fraction CAP - SM. \n    You should find the strongest\
  \ extension and return a string in this \n    format: ClassName.StrongestExtensionName.\n\
  \    If there are two or more extensions with the same strength, you should\n  \
  \  choose the one that comes first in the array.\n    For example, if you are given\
  \ \"Slices\" as the class and an array of the\n    extensions: ['SErviNGSliCes',\
  \ 'Cheese', 'StuFfed'] then you should\n    return 'Slices.SErviNGSliCes' since\
  \ 'SErviNGSliCes' is the strongest extension \n    (its strength is -1).\n    Example:\n\
  \    >>> Strongest_Extension(\"my_class\", [\"AA\", \"Be\", \"CC\"])\n    \"my_class.AA\"\
  \n    \n*/\nstring Strongest_Extension(string class_name, string[] extensions) \n"
tests: "unittest\n{\n    alias candidate = Strongest_Extension;\n\n    assert(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\");\n    assert(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
  );\n    assert(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
  , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\");\n    assert(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\");\n    assert(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\");\n    assert(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
  YameRore.okIWILL123\");\n    assert(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
  , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\");\n    assert(candidate(\"_\", [\"Bb\"\
  , \"91245\"]) == \"_.Bb\");\n    assert(candidate(\"Sp\", [\"671235\", \"Bb\"])\
  \ == \"Sp.671235\");\n}\nvoid main(){}"
completions: ["{\n    int[] strength = new int[extensions.length];\n    int max_strength\
    \ = 0;\n    int max_index = 0;\n    foreach(i, ext; extensions)\n    {\n     \
    \   strength[i] = ext.count!(c => c.isUpper) - ext.count!(c => c.isLower);\n \
    \       if(strength[i] > max_strength)\n        {\n            max_strength =\
    \ strength[i];\n            max_index = i;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ extensions[max_index];\n}", "{\n    int max_strength = 0;\n    int\
    \ max_strength_index = 0;\n    foreach(i, extension; extensions)\n    {\n    \
    \    int strength = 0;\n        foreach(c; extension)\n        {\n           \
    \ if(c.isUpper)\n                strength++;\n            else\n             \
    \   strength--;\n        }\n        if(strength > max_strength)\n        {\n \
    \           max_strength = strength;\n            max_strength_index = i;\n  \
    \      }\n    }\n    return class_name ~ \".\" ~ extensions[max_strength_index];\n\
    }", "{\n    int max_strength = 0;\n    int max_index = 0;\n    for (int i = 0;\
    \ i < extensions.length; i++)\n    {\n        int strength = 0;\n        foreach\
    \ (char c; extensions[i])\n        {\n            if (c.isUpper)\n           \
    \     strength++;\n            else\n                strength--;\n        }\n\
    \        if (strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            max_index = i;\n        }\n    }\n    return class_name ~ \".\" ~\
    \ extensions[max_index];\n}", "{\n    double max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    double maxStrength\
    \ = 0;\n    string strongestExtension = \"\";\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                strength++;\n           \
    \ else if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > maxStrength)\n        {\n            maxStrength = strength;\n           \
    \ strongestExtension = extension;\n        }\n    }\n    return class_name ~ \"\
    .\" ~ strongestExtension;\n}", "{\n    int strongest = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(string extension; extensions)\n    {\n        int cap =\
    \ 0;\n        int sm = 0;\n        foreach(char c; extension)\n        {\n   \
    \         if (c.isUpper)\n                cap++;\n            else\n         \
    \       sm++;\n        }\n        int strength = cap - sm;\n        if (strength\
    \ > strongest)\n        {\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = -1;\n    string max_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   max_extension = extension;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ max_extension;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    float strongest_strength = 0;\n    foreach(extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(char c; extension)\n    \
    \    {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ max_strength)\n        {\n            max_strength = strength;\n           \
    \ strongest_extension = extension;\n        }\n    }\n    return class_name ~\
    \ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength = -1;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     double strength = 0;\n        foreach(c; extension)\n        {\n       \
    \     if(c.isUpper)\n                strength++;\n            else\n         \
    \       strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_strength =\
    \ 0;\n    foreach(string extension; extensions)\n    {\n        float strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        float extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength++;\n        \
    \    else\n                strength--;\n        }\n        if(abs(strength) >\
    \ max_strength)\n        {\n            max_strength = abs(strength);\n      \
    \      strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    int max_index\
    \ = 0;\n    foreach(i, extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            max_index = i;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ extensions[max_index];\n}", "{\n    string strongest_extension = \"\
    \";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n            {\n      \
    \          extension_strength++;\n            }\n            else if(isLower(c))\n\
    \            {\n                extension_strength--;\n            }\n       \
    \ }\n        if(extension_strength > strongest_extension_strength)\n        {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float strongest = 0;\n    string strongest_extension = \"\";\n   \
    \ foreach(extension; extensions)\n    {\n        float strength = 0;\n       \
    \ foreach(char c; extension)\n        {\n            if(c.isUpper)\n         \
    \       strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > strongest)\n        {\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int upper_case_count = 0;\n        int lower_case_count\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \            {\n                upper_case_count++;\n            }\n         \
    \   else if(c.isLower)\n            {\n                lower_case_count++;\n \
    \           }\n        }\n        int strength = upper_case_count - lower_case_count;\n\
    \        if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strength = new int[extensions.length];\n    for (int i = 0;\
    \ i < extensions.length; i++)\n    {\n        int cap = 0;\n        int sm = 0;\n\
    \        foreach (char c; extensions[i])\n        {\n            if (c >= 'A'\
    \ && c <= 'Z')\n                cap++;\n            else if (c >= 'a' && c <=\
    \ 'z')\n                sm++;\n        }\n        strength[i] = cap - sm;\n  \
    \  }\n    int max_strength = max(strength);\n    int index = 0;\n    for (int\
    \ i = 0; i < strength.length; i++)\n    {\n        if (strength[i] == max_strength)\n\
    \        {\n            index = i;\n            break;\n        }\n    }\n   \
    \ return class_name ~ \".\" ~ extensions[index];\n}", "{\n    auto strongest =\
    \ extensions[0];\n    auto strongest_strength = 0;\n    foreach(extension; extensions)\n\
    \    {\n        auto strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    string strongest_extension = \"\";\n    double strength = 0;\n    foreach(string\
    \ extension; extensions)\n    {\n        int upper_case_count = 0;\n        int\
    \ lower_case_count = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                upper_case_count++;\n            else if(c.isLower)\n\
    \                lower_case_count++;\n        }\n        double current_strength\
    \ = (double)upper_case_count - (double)lower_case_count;\n        if(current_strength\
    \ > strength)\n        {\n            strength = current_strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        int upper_letters = 0;\n        int lower_letters = 0;\n     \
    \   foreach(char letter; extension)\n        {\n            if(isUpper(letter))\n\
    \            {\n                upper_letters++;\n            }\n            else\n\
    \            {\n                lower_letters++;\n            }\n        }\n \
    \       double strength = (double)upper_letters - (double)lower_letters;\n   \
    \     if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(letter; extension)\n   \
    \     {\n            if(letter.isUpper)\n                strength += 1;\n    \
    \        else\n                strength -= 1;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = -1;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(letter; extension)\n\
    \        {\n            if(letter.isUpper)\n                strength++;\n    \
    \        else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest = \"\";\n    double strength = 0;\n    foreach(string\
    \ extension; extensions)\n    {\n        double cap = 0;\n        double sm =\
    \ 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        double current_strength = cap - sm;\n        if(current_strength > strength)\n\
    \        {\n            strength = current_strength;\n            strongest =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    double max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    auto strongest = extensions[0];\n\
    \    auto strongest_strength = 0;\n    foreach(extension; extensions)\n    {\n\
    \        auto strength = 0;\n        foreach(c; extension)\n        {\n      \
    \      if(c.isUpper)\n                strength++;\n            else\n        \
    \        strength--;\n        }\n        if(strength > strongest_strength)\n \
    \       {\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    double maxStrength = 0;\n    string strongestExtension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > maxStrength)\n        {\n            maxStrength = strength;\n           \
    \ strongestExtension = extension;\n        }\n    }\n    return class_name ~ \"\
    .\" ~ strongestExtension;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    int strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        int extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n            {\n      \
    \          extension_strength++;\n            }\n            else if(isLower(c))\n\
    \            {\n                extension_strength--;\n            }\n       \
    \ }\n        if(extension_strength > strongest_extension_strength)\n        {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    // Your code here\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(isUpper(c))\n      \
    \          strength++;\n            else if(isLower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ max_strength)\n        {\n            max_strength = strength;\n           \
    \ strongest_extension = extension;\n        }\n    }\n    return class_name ~\
    \ \".\" ~ strongest_extension;\n}", "{\n    int max = 0;\n    string max_extension\
    \ = \"\";\n    foreach(string extension; extensions)\n    {\n        int cap =\
    \ 0;\n        int sm = 0;\n        foreach(char c; extension)\n        {\n   \
    \         if(c.isUpper)\n                cap++;\n            else\n          \
    \      sm++;\n        }\n        int strength = cap - sm;\n        if(strength\
    \ > max)\n        {\n            max = strength;\n            max_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ max_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(letter;\
    \ extension)\n        {\n            if(letter.isUpper)\n            {\n     \
    \           strength++;\n            }\n            else if(letter.isLower)\n\
    \            {\n                strength--;\n            }\n        }\n      \
    \  if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    double strongest = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        double strength = 0;\n     \
    \   foreach(letter; extension)\n        {\n            if(letter.isUpper)\n  \
    \          {\n                strength++;\n            }\n            else\n \
    \           {\n                strength--;\n            }\n        }\n       \
    \ if(strength > strongest)\n        {\n            strongest = strength;\n   \
    \         strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max_strength = 0;\n    int index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c.isUpper)\n                cap++;\n\
    \            else\n                sm++;\n        }\n        strength[i] = cap\
    \ - sm;\n        if (strength[i] > max_strength)\n        {\n            max_strength\
    \ = strength[i];\n            index = i;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ extensions[index];\n}", "{\n    float max_strength = -1.0f;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     float strength = 0.0f;\n        foreach(c; extension)\n        {\n     \
    \       if(c.isUpper)\n                strength += 1.0f;\n            else\n \
    \               strength -= 1.0f;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = -1;\n    string strongest_extension = \"\";\n \
    \   foreach(extension; extensions)\n    {\n        int strength = 0;\n       \
    \ foreach(letter; extension)\n        {\n            if(letter.isUpper)\n    \
    \            strength++;\n            else\n                strength--;\n    \
    \    }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(letter; extension)\n      \
    \  {\n            if(isUpper(letter))\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(abs(strength) > max_strength)\n\
    \        {\n            max_strength = abs(strength);\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else\n                extension_strength--;\n\
    \        }\n        if(extension_strength > strongest_extension_strength)\n  \
    \      {\n            strongest_extension_strength = extension_strength;\n   \
    \         strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int cap = 0;\n        int sm = 0;\n        foreach(c; extension)\n     \
    \   {\n            if(c.isUpper)\n                cap++;\n            else\n \
    \               sm++;\n        }\n        int strength = cap - sm;\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = -1;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else if(isLower(c))\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    double strength = 0;\n    string strongest_extension = \"\";\n   \
    \ foreach(string extension; extensions)\n    {\n        double current_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \            {\n                current_strength++;\n            }\n         \
    \   else\n            {\n                current_strength--;\n            }\n\
    \        }\n        if(current_strength > strength)\n        {\n            strength\
    \ = current_strength;\n            strongest_extension = extension;\n        }\n\
    \    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string\
    \ strongest_extension = \"\";\n    double strongest_extension_strength = 0;\n\
    \    foreach(extension; extensions)\n    {\n        int upper_case_count = 0;\n\
    \        int lower_case_count = 0;\n        foreach(character; extension)\n  \
    \      {\n            if(character.isUpper)\n            {\n                upper_case_count++;\n\
    \            }\n            else\n            {\n                lower_case_count++;\n\
    \            }\n        }\n        double strength = (double)upper_case_count\
    \ - (double)lower_case_count;\n        if(strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = strength;\n           \
    \ strongest_extension = extension;\n        }\n    }\n    return class_name ~\
    \ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(extension; extensions)\n  \
    \  {\n        double strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(c;\
    \ extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(letter;\
    \ extension)\n        {\n            if(letter.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double strength = 0;\n    string\
    \ strongest = \"\";\n    foreach(string extension; extensions)\n    {\n      \
    \  double cap = 0;\n        double sm = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        double new_strength = cap - sm;\n \
    \       if(new_strength > strength)\n        {\n            strength = new_strength;\n\
    \            strongest = extension;\n        }\n    }\n    return class_name ~\
    \ \".\" ~ strongest;\n}", "{\n    string strongest_extension = \"\";\n    double\
    \ strongest_strength = 0;\n    foreach(string extension; extensions)\n    {\n\
    \        double strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    // Write your code here\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(ch; extension)\n        {\n            if(isUpper(ch))\n    \
    \            strength++;\n            else\n                strength--;\n    \
    \    }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = -1;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int upper_case_count = 0;\n        int lower_case_count = 0;\n\
    \        foreach(letter; extension)\n        {\n            if(letter.isUpper)\n\
    \            {\n                upper_case_count++;\n            }\n         \
    \   else\n            {\n                lower_case_count++;\n            }\n\
    \        }\n        int strength = upper_case_count - lower_case_count;\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int strength = 0;\n    string strongest = \"\";\n    foreach(string ext;\
    \ extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char\
    \ c; ext)\n        {\n            if(c.isUpper)\n                cap++;\n    \
    \        else if(c.isLower)\n                sm++;\n        }\n        int curr_strength\
    \ = cap - sm;\n        if(curr_strength > strength)\n        {\n            strength\
    \ = curr_strength;\n            strongest = ext;\n        }\n    }\n    return\
    \ class_name ~ \".\" ~ strongest;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                strength++;\n            else\n       \
    \         strength--;\n        }\n        if(strength > max_strength)\n      \
    \  {\n            max_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float strength = 0;\n    string strongest = \"\";\n    foreach(string\
    \ ext; extensions)\n    {\n        float cap = 0;\n        float sm = 0;\n   \
    \     foreach(char c; ext)\n        {\n            if(c.isUpper)\n           \
    \     cap++;\n            else\n                sm++;\n        }\n        float\
    \ temp = cap - sm;\n        if(temp > strength)\n        {\n            strength\
    \ = temp;\n            strongest = ext;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    float strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(char c; extension)\n    \
    \    {\n            if(isUpper(c))\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(letter;\
    \ extension)\n        {\n            if(letter.isUpper)\n                strength++;\n\
    \            else if(letter.isLower)\n                strength--;\n        }\n\
    \        if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(letter;\
    \ extension)\n        {\n            if(letter.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = extensions[0];\n\
    \    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(extension; extensions)\n  \
    \  {\n        double strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    int max_strength_index\
    \ = 0;\n    foreach(int i, string extension; extensions)\n    {\n        int strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > max_strength)\n        {\n   \
    \         max_strength = strength;\n            max_strength_index = i;\n    \
    \    }\n    }\n    return class_name ~ \".\" ~ extensions[max_strength_index];\n\
    }", "{\n    double strength = 0;\n    string strongest_extension = \"\";\n   \
    \ foreach(string extension; extensions)\n    {\n        double cap = 0;\n    \
    \    double sm = 0;\n        foreach(char c; extension)\n        {\n         \
    \   if(c >= 'A' && c <= 'Z')\n                cap++;\n            else if(c >=\
    \ 'a' && c <= 'z')\n                sm++;\n        }\n        if(cap - sm > strength)\n\
    \        {\n            strength = cap - sm;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int CAP = 0;\n        int SM\
    \ = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                CAP++;\n            else\n                SM++;\n        }\n\
    \        int strength = CAP - SM;\n        if(strength > max_strength)\n     \
    \   {\n            max_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    double maxStrength = 0;\n    string strongestExtension = \"\";\n \
    \   foreach(string extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > maxStrength)\n        {\n            maxStrength\
    \ = strength;\n            strongestExtension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongestExtension;\n}", "{\n    int[] strength\
    \ = new int[extensions.length];\n    int max_strength = 0;\n    int max_index\
    \ = 0;\n    foreach(i, ext; extensions)\n    {\n        int cap = 0;\n       \
    \ int sm = 0;\n        foreach(ch; ext)\n        {\n            if(ch.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        strength[i] = cap - sm;\n        if(strength[i] > max_strength)\n   \
    \     {\n            max_strength = strength[i];\n            max_index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[max_index];\n}",
  "{\n    double max = -1.0;\n    string strongest = \"\";\n    foreach(string ext;\
    \ extensions)\n    {\n        double strength = 0.0;\n        foreach(char c;\
    \ ext)\n        {\n            if(c.isUpper)\n                strength++;\n  \
    \          else if(c.isLower)\n                strength--;\n        }\n      \
    \  if(strength > max)\n        {\n            max = strength;\n            strongest\
    \ = ext;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}", "{\n\
    \    string strongest_extension = \"\";\n    int strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        int upper_case_count\
    \ = 0;\n        int lower_case_count = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n            {\n                upper_case_count++;\n\
    \            }\n            else if(isLower(c))\n            {\n             \
    \   lower_case_count++;\n            }\n        }\n        int extension_strength\
    \ = upper_case_count - lower_case_count;\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    real strength = 0;\n    string strongest\
    \ = \"\";\n    foreach(string ext; extensions)\n    {\n        real curr_strength\
    \ = 0;\n        foreach(char c; ext)\n        {\n            if(isUpper(c))\n\
    \                curr_strength++;\n            else\n                curr_strength--;\n\
    \        }\n        if(curr_strength > strength)\n        {\n            strength\
    \ = curr_strength;\n            strongest = ext;\n        }\n    }\n    return\
    \ class_name ~ \".\" ~ strongest;\n}", "{\n    int best_strength = 0;\n    string\
    \ best_extension = \"\";\n    foreach(extension; extensions)\n    {\n        int\
    \ strength = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > best_strength)\n        {\n            best_strength\
    \ = strength;\n            best_extension = extension;\n        }\n    }\n   \
    \ return class_name ~ \".\" ~ best_extension;\n}", "{\n    int max_strength =\
    \ 0;\n    string strongest_extension = \"\";\n    foreach(string extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strength = new int[extensions.length];\n    foreach(i, e; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(c; e)\n   \
    \     {\n            if(c.isUpper)\n                cap++;\n            else if(c.isLower)\n\
    \                sm++;\n        }\n        strength[i] = cap - sm;\n    }\n  \
    \  int max_strength = max(strength);\n    int index = 0;\n    foreach(i, s; strength)\n\
    \    {\n        if(s == max_strength)\n        {\n            index = i;\n   \
    \         break;\n        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n\
    }", "{\n    int[] strengths = extensions.map!(ext => ext.count!(c => c.isUpper)\
    \ - ext.count!(c => c.isLower));\n    int max_strength = strengths.max;\n    int\
    \ max_strength_index = strengths.indexOf(max_strength);\n    return class_name\
    \ ~ \".\" ~ extensions[max_strength_index];\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double cap = 0;\n        double sm = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                cap++;\n\
    \            else\n                sm++;\n        }\n        double temp_strength\
    \ = cap - sm;\n        if(temp_strength > strength)\n        {\n            strength\
    \ = temp_strength;\n            strongest_extension = extension;\n        }\n\
    \    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int\
    \ max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach(ch;\
    \ extension)\n        {\n            if(ch >= 'A' && ch <= 'Z')\n            \
    \    cap++;\n            else if(ch >= 'a' && ch <= 'z')\n                sm++;\n\
    \        }\n        int strength = cap - sm;\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength += 1;\n            else\n                strength -= 1;\n \
    \       }\n        if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = -1;\n    string strongest_extension = \"\";\n \
    \   foreach(string extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float max_strength = 0;\n    string strongest_extension = \"\";\n\
    \    foreach(extension; extensions)\n    {\n        float strength = 0;\n    \
    \    foreach(c; extension)\n        {\n            if(c.isUpper)\n           \
    \     strength++;\n            else\n                strength--;\n        }\n\
    \        if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max = 0;\n    int index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c >= 'A' && c <= 'Z')\n      \
    \          cap++;\n            else if (c >= 'a' && c <= 'z')\n              \
    \  sm++;\n        }\n        strength[i] = cap - sm;\n        if (strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(abs(strength)\
    \ > max_strength)\n        {\n            max_strength = abs(strength);\n    \
    \        strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    int strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(isUpper(c))\n                strength++;\n            else\
    \ if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    int strongest_extension_strength = 0;\n    foreach(extension; extensions)\n\
    \    {\n        int extension_strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else if(isLower(c))\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int best_strength = 0;\n    string best_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > best_strength)\n\
    \        {\n            best_strength = strength;\n            best_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ best_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else\n                extension_strength--;\n\
    \        }\n        if(extension_strength > strongest_extension_strength)\n  \
    \      {\n            strongest_extension_strength = extension_strength;\n   \
    \         strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    float strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(char c; extension)\n    \
    \    {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     double strength = 0;\n        foreach(char c; extension)\n        {\n  \
    \          if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strength = new int[extensions.length];\n    int max_strength\
    \ = 0;\n    int max_strength_index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c.isUpper)\n                cap++;\n\
    \            else if (c.isLower)\n                sm++;\n        }\n        strength[i]\
    \ = cap - sm;\n        if (strength[i] > max_strength)\n        {\n          \
    \  max_strength = strength[i];\n            max_strength_index = i;\n        }\n\
    \    }\n    return class_name ~ \".\" ~ extensions[max_strength_index];\n}", "{\n\
    \    int[] strength;\n    foreach(i, ext; extensions)\n    {\n        strength\
    \ ~= ext.count!(a => a.isUpper) - ext.count!(a => a.isLower);\n    }\n    int\
    \ max = strength.max;\n    int index = strength.indexOf(max);\n    return class_name\
    \ ~ \".\" ~ extensions[index];\n}", "{\n    auto strongest = extensions[0];\n\
    \    auto strongest_strength = 0;\n    foreach(extension; extensions)\n    {\n\
    \        auto strength = 0;\n        foreach(c; extension)\n        {\n      \
    \      if(c.isUpper)\n                strength++;\n            else\n        \
    \        strength--;\n        }\n        if(strength > strongest_strength)\n \
    \       {\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \            {\n                extension_strength += 1;\n            }\n    \
    \        else if(isLower(c))\n            {\n                extension_strength\
    \ -= 1;\n            }\n        }\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int strength = 0;\n    string strongest = \"\";\n    foreach(string\
    \ ext; extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n       \
    \ foreach(char c; ext)\n        {\n            if(c.isUpper)\n               \
    \ cap++;\n            else if(c.isLower)\n                sm++;\n        }\n \
    \       if(cap - sm > strength)\n        {\n            strength = cap - sm;\n\
    \            strongest = ext;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ strongest;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(extension; extensions)\n\
    \    {\n        double extension_strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else\n                extension_strength--;\n        }\n        if(extension_strength\
    \ > strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                strength++;\n           \
    \ else\n                strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isUpper(c))\n  \
    \              strength++;\n            else\n                strength--;\n  \
    \      }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    float maxStrength\
    \ = 0;\n    string strongestExtension = \"\";\n    foreach(string extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(char c; extension)\n    \
    \    {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(strength > maxStrength)\n\
    \        {\n            maxStrength = strength;\n            strongestExtension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongestExtension;\n\
    }", "{\n    int max_strength = 0;\n    string max_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   max_extension = extension;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ max_extension;\n}", "{\n    string strongest_extension = \"\";\n    double\
    \ strongest_extension_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\
    \ if(c.isLower)\n                sm++;\n        }\n        double strength = cap\
    \ - sm;\n        if(strength > strongest_extension_strength)\n        {\n    \
    \        strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float maxStrength = 0;\n    string strongestExtension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        float strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > maxStrength)\n        {\n            maxStrength\
    \ = strength;\n            strongestExtension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongestExtension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(abs(strength) > max_strength)\n\
    \        {\n            max_strength = abs(strength);\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int strongest = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > strongest)\n\
    \        {\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        int cap = 0;\n\
    \        int sm = 0;\n        foreach(char c; extension)\n        {\n        \
    \    if(c.isUpper)\n                cap++;\n            else\n               \
    \ sm++;\n        }\n        double strength = cap - sm;\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n            {\n      \
    \          extension_strength++;\n            }\n            else if(isLower(c))\n\
    \            {\n                extension_strength--;\n            }\n       \
    \ }\n        if(extension_strength > strongest_extension_strength)\n        {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int maxStrength = 0;\n    string strongestExtension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > maxStrength)\n        {\n            maxStrength = strength;\n\
    \            strongestExtension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongestExtension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else\n \
    \               strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength += 1;\n            else\n                extension_strength\
    \ -= 1;\n        }\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isUpper(c))\n  \
    \              strength++;\n            else\n                strength--;\n  \
    \      }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength\
    \ = -1.0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        double strength = 0.0;\n        foreach(char c; extension)\n \
    \       {\n            if(c.isUpper)\n                strength += 1.0;\n     \
    \       else if(c.isLower)\n                strength -= 1.0;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength = -1;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     double strength = 0;\n        foreach(c; extension)\n        {\n       \
    \     if(c.isUpper)\n                strength++;\n            else\n         \
    \       strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    auto strongest = extensions[0];\n    auto strongest_strength = 0;\n    foreach(extension;\
    \ extensions)\n    {\n        auto strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    int max_strength = int.min;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength += 1;\n         \
    \   else\n                strength -= 1;\n        }\n        if(abs(strength)\
    \ > abs(strongest_strength))\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double strongest = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        double strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(abs(strength) > abs(strongest))\n\
    \        {\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(c;\
    \ extension)\n        {\n            if (isUpper(c))\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if (strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(abs(strength) > abs(strongest_strength))\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strength = new int[extensions.length];\n    int max = 0;\n \
    \   int index = 0;\n    foreach(i, ext; extensions)\n    {\n        int upper\
    \ = 0;\n        int lower = 0;\n        foreach(c; ext)\n        {\n         \
    \   if(isUpper(c))\n                upper++;\n            else\n             \
    \   lower++;\n        }\n        strength[i] = upper - lower;\n        if(strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c >= 'A' && c <= 'Z')\n           \
    \ {\n                extension_strength++;\n            }\n            else if(c\
    \ >= 'a' && c <= 'z')\n            {\n                extension_strength--;\n\
    \            }\n        }\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        int upper_case_letters\
    \ = 0;\n        int lower_case_letters = 0;\n        foreach(char letter; extension)\n\
    \        {\n            if(isUpper(letter))\n            {\n                upper_case_letters++;\n\
    \            }\n            else\n            {\n                lower_case_letters++;\n\
    \            }\n        }\n        double strength = (double)upper_case_letters\
    \ - (double)lower_case_letters;\n        if(strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = strength;\n           \
    \ strongest_extension = extension;\n        }\n    }\n    return class_name ~\
    \ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int caps = 0;\n     \
    \   int smalls = 0;\n        foreach(char c; extension)\n        {\n         \
    \   if(c.isUpper)\n                caps++;\n            else\n               \
    \ smalls++;\n        }\n        int strength = caps - smalls;\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if (c.isUpper)\n                strength++;\n            else if (c.isLower)\n\
    \                strength--;\n        }\n        if (strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strength = new int[extensions.length];\n    int max_strength\
    \ = 0;\n    int max_index = 0;\n    foreach(i, ext; extensions)\n    {\n     \
    \   int upper = 0;\n        int lower = 0;\n        foreach(j, ch; ext)\n    \
    \    {\n            if(ch.isUpper)\n                upper++;\n            else\n\
    \                lower++;\n        }\n        strength[i] = upper - lower;\n \
    \       if(strength[i] > max_strength)\n        {\n            max_strength =\
    \ strength[i];\n            max_index = i;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ extensions[max_index];\n}", "{\n    int max = 0;\n    string max_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(abs(strength) > max)\n        {\n            max = abs(strength);\n\
    \            max_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ max_extension;\n}", "{\n    double max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        int strength = cap - sm;\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  double max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength += 1;\n     \
    \       else if(isLower(c))\n                strength -= 1;\n        }\n     \
    \   if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double maxStrength = 0;\n    string\
    \ strongestExtension = \"\";\n    foreach(string extension; extensions)\n    {\n\
    \        double strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > maxStrength)\n\
    \        {\n            maxStrength = strength;\n            strongestExtension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongestExtension;\n\
    }", "{\n    int max_strength = -1;\n    string strongest_extension = \"\";\n \
    \   foreach(string extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else\n                strength--;\n  \
    \      }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        double strength = cap - sm;\n     \
    \   if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strengths = extensions.map!(ext => ext.count!(c => c.isUpper)\
    \ - ext.count!(c => c.isLower));\n    int max_strength = strengths.max;\n    int\
    \ max_index = strengths.indexOf(max_strength);\n    return class_name ~ \".\"\
    \ ~ extensions[max_index];\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(string extension; extensions)\n    {\n        int strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > max_strength)\n        {\n   \
    \         max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  string strongest_extension = \"\";\n    float strongest_extension_strength\
    \ = 0;\n    float extension_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        extension_strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n            {\n                extension_strength++;\n\
    \            }\n            else\n            {\n                extension_strength--;\n\
    \            }\n        }\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = -1;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}\n/*\nYou will be given\
    \ a string of numbers. The string will be separated by spaces.\n    You should\
    \ return the sum of the numbers.\n    Example:\n    >>> Sum_Numbers(\"1 2 3\"\
    )\n    6\n*/", "{\n    int max_strength = 0;\n    string strongest_extension =\
    \ \"\";\n    foreach(string extension; extensions)\n    {\n        int strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > max_strength)\n        {\n   \
    \         max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int[] strengths = extensions.map!(ext => ext.count!(c => c.isUpper) - ext.count!(c\
    \ => c.isLower));\n    int max_strength = strengths.max;\n    int max_strength_index\
    \ = strengths.indexOf(max_strength);\n    return class_name ~ \".\" ~ extensions[max_strength_index];\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else\n                extension_strength--;\n\
    \        }\n        if(extension_strength > strongest_extension_strength)\n  \
    \      {\n            strongest_extension_strength = extension_strength;\n   \
    \         strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float max_strength = 0;\n    string strongest_extension = \"\";\n\
    \    foreach(extension; extensions)\n    {\n        float strength = 0;\n    \
    \    foreach(char c; extension)\n        {\n            if(c.isUpper)\n      \
    \          strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    float strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        float strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength += 1;\n     \
    \       else\n                strength -= 1;\n        }\n        if(strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength += 1;\n      \
    \      else\n                strength -= 1;\n        }\n        if(abs(strength)\
    \ > max_strength)\n        {\n            max_strength = abs(strength);\n    \
    \        strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    double max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     double strength = 0;\n        foreach(char c; extension)\n        {\n  \
    \          if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(c;\
    \ extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max = 0;\n    string strongest\
    \ = \"\";\n    foreach(string ext; extensions)\n    {\n        int cap = 0;\n\
    \        int sm = 0;\n        foreach(char c; ext)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        int strength = cap - sm;\n        if(strength > max)\n        {\n   \
    \         max = strength;\n            strongest = ext;\n        }\n    }\n  \
    \  return class_name ~ \".\" ~ strongest;\n}", "{\n    int max_strength = 0;\n\
    \    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

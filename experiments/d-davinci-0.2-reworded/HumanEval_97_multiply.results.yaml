name: HumanEval_97_multiply
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprs93nqng.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmprs93nqng.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmprs93nqng.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3d70e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptqyrobmb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptqyrobmb.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptqyrobmb.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6d9fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph1qcta4y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmph1qcta4y.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmph1qcta4y.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9aa97554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkvup_fbx.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkvup_fbx.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkvup_fbx.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x42f15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptvxqbw65.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptvxqbw65.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptvxqbw65.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x4c362554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp707_0j_8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp707_0j_8.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp707_0j_8.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7da98554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp84hmqqsk.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp84hmqqsk.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp84hmqqsk.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7bf3a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr4vcffk6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpr4vcffk6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpr4vcffk6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7c841554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8qyge_as.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp8qyge_as.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp8qyge_as.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x77c28554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk74n8zs0.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk74n8zs0.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk74n8zs0.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5e974554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5dcezmzu.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp5dcezmzu.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp5dcezmzu.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x88f92554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmns3wjmk.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmns3wjmk.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpmns3wjmk.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb733a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnqtenjo4.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpnqtenjo4.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpnqtenjo4.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x1f482554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm_hn20qi.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpm_hn20qi.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpm_hn20qi.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x72578554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmxwr2jgd.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmxwr2jgd.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpmxwr2jgd.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xea2e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdn2_oh3w.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpdn2_oh3w.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpdn2_oh3w.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xbd2aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmlkt44fp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmlkt44fp.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpmlkt44fp.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xbf652554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpza6bn087.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpza6bn087.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpza6bn087.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa8363554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4tm9652q.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp4tm9652q.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp4tm9652q.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa5ba2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdkwvl0va.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpdkwvl0va.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpdkwvl0va.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x55147554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp36cysybu.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp36cysybu.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp36cysybu.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd41b0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvqfisnpc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpvqfisnpc.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpvqfisnpc.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5fd0b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ukgc53y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp3ukgc53y.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp3ukgc53y.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9c510554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv6kl41v6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpv6kl41v6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpv6kl41v6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc7978554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp36vrjw68.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp36vrjw68.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp36vrjw68.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7b467554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a_unit = a % 10;\n    long b_unit = b % 10;\n    return\
    \ a_unit * b_unit;\n}\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsdub0oax.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpsdub0oax.__unittest_L24_C1()\
    \ [0x427ab8]\\n??:? void tmpsdub0oax.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x88aac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsnni_ulj.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpsnni_ulj.__unittest_L24_C1()\
    \ [0x427ab8]\\n??:? void tmpsnni_ulj.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x780ec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpry1es_tb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpry1es_tb.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpry1es_tb.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x204dc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppe9ay5ab.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmppe9ay5ab.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmppe9ay5ab.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd72a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcz65ck1q.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpcz65ck1q.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpcz65ck1q.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xcedcd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwpky8met.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpwpky8met.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpwpky8met.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x98091554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp81c_cy0k.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp81c_cy0k.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp81c_cy0k.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xed7cf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph3km6oqe.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmph3km6oqe.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmph3km6oqe.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb1fda554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp2qeerec.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpp2qeerec.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpp2qeerec.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2c60f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjrn2ppmd.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpjrn2ppmd.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpjrn2ppmd.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc65ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn6zsoljx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpn6zsoljx.__unittest_L22_C1()\
    \ [0x427a45]\\n??:? void tmpn6zsoljx.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x69347554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg_zhrobe.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpg_zhrobe.__unittest_L22_C1()\
    \ [0x427a45]\\n??:? void tmpg_zhrobe.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x3d773554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj52t0gl0.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpj52t0gl0.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpj52t0gl0.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x8ab8e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi8f4vz6c.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpi8f4vz6c.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpi8f4vz6c.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9a312554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10) * (b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8bgwn_g9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp8bgwn_g9.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp8bgwn_g9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa4f35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkkm0jiqp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkkm0jiqp.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkkm0jiqp.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x567c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7j2iqv8t.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmp7j2iqv8t.__unittest_L24_C1()\
    \ [0x427ab8]\\n??:? void tmp7j2iqv8t.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xb4be6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkefp6sas.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkefp6sas.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkefp6sas.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x469c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd7lxnvwh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpd7lxnvwh.__unittest_L22_C1()\
    \ [0x427a45]\\n??:? void tmpd7lxnvwh.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xeb643554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpueoo38_p.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpueoo38_p.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpueoo38_p.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6e098554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqg2l7oxo.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpqg2l7oxo.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpqg2l7oxo.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x40dac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt22meq0x.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpt22meq0x.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpt22meq0x.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x49b22554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkywock2p.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkywock2p.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkywock2p.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x4acdb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (abs(a) % 10) * (abs(b) % 10);\n}\nunittest\n{\n   \
    \ alias candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n \
    \   assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L, 1851L) ==\
    \ 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L, 67L)\
    \ == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo9kv4196.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpo9kv4196.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpo9kv4196.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xde891554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmcw3ut4r.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmcw3ut4r.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpmcw3ut4r.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x89338554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprwlls66u.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmprwlls66u.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmprwlls66u.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3174b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0ae31aph.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp0ae31aph.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp0ae31aph.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x39379554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp48hfbzxj.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp48hfbzxj.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp48hfbzxj.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xfea1b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgn0bamop.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpgn0bamop.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpgn0bamop.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5f936554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5_p_t5t5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp5_p_t5t5.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp5_p_t5t5.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd95ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk3too3pf.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk3too3pf.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk3too3pf.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x460ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgdxwn14x.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpgdxwn14x.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpgdxwn14x.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xaf2bf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ij1d0tz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp3ij1d0tz.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp3ij1d0tz.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2440554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkq1gk8_z.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkq1gk8_z.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkq1gk8_z.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xce6d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp43yyq0ir.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp43yyq0ir.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp43yyq0ir.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x72f9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd9pb31vr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpd9pb31vr.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpd9pb31vr.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x318ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbc6hvrya.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpbc6hvrya.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpbc6hvrya.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2d518554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpge0h1cbm.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpge0h1cbm.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpge0h1cbm.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x1f5b8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk35bfo_i.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk35bfo_i.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk35bfo_i.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6c2c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1ak_knd5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp1ak_knd5.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp1ak_knd5.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x46a84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4ohely11.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp4ohely11.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp4ohely11.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x49553554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    auto aa = a.abs;\n    auto bb = b.abs;\n    return (aa % 10)\
    \ * (bb % 10);\n}\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjflzufuh.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpjflzufuh.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpjflzufuh.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xf47af554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4o8msu73.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp4o8msu73.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp4o8msu73.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xf7f2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps0m_m2nw.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmps0m_m2nw.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmps0m_m2nw.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2cd4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi4mq384n.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpi4mq384n.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpi4mq384n.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x38177554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm27l2ntz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpm27l2ntz.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpm27l2ntz.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xef4cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphzkzwawn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphzkzwawn.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmphzkzwawn.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb6604554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmiw002uq.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpmiw002uq.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpmiw002uq.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xef59f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_eruzzwg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp_eruzzwg.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp_eruzzwg.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa088d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp44a6kaqw.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp44a6kaqw.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp44a6kaqw.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x79196554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppt5h0vxn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmppt5h0vxn.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmppt5h0vxn.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5adea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjs6vmlp2.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpjs6vmlp2.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpjs6vmlp2.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x74a74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcq5nd9kl.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpcq5nd9kl.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpcq5nd9kl.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xee54f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_xnlkilv.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp_xnlkilv.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp_xnlkilv.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x10e8d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp73wwvtmv.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp73wwvtmv.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp73wwvtmv.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x84c9c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb1qgl6cn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpb1qgl6cn.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpb1qgl6cn.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xf2006554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqpsc3c2i.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpqpsc3c2i.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpqpsc3c2i.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xdb145554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6_4hgaax.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6_4hgaax.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp6_4hgaax.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd3434554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps9g50ii4.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmps9g50ii4.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmps9g50ii4.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x145de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplxal3l0w.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmplxal3l0w.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmplxal3l0w.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe3d5f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb7u_7bqm.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpb7u_7bqm.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpb7u_7bqm.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xbb1f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7tha6s9y.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp7tha6s9y.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp7tha6s9y.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3cb99554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1g5898fh.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp1g5898fh.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp1g5898fh.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd6bcd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeulh9ikf.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpeulh9ikf.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpeulh9ikf.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x8d82f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptxc5zaqt.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptxc5zaqt.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptxc5zaqt.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x82999554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1pl8l433.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp1pl8l433.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp1pl8l433.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x48c82554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg9bpoj7v.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpg9bpoj7v.__unittest_L24_C1()\
    \ [0x427ab8]\\n??:? void tmpg9bpoj7v.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xdd31c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    auto a_str = to!string(a);\n    auto b_str = to!string(b);\n\
    \    return to!long(a_str[$-1]) * to!long(b_str[$-1]);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppqlwtc4w.d(20): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmppqlwtc4w.d(21): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmppqlwtc4w.d(22):\
    \ Error: template instance `to!long` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmppqlwtc4w.d(22): Error: template instance `to!long` template `to`\
    \ is not defined, did you mean No?\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmppqlwtc4w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfm6lokrb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpfm6lokrb.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpfm6lokrb.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc82d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr6ihrmd8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpr6ihrmd8.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpr6ihrmd8.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc94a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9b4wt1mg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp9b4wt1mg.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp9b4wt1mg.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc48b5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptx6s7u_j.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptx6s7u_j.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptx6s7u_j.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2a9a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8m7o4j2c.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp8m7o4j2c.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp8m7o4j2c.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xadde8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkn32svj9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpkn32svj9.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpkn32svj9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x46233554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb2_4vmo_.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpb2_4vmo_.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpb2_4vmo_.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x58751554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk5vmtdfi.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk5vmtdfi.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk5vmtdfi.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x70f8c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw8jldnyc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpw8jldnyc.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpw8jldnyc.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x48747554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpftzved6_.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpftzved6_.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpftzved6_.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb6224554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4tocpclx.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp4tocpclx.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp4tocpclx.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb3d48554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpumh0i1hs.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpumh0i1hs.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpumh0i1hs.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x96c63554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppxnjafgc.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmppxnjafgc.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmppxnjafgc.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6fa36554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpicxf_4i6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpicxf_4i6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpicxf_4i6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3c369554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc4ay7ar5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpc4ay7ar5.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpc4ay7ar5.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5f39f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps_mrqpdd.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmps_mrqpdd.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmps_mrqpdd.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa8ba9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6usru2at.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6usru2at.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp6usru2at.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x727ef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk_c1ks8s.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk_c1ks8s.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk_c1ks8s.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x361c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphvhaywp8.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphvhaywp8.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmphvhaywp8.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa1713554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_s2a707j.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp_s2a707j.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp_s2a707j.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xeb737554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx9o_zke6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpx9o_zke6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpx9o_zke6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe7d0d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_9gba7cj.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp_9gba7cj.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp_9gba7cj.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5cc63554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj6b6jwmq.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpj6b6jwmq.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpj6b6jwmq.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x3c8b7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp1fo3grf.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpp1fo3grf.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpp1fo3grf.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x44122554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcm40u_cl.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpcm40u_cl.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpcm40u_cl.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x60933554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgbroxgw7.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpgbroxgw7.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpgbroxgw7.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa4d1a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzulg04co.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpzulg04co.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpzulg04co.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2e73c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4r0p8jqa.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp4r0p8jqa.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp4r0p8jqa.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x540b4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9ceyi11v.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp9ceyi11v.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp9ceyi11v.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xf5bc1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpto9qcsht.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpto9qcsht.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpto9qcsht.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x66c0c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7cc5wx1z.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp7cc5wx1z.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp7cc5wx1z.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb73aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3gihze_e.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp3gihze_e.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp3gihze_e.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x82879554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdo8vihl9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpdo8vihl9.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpdo8vihl9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6db14554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpskhv4gdr.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpskhv4gdr.__unittest_L22_C1()\
    \ [0x427a45]\\n??:? void tmpskhv4gdr.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x5f0e2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpburxdn4e.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpburxdn4e.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpburxdn4e.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x4c3ef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcf4rw4it.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmpcf4rw4it.__unittest_L24_C1()\
    \ [0x427ab8]\\n??:? void tmpcf4rw4it.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0xc012a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6ly09yvi.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6ly09yvi.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp6ly09yvi.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe3068554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptpkc_esq.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptpkc_esq.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptpkc_esq.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7b64a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk2hxnx_p.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk2hxnx_p.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk2hxnx_p.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x72311554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl9yue2_e.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpl9yue2_e.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpl9yue2_e.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x479c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpem26m3cr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpem26m3cr.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpem26m3cr.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe6cd4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcsrc2q22.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpcsrc2q22.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpcsrc2q22.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x74084554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp50upbgu4.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp50upbgu4.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp50upbgu4.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x259ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpal6an9ms.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpal6an9ms.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpal6an9ms.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xb753c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptnb01xwp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmptnb01xwp.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmptnb01xwp.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7c7fc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfk7ucvb1.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpfk7ucvb1.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpfk7ucvb1.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x5d4e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7ya_hpln.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp7ya_hpln.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp7ya_hpln.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x38d46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc5mow_18.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpc5mow_18.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpc5mow_18.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x890c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpflsu0489.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpflsu0489.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpflsu0489.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x4eddb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7e1f2vtp.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp7e1f2vtp.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp7e1f2vtp.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xfef60554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2fh98ga6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp2fh98ga6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp2fh98ga6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe82b5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphmbhknxn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphmbhknxn.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmphmbhknxn.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x76c20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppl9_pfog.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmppl9_pfog.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmppl9_pfog.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x59be554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5rn3r428.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp5rn3r428.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp5rn3r428.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2c936554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp4kmc3k4.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpp4kmc3k4.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpp4kmc3k4.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xdf353554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp99das317.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp99das317.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp99das317.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x83fa2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpovotvnu6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpovotvnu6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpovotvnu6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6690b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfhor8bdz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpfhor8bdz.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpfhor8bdz.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x43b2c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsvj1p3jb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpsvj1p3jb.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpsvj1p3jb.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x2c596554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg2i9r9lr.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpg2i9r9lr.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpg2i9r9lr.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x664cc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd8lq4iij.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpd8lq4iij.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpd8lq4iij.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x528c0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk0g51n3d.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpk0g51n3d.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpk0g51n3d.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x1246b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfkeqsr63.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpfkeqsr63.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpfkeqsr63.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x66c75554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsdzxt99t.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpsdzxt99t.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpsdzxt99t.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x90e29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg7chfgd5.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpg7chfgd5.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpg7chfgd5.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x8c672554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6_38jrl9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6_38jrl9.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp6_38jrl9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9d49d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp11zach36.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp11zach36.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp11zach36.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x52cb1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpha3caxdh.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpha3caxdh.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpha3caxdh.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xc976e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpohz783lb.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpohz783lb.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpohz783lb.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x250cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx1o_su82.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpx1o_su82.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpx1o_su82.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xf5682554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxw05ek3o.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpxw05ek3o.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpxw05ek3o.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa0fb1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxr96m0m1.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpxr96m0m1.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpxr96m0m1.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xa97d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn3lhhefq.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpn3lhhefq.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpn3lhhefq.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xe1df2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpugi0e0m9.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpugi0e0m9.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpugi0e0m9.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x9d40d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpizwdhmbw.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpizwdhmbw.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpizwdhmbw.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x1db30554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphr3lmbvh.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmphr3lmbvh.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmphr3lmbvh.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x7db2a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10) * (b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc7kgfds6.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpc7kgfds6.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpc7kgfds6.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x63534554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvr7ym855.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpvr7ym855.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpvr7ym855.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xbfad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpny8d8ill.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpny8d8ill.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpny8d8ill.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x809a2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwja84t2a.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpwja84t2a.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpwja84t2a.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x24d55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy431jvco.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpy431jvco.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpy431jvco.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x82ebe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv2_nhi2w.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpv2_nhi2w.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpv2_nhi2w.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x73b6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6l08h8jf.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp6l08h8jf.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp6l08h8jf.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x6944c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptbj3eb4e.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ddd]\\n??:? void tmptbj3eb4e.__unittest_L22_C1()\
    \ [0x427a45]\\n??:? void tmptbj3eb4e.__modtest() [0x427b5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a996]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a96d]\\n??:? runModuleUnitTests [0x42b8d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42822c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b3]\\n??:? _d_run_main [0x42811e]\\n??:? main [0x427b6f]\\\
    n??:? __libc_start_main [0x81569554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjphodvmo.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpjphodvmo.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpjphodvmo.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x46ecf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr3h8w1x3.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpr3h8w1x3.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpr3h8w1x3.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x13a8d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp54eud9kn.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmp54eud9kn.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmp54eud9kn.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x30cfb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj2whc3az.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpj2whc3az.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpj2whc3az.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xd5962554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr33getzi.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpr33getzi.__unittest_L22_C1()\
    \ [0x427ac4]\\n??:? void tmpr33getzi.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0x139e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

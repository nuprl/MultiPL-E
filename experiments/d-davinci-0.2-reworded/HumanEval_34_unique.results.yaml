name: HumanEval_34_unique
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9y8h91ea.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp9y8h91ea.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp9y8h91ea.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9y8h91ea.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8xxmorop.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp8xxmorop.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp8xxmorop.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xxmorop.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp60ydguas.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp60ydguas.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyb9xul55.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpyb9xul55.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpyb9xul55.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyb9xul55.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long i; l)\n    {\n \
    \       if(i in result)\n            continue;\n        result[count] = i;\n \
    \       count++;\n    }\n    return result[0..count];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppq8k0jg3.d(15): Error: incompatible types for `(i) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppq8k0jg3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int i = 1;\n    foreach(long\
    \ e; l)\n    {\n        if(e != ret[i-1])\n        {\n            ret[i] = e;\n\
    \            i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps5vk6dba.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428375]\\n??:? void tmps5vk6dba.__unittest_L24_C1()\
    \ [0x428048]\\n??:? void tmps5vk6dba.__modtest() [0x4280f8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c453]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430571]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a20]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304fd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2bd]\\n??:? runModuleUnitTests [0x42c229]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428838]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287bf]\\n??:? _d_run_main [0x42872a]\\n??:? main [0x42810b]\\\
    n??:? __libc_start_main [0x178b2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    foreach(i; l)\n    {\n        if(j\
    \ == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n         \
    \   j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprzbkwsyx.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmprzbkwsyx.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmprzbkwsyx.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xbb37f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long i; l)\n    {\n \
    \       if(count == 0 || result[count-1] != i)\n        {\n            result[count]\
    \ = i;\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphl9y5w7q.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmphl9y5w7q.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmphl9y5w7q.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x7f149554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long x; l)\n    {\n \
    \       if(!ret.canFind(x))\n        {\n            ret[count] = x;\n        \
    \    count++;\n        }\n    }\n    return ret[0..count];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx8pgrhwh.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx8pgrhwh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    ret.length = l.length;\n    ret.ptr = l.ptr;\n    ret.sort();\n    ret =\
    \ ret.dup;\n    ret.length = ret.length - 1;\n    foreach(i, v; ret)\n    {\n\
    \        if(v == ret[i+1])\n        {\n            ret.remove(i);\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpezdxlpk2.d(13): Error: `ret.ptr` is not an lvalue and cannot\
    \ be modified\\n/tmp/tmpezdxlpk2.d(14): Error: no property `sort` for type `long[]`\\\
    n/tmp/tmpezdxlpk2.d(21): Error: no property `remove` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezdxlpk2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_len = 0;\n    foreach(e; l)\n    {\n    \
    \    if(ret_len == 0 || ret[ret_len-1] != e)\n        {\n            ret[ret_len]\
    \ = e;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3f32dcga.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp3f32dcga.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp3f32dcga.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xda1c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret_sorted = new long[l.length];\n    long[]\
    \ ret_unique = new long[l.length];\n    long[] ret_unique_sorted = new long[l.length];\n\
    \    long[] ret_unique_sorted_final = new long[l.length];\n    long[] ret_final\
    \ = new long[l.length];\n    long[] ret_final_sorted = new long[l.length];\n \
    \   long[] ret_final_sorted_final = new long[l.length];\n    long[] ret_final_sorted_final_final\
    \ = new long[l.length];\n    long[] ret_final_sorted_final_final_final = new long[l.length];\n\
    \    long[] ret_final_sorted_final_final_final_final = new long[l.length];\n \
    \   long[] ret_final_sorted_final_final_final_final_final = new long[l.length];\n\
    \    long[] ret_final_sorted_final_final_final_final_final_final = new long[l.length];\n\
    \    long[] ret_final_sorted_final_final_final_final_final_final_final = new long[l.length];\n\
    \    long[] ret_final_sorted_final_final_final_final_final_final_final_final =\
    \ new long[l.length];\n    long[] ret_final_sorted_final_final_final_final_final_final_final_final_final\
    \ = new long[l.length];\n    long[] ret_final_sorted_final_final_final_final_final_final_final_final_final_final\
    \ = new long[l.length];\n    long[] ret_final_sorted_final_final_final_final_final_final_final_final_final_final_final\
    \ = new long[l.length];\n    long[] ret_final_sorted_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = new long[l.length];\n    long[] ret_final_sorted_final_final_final_final_final_final_\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp046w_204.d(31): Error: semicolon expected, not `unittest`\\n/tmp/tmp046w_204.d(31):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp046w_204.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe_p53ye3.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpe_p53ye3.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpe_p53ye3.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_p53ye3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    long ret_len = 1;\n    foreach(long\
    \ i; l)\n    {\n        if (i != ret[ret_len-1])\n        {\n            ret[ret_len]\
    \ = i;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfzo0fz19.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42837d]\\n??:? void tmpfzo0fz19.__unittest_L24_C1()\
    \ [0x42804c]\\n??:? void tmpfzo0fz19.__modtest() [0x4280fc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430579]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430505]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c5]\\n??:? runModuleUnitTests [0x42c231]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428840]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c7]\\n??:? _d_run_main [0x428732]\\n??:? main [0x42810f]\\\
    n??:? __libc_start_main [0xa294f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(e in ret)\n            continue;\n        ret[i++] = e;\n    }\n    return\
    \ ret[0..i];\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_3evw0t3.d(15): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3evw0t3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t j = 0;\n    foreach (i; l)\n    {\n      \
    \  if (j == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n  \
    \          j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt3vavzdn.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpt3vavzdn.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpt3vavzdn.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x9c0fe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    foreach(e; l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpym6z3a2m.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpym6z3a2m.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto u = l.dup;\n\
    \    u.sort;\n    u.uniq;\n    return u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc2vfrmqw.d(12): Error: no property `sort` for type `long[]`\\\
    n/tmp/tmpc2vfrmqw.d(13): Error: no property `uniq` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2vfrmqw.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int i = 1;\n    foreach(long\
    \ x; l)\n    {\n        if (x != ret[i-1])\n        {\n            ret[i] = x;\n\
    \            i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq5iuvab5.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428375]\\n??:? void tmpq5iuvab5.__unittest_L24_C1()\
    \ [0x428048]\\n??:? void tmpq5iuvab5.__modtest() [0x4280f8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c453]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430571]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a20]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304fd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2bd]\\n??:? runModuleUnitTests [0x42c229]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428838]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287bf]\\n??:? _d_run_main [0x42872a]\\n??:? main [0x42810b]\\\
    n??:? __libc_start_main [0x7048a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long i; l)\n    {\n \
    \       if(!result.canFind(i))\n        {\n            result[count] = i;\n  \
    \          count++;\n        }\n    }\n    return result[0..count];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7zo4uv15.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zo4uv15.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    int i;\n    int j;\n\
    \    int k;\n    int n;\n    int m;\n    int p;\n    int q;\n    int r;\n    int\
    \ s;\n    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n\
    \    int z;\n    int aa;\n    int ab;\n    int ac;\n    int ad;\n    int ae;\n\
    \    int af;\n    int ag;\n    int ah;\n    int ai;\n    int aj;\n    int ak;\n\
    \    int al;\n    int am;\n    int an;\n    int ao;\n    int ap;\n    int aq;\n\
    \    int ar;\n    int as;\n    int at;\n    int au;\n    int av;\n    int aw;\n\
    \    int ax;\n    int ay;\n    int az;\n    int ba;\n    int bb;\n    int bc;\n\
    \    int bd;\n    int be;\n    int bf;\n    int bg;\n    int bh;\n    int bi;\n\
    \    int bj;\n    int bk;\n    int bl;\n    int bm;\n    int bn;\n    int bo;\n\
    \    int bp;\n    int bq;\n    int br;\n    int bs;\n    int bt;\n    int bu;\n\
    \    int bv;\n    int bw;\n    int bx;\n    int by;\n    int bz;\n    int ca;\n\
    \    int cb;\n    int cc;\n    int cd;\n    int ce;\n    int cf;\n    int cg;\n\
    \    int ch;\n    int ci;\n    int cj;\n    int ck;\n    int cl;\n    int cm;\n\
    \    int cn;\n    int co;\n    int cp;\n    int cq;\n    int cr;\n    int cs;\n\
    \    int ct;\n    int cu;\n    int cv;\n   \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppmscrrzq.d(106): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppmscrrzq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp949xek9e.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmp949xek9e.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmp949xek9e.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp949xek9e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(e\
    \ !in res)\n        {\n            res[i] = e;\n            i++;\n        }\n\
    \    }\n    return res[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6n4nmdls.d(15): Error: incompatible types for `(e) in (res)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6n4nmdls.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.dup.sort.uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv9svxynq.d(11): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv9svxynq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(x; l)\n    {\n        if(!x in result)\n       \
    \ {\n            result ~= x;\n        }\n    }\n    return result.sort();\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnqir4rae.d(14): Error: incompatible types for `(!x) in (result)`:\
    \ `bool` and `long[]`\\n/tmp/tmpnqir4rae.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnqir4rae.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ys3j_x2.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ys3j_x2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int j = 0;\n    foreach(i; l)\n    {\n        if(i\
    \ in res)\n            continue;\n        res[j] = i;\n        j++;\n    }\n \
    \   return res[0..j];\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpet2gmo2f.d(15): Error: incompatible types for `(i) in (res)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpet2gmo2f.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long i; l)\n    {\n \
    \       if(count == 0)\n        {\n            ret[count] = i;\n            count++;\n\
    \        }\n        else\n        {\n            if(!ret.canFind(i))\n       \
    \     {\n                ret[count] = i;\n                count++;\n         \
    \   }\n        }\n    }\n    ret = ret[0..count];\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpglfb0hqi.d(22): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglfb0hqi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(l,\
    \ (a, b) => a < b);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkuxcd1sm.d(11): Error: function `tmpkuxcd1sm.unique(long[] l)`\
    \ is not callable using argument types `(long[], void)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpkuxcd1sm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp9cfqd6e.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpp9cfqd6e.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpp9cfqd6e.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp9cfqd6e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(i in ret)\n      \
    \      continue;\n        ret ~= i;\n    }\n    return ret.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxi37ispa.d(14): Error: incompatible types for `(i) in (ret)`:\
    \ `long` and `long[]`\\n/tmp/tmpxi37ispa.d(18): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxi37ispa.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t j = 0;\n    foreach (i; l)\n    {\n      \
    \  if (j == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n  \
    \          j++;\n        }\n    }\n    return result[0..j];\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n\
    {\n    long[] result = new long[l.length];\n    size_t j = 0;\n    foreach (i;\
    \ l)\n    {\n        if (j == 0 || result[j-1] != i)\n        {\n            result[j]\
    \ = i;\n            j++;\n        }\n    }\n    return result[0..j];\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    size_t j = 0;\n    foreach\
    \ (i; l)\n    {\n        if (j == 0 || result[j-1] != i)\n        {\n        \
    \    result[j] = i;\n            j++;\n        }\n    }\n    return result[0..j];\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    long[] result = new long[l.length];\n    size_t j\
    \ = 0\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx039vbpk.d(73): Error: semicolon expected, not `unittest`\\n/tmp/tmpx039vbpk.d(73):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpx039vbpk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] temp = new long[l.length];\n    long[] temp2\
    \ = new long[l.length];\n    long[] temp3 = new long[l.length];\n    long[] temp4\
    \ = new long[l.length];\n    long[] temp5 = new long[l.length];\n    long[] temp6\
    \ = new long[l.length];\n    long[] temp7 = new long[l.length];\n    long[] temp8\
    \ = new long[l.length];\n    long[] temp9 = new long[l.length];\n    long[] temp10\
    \ = new long[l.length];\n    long[] temp11 = new long[l.length];\n    long[] temp12\
    \ = new long[l.length];\n    long[] temp13 = new long[l.length];\n    long[] temp14\
    \ = new long[l.length];\n    long[] temp15 = new long[l.length];\n    long[] temp16\
    \ = new long[l.length];\n    long[] temp17 = new long[l.length];\n    long[] temp18\
    \ = new long[l.length];\n    long[] temp19 = new long[l.length];\n    long[] temp20\
    \ = new long[l.length];\n    long[] temp21 = new long[l.length];\n    long[] temp22\
    \ = new long[l.length];\n    long[] temp23 = new long[l.length];\n    long[] temp24\
    \ = new long[l.length];\n    long[] temp25 = new long[l.length];\n    long[] temp26\
    \ = new long[l.length];\n    long[] temp27 = new long[l.length];\n    long[] temp28\
    \ = new long[l.length];\n    long[] temp29 = new long[l.length];\n    long[] temp30\
    \ = new long[l.length];\n    long[] temp31 = new long[l.length];\n    long[] temp32\
    \ = new long[l.length];\n    long[] temp33 = new long[l.length];\n    long[] temp34\
    \ = new long[l.length];\n    long[] temp35 = new long[l.length];\n    long[] temp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu_kcjh3z.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpu_kcjh3z.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpu_kcjh3z.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu_kcjh3z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    int j = 0;\n\
    \    foreach(long i; l)\n    {\n        if(!ret.canFind(i))\n        {\n     \
    \       ret[j] = i;\n            j++;\n        }\n    }\n    ret2 = ret[0..j];\n\
    \    ret2.sort();\n    return ret2;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvvfvrg8m.d(16): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpvvfvrg8m.d(23): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvvfvrg8m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int count = 0;\n    foreach(i; l)\n    {\n      \
    \  if(!res.canFind(i))\n        {\n            res[count] = i;\n            count++;\n\
    \        }\n    }\n    return res[0..count];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2cd9a8gv.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2cd9a8gv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.sort().uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpysbe5iqo.d(11): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpysbe5iqo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0lrxbkgj.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0lrxbkgj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    int i;\n    int j;\n\
    \    int k;\n    int m;\n    int n;\n    int p;\n    int q;\n    int r;\n    int\
    \ s;\n    int t;\n    int u;\n    int v;\n    int w;\n    int x;\n    int y;\n\
    \    int z;\n    int aa;\n    int bb;\n    int cc;\n    int dd;\n    int ee;\n\
    \    int ff;\n    int gg;\n    int hh;\n    int ii;\n    int jj;\n    int kk;\n\
    \    int ll;\n    int mm;\n    int nn;\n    int oo;\n    int pp;\n    int qq;\n\
    \    int rr;\n    int ss;\n    int tt;\n    int uu;\n    int vv;\n    int ww;\n\
    \    int xx;\n    int yy;\n    int zz;\n    int aaa;\n    int bbb;\n    int ccc;\n\
    \    int ddd;\n    int eee;\n    int fff;\n    int ggg;\n    int hhh;\n    int\
    \ iii;\n    int jjj;\n    int kkk;\n    int lll;\n    int mmm;\n    int nnn;\n\
    \    int ooo;\n    int ppp;\n    int qqq;\n    int rrr;\n    int sss;\n    int\
    \ ttt;\n    int uuu;\n    int vvv;\n    int www;\n    int xxx;\n    int yyy;\n\
    \    int zzz;\n    int aaaa;\n    int bbbb;\n    int cccc;\n    int dddd;\n  \
    \  int eeee;\n    int ffff;\n    int gggg;\n    int hhhh;\n    int iiii;\n   \
    \ int jjjj;\n    int kkkk;\n    int llll;\n    int mmmm;\n    int nnnn;\n    int\
    \ oooo;\n    int ppp\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgurw596d.d(99): Error: semicolon expected, not `unittest`\\n/tmp/tmpgurw596d.d(99):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgurw596d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.sort().uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpphdb3_o5.d(11): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpphdb3_o5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(!result.canFind(x))\n        {\n            result[i] = x;\n          \
    \  i++;\n        }\n    }\n    return result[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgu1hb1m.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxgu1hb1m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    foreach(e; l)\n        r ~= e;\n    r.sort;\n    return r.uniq;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptef0wzna.d(14): Error: no property `sort` for type `long[]`\\\
    n/tmp/tmptef0wzna.d(15): Error: no property `uniq` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptef0wzna.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    foreach(long x; l)\n    {\n        if(!x in tmp)\n        {\n           \
    \ ret[i] = x;\n            tmp[i] = x;\n            i++;\n        }\n    }\n \
    \   ret = ret[0..i];\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4hl8nnbh.d(16): Error: incompatible types for `(!x) in (tmp)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4hl8nnbh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvlmjyvrc.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpvlmjyvrc.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpvlmjyvrc.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlmjyvrc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x in tmp)\n            continue;\n\
    \        tmp[i] = x;\n        i++;\n    }\n    result = tmp[0..i];\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvkguzj8g.d(16): Error: incompatible types for `(x) in (tmp)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvkguzj8g.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_len = 0;\n    foreach(l_i; l)\n    {\n  \
    \      if(ret_len == 0 || ret[ret_len-1] != l_i)\n        {\n            ret[ret_len]\
    \ = l_i;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpngg8s6a3.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpngg8s6a3.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpngg8s6a3.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xaf7d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    long ret_length = 1;\n    for\
    \ (long i = 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n      \
    \  {\n            ret[ret_length] = l[i];\n            ret_length++;\n       \
    \ }\n    }\n    return ret[0..ret_length];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8h3dr_k1.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmp8h3dr_k1.__unittest_L24_C1()\
    \ [0x428070]\\n??:? void tmp8h3dr_k1.__modtest() [0x428120]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x428133]\\\
    n??:? __libc_start_main [0x77f4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long x; l)\n    {\n \
    \       if(count == 0 || x != res[$-1])\n        {\n            res[count] = x;\n\
    \            count++;\n        }\n    }\n    return res[0..count];\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprpye8ykh.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmprpye8ykh.__unittest_L29_C1()\
    \ [0x42801c]\\n??:? void tmprpye8ykh.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x5f937554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret.length = 0;\n    foreach(long i; l)\n    {\n\
    \        if(ret.length == 0 || ret[$-1] != i)\n            ret ~= i;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8my5hx38.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428335]\\n??:? void tmp8my5hx38.__unittest_L20_C1()\
    \ [0x428004]\\n??:? void tmp8my5hx38.__modtest() [0x4280b4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42decf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42cd62]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4318ad]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431d5c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431839]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42cd39]\\n??:? runModuleUnitTests [0x42dca5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877f]\\n??:? _d_run_main [0x4286ea]\\n??:? main [0x4280c7]\\\
    n??:? __libc_start_main [0x599d5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t n = 0;\n    foreach (long i; l)\n    {\n \
    \       if (i in result[0..n]) continue;\n        result[n++] = i;\n    }\n  \
    \  return result[0..n];\n}\n/*\nReturn sorted unique elements in an array\n  \
    \  >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    size_t n = 0;\n    foreach (long i; l)\n    {\n        if (i in result[0..n])\
    \ continue;\n        result[n++] = i;\n    }\n    return result[0..n];\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    size_t n = 0;\n    foreach\
    \ (long i; l)\n    {\n        if (i in result[0..n]) continue;\n        result[n++]\
    \ = i;\n    }\n    return result[0..n];\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t n = 0;\n    foreach (long i; l)\n    {\n \
    \       if (i in result[0..n]) continue;\n        result[n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt12pan3v.d(68): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmpt12pan3v.d(74): Error: found `void` when expecting `,`\\n/tmp/tmpt12pan3v.d(74):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpt12pan3v.d(74): Error: expression\
    \ expected, not `}`\\n/tmp/tmpt12pan3v.d(74): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpt12pan3v.d(74): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmpt12pan3v.d(74): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmpt12pan3v.d(74): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpt12pan3v.d(74): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt12pan3v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n     \
    \       ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn2mb1rfp.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpn2mb1rfp.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpn2mb1rfp.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xc708f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    foreach(i, e;\
    \ l)\n    {\n        if (e != ret[j-1])\n        {\n            ret[j] = e;\n\
    \            j++;\n        }\n    }\n    return ret[0..j];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxazuqa8o.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428375]\\n??:? void tmpxazuqa8o.__unittest_L24_C1()\
    \ [0x428048]\\n??:? void tmpxazuqa8o.__modtest() [0x4280f8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c453]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2e6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430571]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a20]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304fd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2bd]\\n??:? runModuleUnitTests [0x42c229]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428838]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287bf]\\n??:? _d_run_main [0x42872a]\\n??:? main [0x42810b]\\\
    n??:? __libc_start_main [0x4ac5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n\
    \        res ~= e;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdog4ejok.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpdog4ejok.d(14): Error: incompatible\
    \ types for `(e) in (res)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdog4ejok.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    long[] u;\n    long[] s;\n    long[] t;\n    long[] v;\n    long[] w;\n \
    \   long[] x;\n    long[] y;\n    long[] z;\n    long[] aa;\n    long[] bb;\n\
    \    long[] cc;\n    long[] dd;\n    long[] ee;\n    long[] ff;\n    long[] gg;\n\
    \    long[] hh;\n    long[] ii;\n    long[] jj;\n    long[] kk;\n    long[] ll;\n\
    \    long[] mm;\n    long[] nn;\n    long[] oo;\n    long[] pp;\n    long[] qq;\n\
    \    long[] rr;\n    long[] ss;\n    long[] tt;\n    long[] uu;\n    long[] vv;\n\
    \    long[] ww;\n    long[] xx;\n    long[] yy;\n    long[] zz;\n    long[] aaa;\n\
    \    long[] bbb;\n    long[] ccc;\n    long[] ddd;\n    long[] eee;\n    long[]\
    \ fff;\n    long[] ggg;\n    long[] hhh;\n    long[] iii;\n    long[] jjj;\n \
    \   long[] kkk;\n    long[] lll;\n    long[] mmm;\n    long[] nnn;\n    long[]\
    \ ooo;\n    long[] ppp;\n    long[] qqq;\n    long[] rrr;\n    long[] sss;\n \
    \   long[] ttt;\n    long[] uuu;\n    long[] vvv;\n    long[] www;\n    long[]\
    \ xxx;\n    long[] yyy;\n    long[] zzz;\n    long[] aaaa;\n    long[] bbbb;\n\
    \    long[] cccc;\n    long[] dddd;\n    long[] eeee;\n    long[] ffff;\n    long[]\
    \ gggg;\n    long[] hhhh;\n    long[] iiii;\n    long[] jjjj;\n    long[] kkkk;\n\
    \    long[] llll;\n    long[] mmmm;\n    long[] n\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnrsbs4gj.d(86): Error: semicolon expected, not `unittest`\\n/tmp/tmpnrsbs4gj.d(86):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpnrsbs4gj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n     \
    \       ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnbah1x7y.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpnbah1x7y.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpnbah1x7y.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xe2c71554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(e; l)\n    {\n        if(e !in result)\n       \
    \ {\n            result ~= e;\n        }\n    }\n    return result.sort();\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu7cu8iln.d(14): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\n/tmp/tmpu7cu8iln.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7cu8iln.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] sorted = sort(l);\n    ret[0] = sorted[0];\n\
    \    long ret_index = 0;\n    foreach(long i; sorted)\n    {\n        if(i !=\
    \ ret[ret_index])\n        {\n            ret_index++;\n            ret[ret_index]\
    \ = i;\n        }\n    }\n    return ret[0..ret_index+1];\n}\nunittest\n{\n  \
    \  alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3fewn9du.d(12): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3fewn9du.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int j = 0;\n    foreach(long i; l)\n    {\n     \
    \   if(!ret.canFind(i))\n        {\n            ret[j] = i;\n            j++;\n\
    \        }\n    }\n    return ret[0..j];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppx9uw5iw.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppx9uw5iw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0f7s2xp7.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmp0f7s2xp7.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0f7s2xp7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[];\n    foreach(lval; l)\n    {\n        if(!ret.canFind(lval))\n\
    \            ret ~= lval;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7f1opwvc.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp7f1opwvc.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp7f1opwvc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxrw21vj8.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpxrw21vj8.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpxrw21vj8.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxrw21vj8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n     \
    \       ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiy6dddp9.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpiy6dddp9.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpiy6dddp9.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xca61c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(i\
    \ == 0 || ret[i-1] != e)\n        {\n            ret[i] = e;\n            i++;\n\
    \        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe2ow9pdi.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpe2ow9pdi.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpe2ow9pdi.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x815d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || x != ret[i-1])\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc0cwy3pv.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpc0cwy3pv.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpc0cwy3pv.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xec9d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm3pacf58.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3pacf58.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long e; l)\n    {\n \
    \       if(!e in res)\n        {\n            res[count] = e;\n            count++;\n\
    \        }\n    }\n    return res[0..count];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgd2ehnyh.d(15): Error: incompatible types for `(!e) in (res)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgd2ehnyh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    int i;\n    int j;\n    int k;\n    int l_len;\n    int\
    \ tmp_len;\n    int ret_len;\n    l_len = l.length;\n    tmp = new long[l_len];\n\
    \    tmp_len = 0;\n    for (i = 0; i < l_len; i++)\n    {\n        if (tmp_len\
    \ == 0)\n        {\n            tmp[tmp_len] = l[i];\n            tmp_len++;\n\
    \        }\n        else\n        {\n            for (j = 0; j < tmp_len; j++)\n\
    \            {\n                if (l[i] == tmp[j])\n                {\n     \
    \               break;\n                }\n            }\n            if (j ==\
    \ tmp_len)\n            {\n                tmp[tmp_len] = l[i];\n            \
    \    tmp_len++;\n            }\n        }\n    }\n    ret = new long[tmp_len];\n\
    \    ret_len = 0;\n    for (i = 0; i < tmp_len; i++)\n    {\n        for (j =\
    \ i + 1; j < tmp_len; j++)\n        {\n            if (tmp[i] > tmp[j])\n    \
    \        {\n                k = tmp[i];\n                tmp[i] = tmp[j];\n  \
    \              tmp[j] = k;\n            }\n        }\n        ret[ret_len] = tmp[i];\n\
    \        ret_len++;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int len) \n{\n    long[]\
    \ ret;\n    long[] tmp;\n    int i;\n    int j;\n    int k;\n    int l_len;\n\
    \    int tmp_len;\n    int ret_len;\n    l_len = len;\n    tmp = new long[l_len];\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuu55rzzr.d(81): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuu55rzzr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(e in result)\n            continue;\n        result[i++] = e;\n    }\n\
    \    return result[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvoqg6k9p.d(15): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvoqg6k9p.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7cspr55i.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp7cspr55i.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp7cspr55i.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cspr55i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int j = 0;\n    foreach(i; l)\n    {\n        if(!ret.canFind(i))\n\
    \        {\n            ret[j] = i;\n            j++;\n        }\n    }\n    return\
    \ ret[0..j];\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpncscotwz.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpncscotwz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(l_; l)\n    {\n        if(!ret.canFind(l_))\n  \
    \          ret ~= l_;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8y6za2d9.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8y6za2d9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t count = 0;\n    foreach(long x; l)\n    {\n\
    \        if(count == 0 || x != result[count-1])\n        {\n            result[count]\
    \ = x;\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdwubl8x0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpdwubl8x0.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpdwubl8x0.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x28417554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int count = 0;\n    foreach(e; l)\n    {\n      \
    \  if(count == 0 || e != res[$-1])\n        {\n            res[count] = e;\n \
    \           count++;\n        }\n    }\n    return res[0..count];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpecy1d6rv.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpecy1d6rv.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpecy1d6rv.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xbfaf8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = l.dup;\n    tmp.sort;\n    long last\
    \ = tmp[0];\n    ret[0] = last;\n    long i = 1;\n    foreach(long e; tmp)\n \
    \   {\n        if(e != last)\n        {\n            ret[i] = e;\n           \
    \ i++;\n            last = e;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1oixn4d1.d(13): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1oixn4d1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++) \n    {\n        if (l[i] != l[i-1]) \n        {\n   \
    \         ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxwtzeozi.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpxwtzeozi.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpxwtzeozi.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x921e4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int ret_len = 1;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n \
    \           ret[ret_len] = l[i];\n            ret_len++;\n        }\n    }\n \
    \   return ret[0..ret_len];\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpua5kkm7s.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpua5kkm7s.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpua5kkm7s.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x7d462554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6nubh1_.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpj6nubh1_.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpj6nubh1_.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpj6nubh1_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t n = 0;\n    foreach (long i; l)\n    {\n \
    \       if (n == 0 || result[n-1] != i)\n            result[n++] = i;\n    }\n\
    \    return result[0..n];\n}\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfjqu2735.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpfjqu2735.__unittest_L20_C1()\
    \ [0x428018]\\n??:? void tmpfjqu2735.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x68966554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(e in result)\n            continue;\n        result[i++] = e;\n    }\n\
    \    return result[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe0w19wuw.d(15): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe0w19wuw.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ set.HashSet!(long)();\n    foreach(e; l)\n        s.insert(e);\n    return s.keys;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6org4934.d(11): Error: undefined identifier `set.HashSet!long`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6org4934.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(i == 0 || e != res[i-1])\n        {\n            res[i] = e;\n        \
    \    i++;\n        }\n    }\n    return res[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8kbvql68.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp8kbvql68.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp8kbvql68.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xc885b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[];\n    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n\
    \            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplibqt444.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmplibqt444.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmplibqt444.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    foreach(e; l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n\
    \    return ret.sort();\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqpwo9301.d(14): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\n/tmp/tmpqpwo9301.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqpwo9301.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(e; l)\n        s.insert(e);\n    return s.array;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgdoo7nit.d(11): Error: template instance `set!long` template\
    \ `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V)\
    \ defaultValue)?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgdoo7nit.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(!e in ret)\n           \
    \ ret ~= e;\n    }\n    return ret.sort;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpggsvbvo_.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpggsvbvo_.d(14): Error: incompatible\
    \ types for `(!e) in (ret)`: `bool` and `long[]`\\n/tmp/tmpggsvbvo_.d(17): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpggsvbvo_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if (i == 0 || e != result[i-1])\n        {\n            result[i] = e;\n \
    \           i++;\n        }\n    }\n    return result[0..i];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp92sxggvz.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp92sxggvz.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp92sxggvz.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x390e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(l,\
    \ (a, b) => a < b);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp64gttyo0.d(11): Error: function `tmp64gttyo0.unique(long[] l)`\
    \ is not callable using argument types `(long[], void)`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gttyo0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[0];\n    foreach(lval; l)\n    {\n        if(!res.canFind(lval))\n\
    \            res ~= lval;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp09h9q3pq.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09h9q3pq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int j = 0;\n\
    \    for (int i = 0; i < l.length; i++)\n    {\n        if (i == 0)\n        {\n\
    \            ret[j] = l[i];\n            j++;\n        }\n        else\n     \
    \   {\n            if (l[i] != l[i-1])\n            {\n                ret[j]\
    \ = l[i];\n                j++;\n            }\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmtexnb_4.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4283cd]\\n??:? void tmpmtexnb_4.__unittest_L32_C1()\
    \ [0x42809c]\\n??:? void tmpmtexnb_4.__modtest() [0x42814c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c4ab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b33e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4305c9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430555]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b315]\\n??:? runModuleUnitTests [0x42c281]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428890]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428817]\\n??:? _d_run_main [0x428782]\\n??:? main [0x42815f]\\\
    n??:? __libc_start_main [0xecbfb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t n = 0;\n    foreach (e; l) \n    {\n     \
    \   if (n == 0 || e != result[n - 1]) \n        {\n            result[n] = e;\n\
    \            n++;\n        }\n    }\n    return result[0 .. n];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6c80emm2.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmp6c80emm2.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmp6c80emm2.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x7d6c6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t j = 0;\n    foreach (i; l)\n    {\n      \
    \  if (j == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n  \
    \          j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl7efnppy.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpl7efnppy.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpl7efnppy.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x17414554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    size_t ret_len = 1;\n    foreach(i,\
    \ e; l)\n    {\n        if (e != ret[ret_len - 1])\n        {\n            ret[ret_len]\
    \ = e;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp134lnurf.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42837d]\\n??:? void tmp134lnurf.__unittest_L24_C1()\
    \ [0x42804c]\\n??:? void tmp134lnurf.__modtest() [0x4280fc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c45b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2ee]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430579]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a28]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430505]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2c5]\\n??:? runModuleUnitTests [0x42c231]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428840]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287c7]\\n??:? _d_run_main [0x428732]\\n??:? main [0x42810f]\\\
    n??:? __libc_start_main [0x25ba5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4hd5e34q.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp4hd5e34q.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp4hd5e34q.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4hd5e34q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret.length = 0;\n    foreach(long i; l)\n    {\n\
    \        if(ret.length == 0 || ret[$-1] != i)\n            ret ~= i;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjtwooxn0.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428335]\\n??:? void tmpjtwooxn0.__unittest_L20_C1()\
    \ [0x428004]\\n??:? void tmpjtwooxn0.__modtest() [0x4280b4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42decf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42cd62]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4318ad]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431d5c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431839]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42cd39]\\n??:? runModuleUnitTests [0x42dca5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877f]\\n??:? _d_run_main [0x4286ea]\\n??:? main [0x4280c7]\\\
    n??:? __libc_start_main [0xa075a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(!result.canFind(e))\n  \
    \          result ~= e;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp78i1ok85.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp78i1ok85.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || ret[i-1] != x)\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn04aty75.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpn04aty75.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpn04aty75.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x3e3a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int ret_len = 1;\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] != l[i-1]) \n        {\n\
    \            ret[ret_len] = l[i];\n            ret_len++;\n        }\n    }\n\
    \    return ret[0..ret_len];\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5l21558b.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmp5l21558b.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmp5l21558b.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x5fc86554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl55q70m_.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl55q70m_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[];\n    foreach(l2; l)\n    {\n        if(!ret.canFind(l2))\n   \
    \         ret ~= l2;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy35_jth0.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpy35_jth0.d(14): Error: no property\
    \ `canFind` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpy35_jth0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(i; l)\n        s.insert(i);\n    return s.array;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi4304eky.d(11): Error: template instance `set!long` template\
    \ `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V)\
    \ defaultValue)?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4304eky.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(e; l)\n    {\n        if(e !in result)\n       \
    \ {\n            result ~= e;\n        }\n    }\n    return result.sort;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwd1whvjq.d(14): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\n/tmp/tmpwd1whvjq.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwd1whvjq.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int count = 0;\n    foreach(long i; l)\n    {\n \
    \       if(!res.canFind(i))\n        {\n            res[count] = i;\n        \
    \    count++;\n        }\n    }\n    return res[0..count];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjg65o3_w.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjg65o3_w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3umke7w6.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3umke7w6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto u = new\
    \ long[](l.length);\n    auto uidx = 0L;\n    foreach(i, e; l) \n    {\n     \
    \   if (i == 0L || e != l[i - 1L]) \n        {\n            u[uidx] = e;\n   \
    \         uidx++;\n        }\n    }\n    return u[0L .. uidx];\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpluslzkz0.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpluslzkz0.__unittest_L29_C1()\
    \ [0x428018]\\n??:? void tmpluslzkz0.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0xd2aa0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [];\n    foreach(l_; l)\n    {\n        if(!result.canFind(l_))\n        {\n\
    \            result ~= l_;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbfbw0c6x.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpbfbw0c6x.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbfbw0c6x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] temp = new long[l.length];\n    long[] temp2\
    \ = new long[l.length];\n    long[] temp3 = new long[l.length];\n    long[] temp4\
    \ = new long[l.length];\n    long[] temp5 = new long[l.length];\n    long[] temp6\
    \ = new long[l.length];\n    long[] temp7 = new long[l.length];\n    long[] temp8\
    \ = new long[l.length];\n    long[] temp9 = new long[l.length];\n    long[] temp10\
    \ = new long[l.length];\n    long[] temp11 = new long[l.length];\n    long[] temp12\
    \ = new long[l.length];\n    long[] temp13 = new long[l.length];\n    long[] temp14\
    \ = new long[l.length];\n    long[] temp15 = new long[l.length];\n    long[] temp16\
    \ = new long[l.length];\n    long[] temp17 = new long[l.length];\n    long[] temp18\
    \ = new long[l.length];\n    long[] temp19 = new long[l.length];\n    long[] temp20\
    \ = new long[l.length];\n    long[] temp21 = new long[l.length];\n    long[] temp22\
    \ = new long[l.length];\n    long[] temp23 = new long[l.length];\n    long[] temp24\
    \ = new long[l.length];\n    long[] temp25 = new long[l.length];\n    long[] temp26\
    \ = new long[l.length];\n    long[] temp27 = new long[l.length];\n    long[] temp28\
    \ = new long[l.length];\n    long[] temp29 = new long[l.length];\n    long[] temp30\
    \ = new long[l.length];\n    long[] temp31 = new long[l.length];\n    long[] temp32\
    \ = new long[l.length];\n    long[] temp33 = new long[l.length];\n    long[] temp34\
    \ = new long[l.length];\n    long[] temp35 = new long[l.length];\n    long[] temp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpglkyjii8.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpglkyjii8.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpglkyjii8.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpglkyjii8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(!result.canFind(x))\n        {\n            result[i] = x;\n          \
    \  i++;\n        }\n    }\n    return result[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoqo92yy_.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqo92yy_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(uniq(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8sfz8qyv.d(11): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8sfz8qyv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] temp;\n    long[] temp2;\n    long[] temp3;\n    long[] temp4;\n \
    \   long[] temp5;\n    long[] temp6;\n    long[] temp7;\n    long[] temp8;\n \
    \   long[] temp9;\n    long[] temp10;\n    long[] temp11;\n    long[] temp12;\n\
    \    long[] temp13;\n    long[] temp14;\n    long[] temp15;\n    long[] temp16;\n\
    \    long[] temp17;\n    long[] temp18;\n    long[] temp19;\n    long[] temp20;\n\
    \    long[] temp21;\n    long[] temp22;\n    long[] temp23;\n    long[] temp24;\n\
    \    long[] temp25;\n    long[] temp26;\n    long[] temp27;\n    long[] temp28;\n\
    \    long[] temp29;\n    long[] temp30;\n    long[] temp31;\n    long[] temp32;\n\
    \    long[] temp33;\n    long[] temp34;\n    long[] temp35;\n    long[] temp36;\n\
    \    long[] temp37;\n    long[] temp38;\n    long[] temp39;\n    long[] temp40;\n\
    \    long[] temp41;\n    long[] temp42;\n    long[] temp43;\n    long[] temp44;\n\
    \    long[] temp45;\n    long[] temp46;\n    long[] temp47;\n    long[] temp48;\n\
    \    long[] temp49;\n    long[] temp50;\n    long[] temp51;\n    long[] temp52;\n\
    \    long[] temp53;\n    long[] temp54;\n    long[] temp55;\n    long[] temp56;\n\
    \    long[] temp57;\n    long[] temp58;\n    long[] temp59;\n    long[] temp60;\n\
    \    long[] temp61;\n    long[] temp62;\n    long[] temp63;\n    long[] temp64;\n\
    \    long[] temp65;\n    long[] temp66;\n    long[] temp67;\n    long[] temp68;\n\
    \    long[] temp69;\n    long[] temp70;\n    long[] temp71;\n    long[] temp72;\n\
    \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpso_64gd2.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpso_64gd2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(!result.canFind(e))\n\
    \        {\n            result[i] = e;\n            i++;\n        }\n    }\n \
    \   return result[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ra4pp7v.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ra4pp7v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ SortedRange!(long)(l);\n    return s.byKey.keys;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto\
    \ s = new SortedRange!(long)(l);\n    return s.byKey.keys;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n\
    {\n    auto s = new SortedRange!(long)(l);\n    return s.byKey.keys;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    auto s = new SortedRange!(long)(l);\n    return s.byKey.keys;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    auto s = new SortedRange!(long)(l);\n    return s.byKey.keys;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6cewpsdf.d(58): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6cewpsdf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_len = 0;\n    foreach(long i; l)\n    {\n\
    \        if(ret_len == 0 || ret[ret_len-1] != i)\n        {\n            ret[ret_len]\
    \ = i;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzyq5opmv.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpzyq5opmv.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpzyq5opmv.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x81036554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    int j = 0;\n    foreach(long x; l) {\n        if (i == 0 || ret[i-1] != x)\
    \ {\n            ret[i] = x;\n            i++;\n        }\n    }\n    ret.length\
    \ = i;\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiha_2dy6.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpiha_2dy6.__unittest_L24_C1()\
    \ [0x428020]\\n??:? void tmpiha_2dy6.__modtest() [0x4280d0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42d4fb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42c38e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4318c5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431d74]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431851]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42c365]\\n??:? runModuleUnitTests [0x42d2d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280e3]\\\
    n??:? __libc_start_main [0x7cf04554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [];\n    foreach(lval; l)\n    {\n        if(lval in result)\n           \
    \ continue;\n        result ~= lval;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpps7jmwnb.d(14): Error: incompatible types for `(lval) in (result)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpps7jmwnb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t result_size = 0;\n    foreach (long i; l)\n\
    \    {\n        if (result_size == 0 || result[result_size - 1] != i)\n      \
    \  {\n            result[result_size] = i;\n            result_size++;\n     \
    \   }\n    }\n    return result[0 .. result_size];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1ooopz46.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmp1ooopz46.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmp1ooopz46.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x83560554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t j = 0;\n    foreach (i; l)\n    {\n      \
    \  if (j == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n  \
    \          j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptymrv5a0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmptymrv5a0.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmptymrv5a0.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x9dc89554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(i == 0 || ret[i-1] != e)\n        {\n            ret[i] = e;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptarhlmwn.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmptarhlmwn.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmptarhlmwn.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x9a729554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    long ret_length = 1;\n    for\
    \ (long i = 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n      \
    \  {\n            ret[ret_length] = l[i];\n            ret_length++;\n       \
    \ }\n    }\n    return ret[0..ret_length];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfucgs64o.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpfucgs64o.__unittest_L24_C1()\
    \ [0x428070]\\n??:? void tmpfucgs64o.__modtest() [0x428120]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x428133]\\\
    n??:? __libc_start_main [0xfc7ff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long elem; l)\n    {\n  \
    \      if(!elem in res)\n        {\n            res[i] = elem;\n            i++;\n\
    \        }\n    }\n    return res[0..i];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppuhfej3o.d(15): Error: incompatible types for `(!elem) in (res)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuhfej3o.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++) \n    {\n        if (l[i] != l[i-1]) \n        {\n   \
    \         ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpukyk5qa_.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpukyk5qa_.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpukyk5qa_.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x7dfcb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    int j = 0;\n    for (i = 0; i < l.length; i++) {\n        if (i == 0) {\n\
    \            ret[j] = l[i];\n            j++;\n        } else {\n            if\
    \ (l[i] != l[i-1]) {\n                ret[j] = l[i];\n                j++;\n \
    \           }\n        }\n    }\n    ret = ret[0..j];\n    ret.sort();\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzr1b1agx.d(27): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzr1b1agx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(uniq(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptqwzacwh.d(11): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqwzacwh.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(!e\
    \ in ret)\n        {\n            ret[i] = e;\n            i++;\n        }\n \
    \   }\n    return ret[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp63gd0ojk.d(15): Error: incompatible types for `(!e) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63gd0ojk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(e; l)\n    {\n        if(!elem(result, e))\n   \
    \     {\n            result ~= e;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvc2l4zck.d(14): Error: undefined identifier `elem`\\n/tmp/tmpvc2l4zck.d(19):\
    \ Error: no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvc2l4zck.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpltxbhxkp.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltxbhxkp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int ret_len = 1;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n \
    \           ret[ret_len] = l[i];\n            ret_len++;\n        }\n    }\n \
    \   return ret[0..ret_len];\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp67e1kdo4.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmp67e1kdo4.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmp67e1kdo4.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x403c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    foreach(e; l)\n    {\n        if(e in r)\n            continue;\n       \
    \ r ~= e;\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt2gqoipy.d(14): Error: incompatible types for `(e) in (r)`: `long`\
    \ and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2gqoipy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int n = 1;\n    for (int i =\
    \ 1; i < l.length; i++) \n    {\n        if (l[i] != l[i-1]) \n        {\n   \
    \         ret[n] = l[i];\n            n++;\n        }\n    }\n    return ret[0..n];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp41skkfcm.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmp41skkfcm.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmp41skkfcm.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xb14ef554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n     \
    \       ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzcdra7j2.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpzcdra7j2.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpzcdra7j2.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xe22a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret.length = 0;\n    foreach(long i; l)\n    {\n\
    \        if(ret.length == 0 || ret[$-1] != i)\n            ret ~= i;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpobtmgivp.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428335]\\n??:? void tmpobtmgivp.__unittest_L20_C1()\
    \ [0x428004]\\n??:? void tmpobtmgivp.__modtest() [0x4280b4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42decf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42cd62]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x4318ad]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x431d5c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x431839]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42cd39]\\n??:? runModuleUnitTests [0x42dca5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4287f8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42877f]\\n??:? _d_run_main [0x4286ea]\\n??:? main [0x4280c7]\\\
    n??:? __libc_start_main [0xe886b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl1u5dnyq.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpl1u5dnyq.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpl1u5dnyq.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl1u5dnyq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(e; l)\n    {\n        if(e !in ret)\n          \
    \  ret ~= e;\n    }\n    return ret.sort();\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgidsbjy6.d(14): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\n/tmp/tmpgidsbjy6.d(17): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgidsbjy6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n\
    \        ret ~= e;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb2vf4_n2.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpb2vf4_n2.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb2vf4_n2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(e\
    \ in ret)\n            continue;\n        ret[i++] = e;\n    }\n    return ret[0..i];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4pst3dmu.d(15): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4pst3dmu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(lval; l)\n    {\n       \
    \ if(i == 0 || ret[i-1] != lval)\n        {\n            ret[i] = lval;\n    \
    \        i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpixvj7xkn.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpixvj7xkn.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpixvj7xkn.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x64769554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    ret.length = l.length;\n    ret[] = l[];\n    ret.sort;\n    ret = ret.uniq;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppzqu3wtp.d(14): Error: no property `sort` for type `long[]`\\\
    n/tmp/tmppzqu3wtp.d(15): Error: no property `uniq` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppzqu3wtp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(l1; l)\n    {\n        if(!l1 in result)\n     \
    \   {\n            result ~= l1;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwu631m__.d(14): Error: incompatible types for `(!l1) in (result)`:\
    \ `bool` and `long[]`\\n/tmp/tmpwu631m__.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwu631m__.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9e7z0gaq.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmp9e7z0gaq.d(49): Error: semicolon expected, not `{`\\n/tmp/tmp9e7z0gaq.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9e7z0gaq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzdg44dtt.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzdg44dtt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_rk3v3im.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rk3v3im.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n\
    \    foreach(l_; l)\n    {\n        if(!result.canFind(l_))\n            result\
    \ ~= l_;\n    }\n    return result;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n\
    \    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplccse_fx.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplccse_fx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(!e in res)\n           \
    \ res ~= e;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8oseaui7.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp8oseaui7.d(14): Error: incompatible\
    \ types for `(!e) in (res)`: `bool` and `long[]`\\n/tmp/tmp8oseaui7.d(17): Error:\
    \ no property `sort` for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8oseaui7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    foreach(el; l)\n    {\n        if(!el in ret)\n            ret ~= el;\n \
    \   }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9tonleg3.d(14): Error: incompatible types for `(!el) in (ret)`:\
    \ `bool` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9tonleg3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_len = 0;\n    foreach(e; l)\n    {\n    \
    \    if(e in ret[0..ret_len])\n            continue;\n        ret[ret_len] = e;\n\
    \        ret_len++;\n    }\n    return ret[0..ret_len];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7k19q7p0.d(15): Error: incompatible types for `(e) in (ret[0..cast(ulong)ret_len])`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7k19q7p0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.sort.uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnroo4ija.d(11): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnroo4ija.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(e; l)\n        s.insert(e);\n    return s.array;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp514nf2dr.d(11): Error: template instance `set!long` template\
    \ `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V)\
    \ defaultValue)?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp514nf2dr.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(e; l)\n    {\n        s.insert(e);\n    }\n    return s.array;\n\
    }\n/*\nReturn the intersection of two arrays\n    >>> intersection([1L, 2L, 3L,\
    \ 4L], [3L, 4L, 5L, 6L])\n    [3L, 4L]\n*/\nlong[] intersection(long[] a, long[]\
    \ b) \n{\n    auto s = set!(long)();\n    foreach(e; a)\n    {\n        s.insert(e);\n\
    \    }\n    auto r = set!(long)();\n    foreach(e; b)\n    {\n        if(s.contains(e))\n\
    \        {\n            r.insert(e);\n        }\n    }\n    return r.array;\n\
    }\n/*\nReturn the union of two arrays\n    >>> union([1L, 2L, 3L, 4L], [3L, 4L,\
    \ 5L, 6L])\n    [1L, 2L, 3L, 4L, 5L, 6L]\n*/\nlong[] union(long[] a, long[] b)\
    \ \n{\n    auto s = set!(long)();\n    foreach(e; a)\n    {\n        s.insert(e);\n\
    \    }\n    foreach(e; b)\n    {\n        s.insert(e);\n    }\n    return s.array;\n\
    }\n/*\nReturn the difference of two arrays\n    >>> difference([1L, 2L, 3L, 4L],\
    \ [3L, 4L, 5L, 6L])\n    [1L, 2L]\n*/\nlong[] difference(long[] a, long[] b) \n\
    {\n    auto s = set!(long)();\n    foreach(e; a)\n    {\n        s.insert(e);\n\
    \    }\n    foreach(e; b)\n    {\n        s.remove(e);\n    }\n    return s.array;\n\
    }\n/*\nReturn the symmetric difference of two arrays\n    >>> symmetric_difference([1L,\
    \ 2L, 3L, 4L\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4wzieq3p.d(45): Error: no identifier for declarator `long[]`\\\
    n/tmp/tmp4wzieq3p.d(45): Error: { } expected following `union` declaration\\n/tmp/tmp4wzieq3p.d(45):\
    \ Error: declaration expected, not `(`\\n/tmp/tmp4wzieq3p.d(48): Error: declaration\
    \ expected, not `foreach`\\n/tmp/tmp4wzieq3p.d(48): Error: no identifier for declarator\
    \ `a`\\n/tmp/tmp4wzieq3p.d(48): Error: declaration expected, not `)`\\n/tmp/tmp4wzieq3p.d(51):\
    \ Error: unrecognized declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp4wzieq3p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t count = 0;\n    foreach(long i; l)\n    {\n\
    \        if(count == 0 || result[count-1] != i)\n        {\n            result[count]\
    \ = i;\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgvulp2bn.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpgvulp2bn.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpgvulp2bn.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x2a549554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e in result)\n         \
    \   continue;\n        result ~= e;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp930hmc4e.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmp930hmc4e.d(14): Error: incompatible\
    \ types for `(e) in (result)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp930hmc4e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n     \
    \       result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpok017wmm.d(14): Error: incompatible types for `(e) in (result)`:\
    \ `long` and `long[]`\\n/tmp/tmpok017wmm.d(19): Error: no property `sort` for\
    \ type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok017wmm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t n = 0;\n    foreach (long i; l)\n    {\n \
    \       if (!result.canFind(i))\n        {\n            result[n] = i;\n     \
    \       n++;\n        }\n    }\n    return result[0..n];\n}\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lvda2zl.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lvda2zl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[];\n    foreach(l_; l)\n    {\n        if(!result.canFind(l_))\n\
    \        {\n            result ~= l_;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf4s9e7p6.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpf4s9e7p6.d(14): Error: no property\
    \ `canFind` for type `long[]`\\n/tmp/tmpf4s9e7p6.d(19): Error: no property `sort`\
    \ for type `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4s9e7p6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(array(uniq(l)));\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_qzjw2b8.d(11): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_qzjw2b8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int j = 1;\n    for (int i =\
    \ 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n     \
    \       ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk38ej2nh.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpk38ej2nh.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpk38ej2nh.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0xecb07554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t count = 0;\n    foreach(long i; l)\n    {\n\
    \        if(count == 0 || result[count-1] != i)\n        {\n            result[count]\
    \ = i;\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpogs1zg35.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmpogs1zg35.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmpogs1zg35.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0x71d29554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t i = 0;\n    foreach(e; l)\n    {\n       \
    \ if (i == 0 || e != result[i-1])\n        {\n            result[i] = e;\n   \
    \         i++;\n        }\n    }\n    return result[0..i];\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp57u53_vo.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428345]\\n??:? void tmp57u53_vo.__unittest_L23_C1()\
    \ [0x428018]\\n??:? void tmp57u53_vo.__modtest() [0x4280c8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c423]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430541]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304cd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b28d]\\n??:? runModuleUnitTests [0x42c1f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428808]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42878f]\\n??:? _d_run_main [0x4286fa]\\n??:? main [0x4280db]\\\
    n??:? __libc_start_main [0xbad34554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n\
    \        ret ~= e;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuyxxsh4q.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\n/tmp/tmpuyxxsh4q.d(14): Error: incompatible\
    \ types for `(e) in (ret)`: `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpuyxxsh4q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(e; l)\n        s.insert(e);\n    return s.array;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp530u3tcb.d(11): Error: template instance `set!long` template\
    \ `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V)\
    \ defaultValue)?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp530u3tcb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n     \
    \   if(e !in ret)\n        {\n            ret[i] = e;\n            i++;\n    \
    \    }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4tlaoaif.d(15): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4tlaoaif.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)(l);\n\
    \    return s.array;\n}\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)(l);\n    return\
    \ s.array;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l) \n{\n    auto s = set!(long)(l);\n    return s.array;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    auto s = set!(long)(l);\n    return s.array;\n}\n\
    /*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    auto s = set!(long)(l);\n    return s.array;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n\
    {\n    auto s = set!(long)(\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpae0aahok.d(67): Error: expression expected, not `unittest`\\\
    n/tmp/tmpae0aahok.d(68): Error: found `{` when expecting `,`\\n/tmp/tmpae0aahok.d(69):\
    \ Error: expression expected, not `alias`\\n/tmp/tmpae0aahok.d(69): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmpae0aahok.d(69): Error: expression expected,\
    \ not `=`\\n/tmp/tmpae0aahok.d(69): Error: found `unique` when expecting `,`\\\
    n/tmp/tmpae0aahok.d(69): Error: expression expected, not `;`\\n/tmp/tmpae0aahok.d(71):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmpae0aahok.d(71): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmpae0aahok.d(72): Error: expression expected,\
    \ not `}`\\n/tmp/tmpae0aahok.d(73): Error: found `void` when expecting `,`\\n/tmp/tmpae0aahok.d(73):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpae0aahok.d(73): Error: expression\
    \ expected, not `}`\\n/tmp/tmpae0aahok.d(73): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpae0aahok.d(73): Error: found `End of File` when expecting\
    \ `)`\\n/tmp/tmpae0aahok.d(73): Error: semicolon expected following auto declaration,\
    \ not `End of File`\\n/tmp/tmpae0aahok.d(73): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpae0aahok.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.canFind(i))\n\
    \            continue;\n        ret ~= i;\n    }\n    ret.sort();\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxn6x7_w9.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpxn6x7_w9.d(18): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn6x7_w9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_len = 0;\n    foreach(long i; l)\n    {\n\
    \        if(ret_len == 0 || ret[ret_len-1] != i)\n        {\n            ret[ret_len]\
    \ = i;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvgdl6so3.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpvgdl6so3.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpvgdl6so3.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x84769554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpswp7wftp.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpswp7wftp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || ret[i-1] != x)\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyi1e7fj5.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpyi1e7fj5.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpyi1e7fj5.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x9228b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    for (; i < l.length; i++)\n    {\n      \
    \  if (l[i] != tmp[j])\n        {\n            tmp[j] = l[i];\n            ret[k]\
    \ = l[i];\n            j++;\n            k++;\n        }\n    }\n    ret = ret[0..k];\n\
    \    return ret;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n    long[]\
    \ tmp = new long[l.length];\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    for (; i < l.length; i++)\n    {\n        if (l[i] != tmp[j])\n        {\n\
    \            tmp[j] = l[i];\n            ret[k] = l[i];\n            j++;\n  \
    \          k++;\n        }\n    }\n    ret = ret[0..k];\n    return ret;\n}\n\
    /*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    long[] tmp = new long[l.length];\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    for (; i < l.length; i++)\n\
    \    {\n        if (l[i] != tmp[j])\n        {\n            tmp[j] = l[\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy1dvq85j.d(73): Error: expression expected, not `unittest`\\\
    n/tmp/tmpy1dvq85j.d(74): Error: found `{` when expecting `,`\\n/tmp/tmpy1dvq85j.d(75):\
    \ Error: expression expected, not `alias`\\n/tmp/tmpy1dvq85j.d(75): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmpy1dvq85j.d(75): Error: expression expected,\
    \ not `=`\\n/tmp/tmpy1dvq85j.d(75): Error: found `unique` when expecting `,`\\\
    n/tmp/tmpy1dvq85j.d(75): Error: expression expected, not `;`\\n/tmp/tmpy1dvq85j.d(77):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmpy1dvq85j.d(77): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmpy1dvq85j.d(78): Error: expression expected,\
    \ not `}`\\n/tmp/tmpy1dvq85j.d(79): Error: found `void` when expecting `,`\\n/tmp/tmpy1dvq85j.d(79):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpy1dvq85j.d(79): Error: expression\
    \ expected, not `}`\\n/tmp/tmpy1dvq85j.d(79): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpy1dvq85j.d(79): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmpy1dvq85j.d(79): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmpy1dvq85j.d(79): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpy1dvq85j.d(79): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpy1dvq85j.d(79):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy1dvq85j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || ret[i-1] != x)\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprvaa5d50.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmprvaa5d50.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmprvaa5d50.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x2421e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || ret[i-1] != x)\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvrw_oyp_.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpvrw_oyp_.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpvrw_oyp_.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x39fa2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    size_t result_length = 0;\n    foreach(long x; l)\n\
    \    {\n        if(!result.canFind(x))\n        {\n            result[result_length]\
    \ = x;\n            result_length++;\n        }\n    }\n    return result[0..result_length];\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    long[] result = new long[l.length];\n    size_t result_length\
    \ = 0;\n    foreach(long x; l)\n    {\n        if(!result.canFind(x))\n      \
    \  {\n            result[result_length] = x;\n            result_length++;\n \
    \       }\n    }\n    return result[0..result_length];\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    size_t result_length = 0;\n    foreach(long\
    \ x; l)\n    {\n        if(!result.canFind(x))\n        {\n            result[result_length]\
    \ = x;\n            result_length++;\n        }\n    }\n    return result[0..result_length];\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    long[] result = new long[\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpepdh1hgl.d(72): Error: expression expected, not `unittest`\\\
    n/tmp/tmpepdh1hgl.d(73): Error: found `{` when expecting `]`\\n/tmp/tmpepdh1hgl.d(74):\
    \ Error: semicolon expected, not `alias`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpepdh1hgl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuv3sbg1i.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpuv3sbg1i.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpuv3sbg1i.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpuv3sbg1i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ Set!(long)();\n    foreach(e; l)\n        s.insert(e);\n    return s.keys;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    auto s = new Set!(long)();\n    foreach(e; l)\n  \
    \      s.insert(e);\n    return s.keys;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ Set!(long)();\n    foreach(e; l)\n        s.insert(e);\n    return s.keys;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    auto s = new Set!(long)();\n    foreach(e; l)\n  \
    \      s.insert(e);\n    return s.keys;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ Set!(long)();\n    foreach(e; l)\n        s.insert(e);\n    return s.keys;\n\
    }\n/*\nReturn\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_xh17k3_.d(68): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xh17k3_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(long)();\n\
    \    foreach(e; l)\n        s.insert(e);\n    return s.array;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpku7gf_d2.d(11): Error: template instance `set!long` template\
    \ `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V)\
    \ defaultValue)?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpku7gf_d2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int ret_idx = 0;\n    foreach(long v; l)\n    {\n\
    \        if(ret_idx == 0 || ret[ret_idx-1] != v)\n        {\n            ret[ret_idx]\
    \ = v;\n            ret_idx++;\n        }\n    }\n    return ret[0..ret_idx];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4dhh18sj.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp4dhh18sj.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp4dhh18sj.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x98aa3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    foreach(i; l)\n    {\n        if(j\
    \ == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n         \
    \   j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2kyljkhu.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp2kyljkhu.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp2kyljkhu.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x4392b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto u = new\
    \ long[];\n    foreach(e; l)\n    {\n        if(e in u)\n            continue;\n\
    \        u ~= e;\n    }\n    return u;\n}\n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppkdggitk.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppkdggitk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprgfj2ngw.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmprgfj2ngw.d(49): Error: semicolon expected, not `{`\\n/tmp/tmprgfj2ngw.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprgfj2ngw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    int ret_len = 1;\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] != l[i-1]) \n        {\n\
    \            ret[ret_len] = l[i];\n            ret_len++;\n        }\n    }\n\
    \    return ret[0..ret_len];\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkwevd7xz.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42839d]\\n??:? void tmpkwevd7xz.__unittest_L24_C1()\
    \ [0x42806c]\\n??:? void tmpkwevd7xz.__modtest() [0x42811c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c47b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b30e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430599]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430a48]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x430525]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b2e5]\\n??:? runModuleUnitTests [0x42c251]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428860]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4287e7]\\n??:? _d_run_main [0x428752]\\n??:? main [0x42812f]\\\
    n??:? __libc_start_main [0x8172554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(uniq(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8q_xn8l_.d(11): Error: undefined identifier `sort`, did you mean\
    \ function `sqrt`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8q_xn8l_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    foreach(long i; l)\n    {\n     \
    \   if(j == 0 || result[j-1] != i)\n        {\n            result[j] = i;\n  \
    \          j++;\n        }\n    }\n    return result[0..j];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6qidm16b.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp6qidm16b.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmp6qidm16b.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x9187d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result\
    \ = new long[];\n    foreach(e; l)\n    {\n        if(!e in result)\n        \
    \    result ~= e;\n    }\n    return result.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4aqrmei.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj4aqrmei.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int j = 0;\n    foreach(long i; l) {\n        if\
    \ (j == 0 || ret[j-1] != i) {\n            ret[j] = i;\n            j++;\n   \
    \     }\n    }\n    return ret[0..j];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp371g93ro.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmp371g93ro.__unittest_L21_C1()\
    \ [0x42801c]\\n??:? void tmp371g93ro.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x1e85554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(x; l) \n    {\n        if(!ret.canFind(x))\
    \ \n        {\n            ret[i] = x;\n            i++;\n        }\n    }\n \
    \   return ret[0..i];\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz0sahimf.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0sahimf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    int i = 0;\n\
    \    int j = 0;\n    foreach(lval; l)\n    {\n        if(!tmp.canFind(lval))\n\
    \        {\n            ret[i] = lval;\n            tmp[j] = lval;\n         \
    \   i++;\n            j++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2g8xb1p5.d(17): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2g8xb1p5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(std.algorithm.sort(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqnky7lyv.d(11): Error: undefined identifier `algorithm` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqnky7lyv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(e\
    \ in ret)\n            continue;\n        ret[i++] = e;\n    }\n    return ret[0..i];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpynh6khzi.d(15): Error: incompatible types for `(e) in (ret)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpynh6khzi.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(!ret.canFind(i))\n\
    \            ret ~= i;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpunbelsms.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpunbelsms.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    size_t i = 0;\n    foreach(long e; l)\n    {\n  \
    \      if (e !in ret[0..i])\n        {\n            ret[i] = e;\n            i++;\n\
    \        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_i_oo45w.d(15): Error: incompatible types for `(e) in (ret[0..i])`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_i_oo45w.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    int i = 0;\n    foreach(e; l)\n    {\n        if(i\
    \ == 0 || e != res[i-1])\n        {\n            res[i] = e;\n            i++;\n\
    \        }\n    }\n    return res[0..i];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyzffjk5f.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpyzffjk5f.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpyzffjk5f.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0xe39c9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    long[] ret3\
    \ = new long[l.length];\n    long[] ret4 = new long[l.length];\n    long[] ret5\
    \ = new long[l.length];\n    long[] ret6 = new long[l.length];\n    long[] ret7\
    \ = new long[l.length];\n    long[] ret8 = new long[l.length];\n    long[] ret9\
    \ = new long[l.length];\n    long[] ret10 = new long[l.length];\n    long[] ret11\
    \ = new long[l.length];\n    long[] ret12 = new long[l.length];\n    long[] ret13\
    \ = new long[l.length];\n    long[] ret14 = new long[l.length];\n    long[] ret15\
    \ = new long[l.length];\n    long[] ret16 = new long[l.length];\n    long[] ret17\
    \ = new long[l.length];\n    long[] ret18 = new long[l.length];\n    long[] ret19\
    \ = new long[l.length];\n    long[] ret20 = new long[l.length];\n    long[] ret21\
    \ = new long[l.length];\n    long[] ret22 = new long[l.length];\n    long[] ret23\
    \ = new long[l.length];\n    long[] ret24 = new long[l.length];\n    long[] ret25\
    \ = new long[l.length];\n    long[] ret26 = new long[l.length];\n    long[] ret27\
    \ = new long[l.length];\n    long[] ret28 = new long[l.length];\n    long[] ret29\
    \ = new long[l.length];\n    long[] ret30 = new long[l.length];\n    long[] ret31\
    \ = new long[l.length];\n    long[] ret32 = new long[l.length];\n    long[] ret33\
    \ = new long[l.length];\n    long[] ret34 = new long[l.length];\n    long[] ret35\
    \ = new long[l.length];\n    long[] ret36 = new long[l.length];\n    long[] ret37\
    \ =\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxgz53qr1.d(48): Error: expression expected, not `unittest`\\\
    n/tmp/tmpxgz53qr1.d(49): Error: semicolon expected, not `{`\\n/tmp/tmpxgz53qr1.d(54):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxgz53qr1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    ret.length = l.length;\n    long[] temp;\n    temp.length = l.length;\n \
    \   long[] temp2;\n    temp2.length = l.length;\n    long[] temp3;\n    temp3.length\
    \ = l.length;\n    long[] temp4;\n    temp4.length = l.length;\n    long[] temp5;\n\
    \    temp5.length = l.length;\n    long[] temp6;\n    temp6.length = l.length;\n\
    \    long[] temp7;\n    temp7.length = l.length;\n    long[] temp8;\n    temp8.length\
    \ = l.length;\n    long[] temp9;\n    temp9.length = l.length;\n    long[] temp10;\n\
    \    temp10.length = l.length;\n    long[] temp11;\n    temp11.length = l.length;\n\
    \    long[] temp12;\n    temp12.length = l.length;\n    long[] temp13;\n    temp13.length\
    \ = l.length;\n    long[] temp14;\n    temp14.length = l.length;\n    long[] temp15;\n\
    \    temp15.length = l.length;\n    long[] temp16;\n    temp16.length = l.length;\n\
    \    long[] temp17;\n    temp17.length = l.length;\n    long[] temp18;\n    temp18.length\
    \ = l.length;\n    long[] temp19;\n    temp19.length = l.length;\n    long[] temp20;\n\
    \    temp20.length = l.length;\n    long[] temp21;\n    temp21.length = l.length;\n\
    \    long[] temp22;\n    temp22.length = l.length;\n    long[] temp23;\n    temp23.length\
    \ = l.length;\n    long[] temp24;\n    temp24.length = l.length;\n    long[] temp25;\n\
    \    temp25.length = l.length;\n    long[] temp26;\n    temp26.length = l.length;\n\
    \    long[] temp27;\n    temp27.length = l.length;\n    long[] temp28;\n    temp\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgo7ln0c7.d(69): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmpgo7ln0c7.d(75): Error: found `End of File` when expecting\
    \ `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpgo7ln0c7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    size_t j = 0;\n    foreach(long i; l)\n    {\n  \
    \      if(!ret.canFind(i))\n        {\n            ret[j] = i;\n            j++;\n\
    \        }\n    }\n    return ret[0..j];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp547fg0da.d(15): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp547fg0da.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n     \
    \   if(i == 0 || x != ret[i-1])\n        {\n            ret[i] = x;\n        \
    \    i++;\n        }\n    }\n    return ret[0..i];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyaf6atw0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x42834d]\\n??:? void tmpyaf6atw0.__unittest_L23_C1()\
    \ [0x42801c]\\n??:? void tmpyaf6atw0.__modtest() [0x4280cc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c42b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42b2be]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430549]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42b295]\\n??:? runModuleUnitTests [0x42c201]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428810]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428797]\\n??:? _d_run_main [0x428702]\\n??:? main [0x4280df]\\\
    n??:? __libc_start_main [0x3e98d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto r = l.dup;\n\
    \    r.sort;\n    r.unique;\n    return r;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5,\
    \ 9, 123]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl2dprdec.d(12): Error: no property `sort` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl2dprdec.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ SortedSet!(long)();\n    foreach(e; l)\n    {\n        s.insert(e);\n    }\n\
    \    return s.array;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6bcptij2.d(11): Error: template instance `SortedSet!long` template\
    \ `SortedSet` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp6bcptij2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    long[] seen;\n    foreach (long i; l) {\n        if (i in seen) {\n     \
    \       continue;\n        }\n        r ~= i;\n        seen ~= i;\n    }\n   \
    \ return r;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuuflemxr.d(14): Error: incompatible types for `(i) in (seen)`:\
    \ `long` and `long[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuuflemxr.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(result.canFind(i))\n\
    \            continue;\n        result ~= i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv10m4e21.d(14): Error: no property `canFind` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv10m4e21.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] ret2 = new long[l.length];\n    int i = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x in ret)\n            continue;\n\
    \        ret[i] = x;\n        i++;\n    }\n    ret2 = ret[0..i];\n    ret2.sort();\n\
    \    return ret2;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l) \n{\n    long[] ret = new long[l.length];\n    long[]\
    \ ret2 = new long[l.length];\n    int i = 0;\n    foreach(long x; l)\n    {\n\
    \        if(x in ret)\n            continue;\n        ret[i] = x;\n        i++;\n\
    \    }\n    ret2 = ret[0..i];\n    ret2.sort();\n    return ret2;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    long[] ret2 = new long[l.length];\n\
    \    int i = 0;\n    foreach(long x; l)\n    {\n        if(x in ret)\n       \
    \     continue;\n        ret[i] = x;\n        i++;\n    }\n    ret2 = ret[0..i];\n\
    \    ret2.sort();\n    return ret2;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpblmg3pwq.d(69): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpblmg3pwq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjy5xlsby.d(14): Error: no property `canFind` for type `long[]`\\\
    n/tmp/tmpjy5xlsby.d(19): Error: no property `sort` for type `long[]`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjy5xlsby.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpay1ip_2_.d(85): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpay1ip_2_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    long[] tmp;\n    int i;\n    int j;\n    int k;\n    int n;\n    int m;\n\
    \    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int\
    \ v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int aa;\n    int ab;\n\
    \    int ac;\n    int ad;\n    int ae;\n    int af;\n    int ag;\n    int ah;\n\
    \    int ai;\n    int aj;\n    int ak;\n    int al;\n    int am;\n    int an;\n\
    \    int ao;\n    int ap;\n    int aq;\n    int ar;\n    int as;\n    int at;\n\
    \    int au;\n    int av;\n    int aw;\n    int ax;\n    int ay;\n    int az;\n\
    \    int ba;\n    int bb;\n    int bc;\n    int bd;\n    int be;\n    int bf;\n\
    \    int bg;\n    int bh;\n    int bi;\n    int bj;\n    int bk;\n    int bl;\n\
    \    int bm;\n    int bn;\n    int bo;\n    int bp;\n    int bq;\n    int br;\n\
    \    int bs;\n    int bt;\n    int bu;\n    int bv;\n    int bw;\n    int bx;\n\
    \    int by;\n    int bz;\n    int ca;\n    int cb;\n    int cc;\n    int cd;\n\
    \    int ce;\n    int cf;\n    int cg;\n    int ch;\n    int ci;\n    int cj;\n\
    \    int ck;\n    int cl;\n    int cm;\n    int cn;\n    int co;\n    int cp;\n\
    \    int cq;\n    int cr;\n    int cs;\n    int ct;\n    int cu;\n    int cv;\n\
    \    int cw;\n    int cx;\n    int cy;\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9n3v0nyz.d(106): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9n3v0nyz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto result\
    \ = new long[];\n    foreach(e; l) \n    {\n        if(!result.canFind(e)) \n\
    \        {\n            result ~= e;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppf_qdpsn.d(11): Error: new can only create structs, dynamic arrays\
    \ or class objects, not `long[]`\\'s\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppf_qdpsn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[] tmp2\
    \ = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[] tmp4\
    \ = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[] tmp6\
    \ = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[] tmp8\
    \ = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[] tmp10\
    \ = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[] tmp12\
    \ = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[] tmp14\
    \ = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[] tmp16\
    \ = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[] tmp18\
    \ = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[] tmp20\
    \ = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[] tmp22\
    \ = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[] tmp24\
    \ = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[] tmp26\
    \ = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[] tmp28\
    \ = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[] tmp30\
    \ = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[] tmp32\
    \ = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[] tmp34\
    \ = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[] tmp36\
    \ = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe32fx2_c.d(48): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpe32fx2_c.d(48): Error: semicolon expected, not `unittest`\\n/tmp/tmpe32fx2_c.d(48):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpe32fx2_c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

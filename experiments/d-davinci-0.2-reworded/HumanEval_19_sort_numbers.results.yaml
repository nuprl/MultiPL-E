name: HumanEval_19_sort_numbers
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    auto nums_sorted =\
    \ nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_1ohvxqk.d(13): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_1ohvxqk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(int i, string num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuk5hgqms.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpuk5hgqms.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpuk5hgqms.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpuk5hgqms.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpuk5hgqms.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpuk5hgqms.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplvj5lel6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmplvj5lel6.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmplvj5lel6.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmplvj5lel6.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplvj5lel6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    switch(n)\n        {\n            case \"zero\": nums ~= 0; break;\n    \
    \        case \"one\": nums ~= 1; break;\n            case \"two\": nums ~= 2;\
    \ break;\n            case \"three\": nums ~= 3; break;\n            case \"four\"\
    : nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n          \
    \  case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n\
    \            case \"eight\": nums ~= 8; break;\n            case \"nine\": nums\
    \ ~= 9; break;\n        }\n    }\n    nums.sort;\n    string[] words;\n    foreach(n;\
    \ nums)\n    {\n        switch(n)\n        {\n            case 0: words ~= \"\
    zero\"; break;\n            case 1: words ~= \"one\"; break;\n            case\
    \ 2: words ~= \"two\"; break;\n            case 3: words ~= \"three\"; break;\n\
    \            case 4: words ~= \"four\"; break;\n            case 5: words ~= \"\
    five\"; break;\n            case 6: words ~= \"six\"; break;\n            case\
    \ 7: words ~= \"seven\"; break;\n            case 8: words ~= \"eight\"; break;\n\
    \            case 9: words ~= \"nine\"; break;\n        }\n    }\n    return words.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1xgp2glq.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp1xgp2glq.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmp1xgp2glq.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp1xgp2glq.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp1xgp2glq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpggq9ibj2.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpggq9ibj2.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpggq9ibj2.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpggq9ibj2.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpggq9ibj2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_nwpecmk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp_nwpecmk.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp_nwpecmk.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp_nwpecmk.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp_nwpecmk.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_nwpecmk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuvinw1wb.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpuvinw1wb.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpuvinw1wb.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpuvinw1wb.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuvinw1wb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdagvt02q.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdagvt02q.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpdagvt02q.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpdagvt02q.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpdagvt02q.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdagvt02q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                num_ints[i]\
    \ = 0;\n                break;\n            case \"one\":\n                num_ints[i]\
    \ = 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    string[]\
    \ sorted_nums = new string[nums.length];\n    foreach(int i, int num; num_ints)\n\
    \    {\n        switch(num)\n        {\n            case 0:\n                sorted_nums[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                sorted_nums[i]\
    \ = \"one\";\n                break;\n            case 2:\n                sorted_nums[i]\
    \ = \"two\";\n                break;\n            case 3:\n                sorted_nums[i]\
    \ = \"three\";\n                break;\n            case 4:\n                sorted_nums[i]\
    \ = \"four\";\n                break;\n            case 5:\n                sorted_nums[i]\
    \ = \"five\";\n                break;\n            case 6:\n                sorted_nums[i]\
    \ = \"six\";\n                break;\n            case 7:\n                sorted_nums[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                sorted_nums\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp73krok4n.d(83): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmp73krok4n.d(93): Error: found `End of File` when expecting\
    \ `}` following compound statement\\n/tmp/tmp73krok4n.d(93): Error: found `End\
    \ of File` when expecting `}` following compound statement\\n/tmp/tmp73krok4n.d(93):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp73krok4n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpypobb_c2.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpypobb_c2.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpypobb_c2.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpypobb_c2.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpypobb_c2.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpypobb_c2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt0pkpvak.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpt0pkpvak.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpt0pkpvak.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpt0pkpvak.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpt0pkpvak.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt0pkpvak.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp_nhmysj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp_nhmysj.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpp_nhmysj.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpp_nhmysj.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpp_nhmysj.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp_nhmysj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_dekkei0.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp_dekkei0.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp_dekkei0.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp_dekkei0.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_dekkei0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7l3qqwkx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp7l3qqwkx.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp7l3qqwkx.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7l3qqwkx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphm18ufsk.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmphm18ufsk.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmphm18ufsk.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmphm18ufsk.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphm18ufsk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = numeral_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_numeral(num);\n    }\n    return join(nums, \"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwps5t5i4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwps5t5i4.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmpwps5t5i4.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpwps5t5i4.d(22):\
    \ Error: undefined identifier `int_to_numeral`\\n/tmp/tmpwps5t5i4.d(24): Error:\
    \ undefined identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwps5t5i4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2zvjtcwi.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp2zvjtcwi.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmp2zvjtcwi.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2zvjtcwi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp32hcm95u.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp32hcm95u.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp32hcm95u.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp32hcm95u.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmp32hcm95u.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp32hcm95u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdu32_rb9.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpdu32_rb9.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpdu32_rb9.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpdu32_rb9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu32_rb9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = sort(nums);\n    return join(nums_sorted, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ofs_py_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4ofs_py_.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmp4ofs_py_.d(15): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp4ofs_py_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = to!int(num);\n    }\n    sort(num_ints);\n    string result = \"\";\n    foreach(num;\
    \ num_ints)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk86s8mgn.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpk86s8mgn.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpk86s8mgn.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpk86s8mgn.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpk86s8mgn.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpk86s8mgn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3swqmn14.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp3swqmn14.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3swqmn14.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp3swqmn14.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp3swqmn14.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3swqmn14.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    sort(nums);\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdveuxkq5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdveuxkq5.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpdveuxkq5.d(15): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpdveuxkq5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = numeral_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_numeral(num);\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3hxeibr9.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp3hxeibr9.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmp3hxeibr9.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp3hxeibr9.d(22): Error:\
    \ undefined identifier `int_to_numeral`\\n/tmp/tmp3hxeibr9.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp3hxeibr9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpndx0b2dz.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpndx0b2dz.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpndx0b2dz.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpndx0b2dz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcenxzj3f.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpcenxzj3f.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpcenxzj3f.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpcenxzj3f.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcenxzj3f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn87dwb00.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpn87dwb00.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpn87dwb00.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn87dwb00.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxvfhcr1z.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpxvfhcr1z.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpxvfhcr1z.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpxvfhcr1z.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxvfhcr1z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9d_korvl.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9d_korvl.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp9d_korvl.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp9d_korvl.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp9d_korvl.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9d_korvl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpps0znbo0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpps0znbo0.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpps0znbo0.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpps0znbo0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.array;\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1055j42_.d(83): Error: identifier expected following `package`\\\
    n/tmp/tmp1055j42_.d(83): Error: `;` expected\\n/tmp/tmp1055j42_.d(93): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1055j42_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    string[] nums_sorted =\
    \ nums.sort;\n    string result = \"\";\n    foreach(string num; nums_sorted)\n\
    \    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj2a8vhcm.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpj2a8vhcm.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpj2a8vhcm.d(20):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpj2a8vhcm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6ofgy_9.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpj6ofgy_9.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpj6ofgy_9.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpj6ofgy_9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6ofgy_9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptpykth4s.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmptpykth4s.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmptpykth4s.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmptpykth4s.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmptpykth4s.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptpykth4s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    string[] nums_sorted\
    \ = new string[nums.length];\n    foreach(int i, int num; nums_int)\n    {\n \
    \       nums_sorted[i] = int_to_num(num);\n    }\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkcdd79jq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpkcdd79jq.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpkcdd79jq.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpkcdd79jq.d(23):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpkcdd79jq.d(25): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkcdd79jq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = nums.map!(a => to!int(a)).array;\n    sort(nums_int);\n    return nums_int.map!(a\
    \ => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwj3_uev8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwj3_uev8.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpwj3_uev8.d(15):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpwj3_uev8.d(16):\
    \ Error: no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwj3_uev8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr4hz9br3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpr4hz9br3.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpr4hz9br3.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr4hz9br3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6nyuaef0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp6nyuaef0.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp6nyuaef0.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp6nyuaef0.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp6nyuaef0.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6nyuaef0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppe8t_0bw.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmppe8t_0bw.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmppe8t_0bw.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmppe8t_0bw.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmppe8t_0bw.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppe8t_0bw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] num_ints = new\
    \ int[nums.length];\n    foreach(int i, string num; nums)\n    {\n        num_ints[i]\
    \ = to!int(num);\n    }\n    sort(num_ints);\n    string result = \"\";\n    foreach(int\
    \ num; num_ints)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphtfq90sy.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmphtfq90sy.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmphtfq90sy.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmphtfq90sy.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmphtfq90sy.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphtfq90sy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppbytdflt.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmppbytdflt.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmppbytdflt.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppbytdflt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppa857au5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmppa857au5.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmppa857au5.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppa857au5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpimm_arhi.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpimm_arhi.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpimm_arhi.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpimm_arhi.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpimm_arhi.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpimm_arhi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp69pwao5_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp69pwao5_.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp69pwao5_.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp69pwao5_.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp69pwao5_.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69pwao5_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n   \
    \ return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvado0pyg.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvado0pyg.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvado0pyg.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpvado0pyg.d(23): Error: no property\
    \ `to` for type `int`\\n/tmp/tmpvado0pyg.d(25): Error: no property `stripRight`\
    \ for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvado0pyg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7vfn2zg0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp7vfn2zg0.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp7vfn2zg0.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp7vfn2zg0.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp7vfn2zg0.d(24):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7vfn2zg0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjdh0rff9.d(85): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmpjdh0rff9.d(95): Error: found `void` when expecting `,`\\n/tmp/tmpjdh0rff9.d(95):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpjdh0rff9.d(95): Error: expression\
    \ expected, not `}`\\n/tmp/tmpjdh0rff9.d(95): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpjdh0rff9.d(95): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmpjdh0rff9.d(95): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmpjdh0rff9.d(95): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpjdh0rff9.d(95): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpjdh0rff9.d(95):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjdh0rff9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzjoje8e4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpzjoje8e4.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpzjoje8e4.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpzjoje8e4.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpzjoje8e4.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpzjoje8e4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoccsxq46.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpoccsxq46.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpoccsxq46.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpoccsxq46.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpoccsxq46.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpoccsxq46.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvu4flcil.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvu4flcil.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpvu4flcil.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpvu4flcil.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpvu4flcil.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvu4flcil.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_x22x1r.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpb_x22x1r.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpb_x22x1r.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpb_x22x1r.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpb_x22x1r.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_x22x1r.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(immutable word; numbers.split())\n\
    \    {\n        nums ~= to!int(word);\n    }\n    sort(nums);\n    return join(nums.map!(to!string));\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkytfmsa2.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpkytfmsa2.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpkytfmsa2.d(19): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpkytfmsa2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwnjwckc9.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpwnjwckc9.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpwnjwckc9.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpwnjwckc9.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwnjwckc9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = num_to_int(nums[i]);\n    }\n    nums_int.sort;\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbwkuktw.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfbwkuktw.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpfbwkuktw.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpfbwkuktw.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpfbwkuktw.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpfbwkuktw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdpk_a_71.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpdpk_a_71.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpdpk_a_71.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpdpk_a_71.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdpk_a_71.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    nums ~= to!int(n);\n    }\n    sort(nums);\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppq_x0_4a.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmppq_x0_4a.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmppq_x0_4a.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmppq_x0_4a.d(24): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmppq_x0_4a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg21pwcgo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpg21pwcgo.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpg21pwcgo.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpg21pwcgo.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpg21pwcgo.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpg21pwcgo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = num_to_int(nums[i]);\n    }\n    nums_int.sort;\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzdt2k9cu.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpzdt2k9cu.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpzdt2k9cu.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpzdt2k9cu.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpzdt2k9cu.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpzdt2k9cu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdm7ut5cy.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpdm7ut5cy.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpdm7ut5cy.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpdm7ut5cy.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpdm7ut5cy.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdm7ut5cy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmporiexg_z.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmporiexg_z.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmporiexg_z.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmporiexg_z.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmporiexg_z.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmporiexg_z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfdzx83ej.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfdzx83ej.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpfdzx83ej.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpfdzx83ej.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpfdzx83ej.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfdzx83ej.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5eo7j14x.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp5eo7j14x.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp5eo7j14x.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp5eo7j14x.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp5eo7j14x.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eo7j14x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3p3_ifv3.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp3p3_ifv3.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp3p3_ifv3.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp3p3_ifv3.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3p3_ifv3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmputp3o1rb.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmputp3o1rb.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmputp3o1rb.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmputp3o1rb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9mqgbpgk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9mqgbpgk.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp9mqgbpgk.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp9mqgbpgk.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp9mqgbpgk.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp9mqgbpgk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp29oz61zk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp29oz61zk.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp29oz61zk.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp29oz61zk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4vlojsve.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4vlojsve.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4vlojsve.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4vlojsve.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4vlojsve.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4vlojsve.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2eiwqhda.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp2eiwqhda.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmp2eiwqhda.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2eiwqhda.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = numeralToInt(num);\n    }\n    num_ints.sort;\n    foreach(i, num; num_ints)\n\
    \    {\n        nums[i] = intToNumeral(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppdg487e4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmppdg487e4.d(17): Error: undefined identifier `numeralToInt`\\n/tmp/tmppdg487e4.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmppdg487e4.d(22): Error:\
    \ undefined identifier `intToNumeral`\\n/tmp/tmppdg487e4.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmppdg487e4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz8x15d3f.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpz8x15d3f.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpz8x15d3f.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpz8x15d3f.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpz8x15d3f.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8x15d3f.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split(\" \"))\n    {\n\
    \        nums ~= to!int(n);\n    }\n    nums.sort;\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcyuk0y4g.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpcyuk0y4g.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmpcyuk0y4g.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmpcyuk0y4g.d(24): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcyuk0y4g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] numsInt = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        numsInt[i] = to!int(num);\n\
    \    }\n    sort(numsInt);\n    foreach(int i, int num; numsInt)\n    {\n    \
    \    nums[i] = to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnhjb7kqv.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpnhjb7kqv.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpnhjb7kqv.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpnhjb7kqv.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpnhjb7kqv.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhjb7kqv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    string[] nums_str = new\
    \ string[nums.length];\n    foreach(i, num; nums_int)\n    {\n        nums_str[i]\
    \ = int_to_num(num);\n    }\n    return join(nums_str, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxwyd7_xq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpxwyd7_xq.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpxwyd7_xq.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpxwyd7_xq.d(23):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpxwyd7_xq.d(25): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxwyd7_xq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpegkz26n7.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpegkz26n7.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpegkz26n7.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpegkz26n7.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpegkz26n7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgclybjfe.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpgclybjfe.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpgclybjfe.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpgclybjfe.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgclybjfe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int i, int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbljesmlq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpbljesmlq.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpbljesmlq.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpbljesmlq.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpbljesmlq.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbljesmlq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpccb79gq6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpccb79gq6.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpccb79gq6.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpccb79gq6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Split the string into an array of strings\n    auto nums\
    \ = numbers.split(\" \");\n    // Convert the array of strings to an array of\
    \ ints\n    int[] nums_int = nums.map!(a => to!int(a)).array;\n    // Sort the\
    \ array of ints\n    nums_int.sort;\n    // Convert the array of ints to an array\
    \ of strings\n    string[] nums_str = nums_int.map!(a => to!string(a)).array;\n\
    \    // Join the array of strings into a single string\n    return nums_str.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9b58nbfs.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp9b58nbfs.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmp9b58nbfs.d(20):\
    \ Error: no property `map` for type `int[]`\\n/tmp/tmp9b58nbfs.d(22): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9b58nbfs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpavgsaoa5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpavgsaoa5.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpavgsaoa5.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpavgsaoa5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = nums.map!(a\
    \ => to!int(a)).array;\n    nums_int.sort;\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpovtppdp0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpovtppdp0.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpovtppdp0.d(15):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpovtppdp0.d(16): Error:\
    \ no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpovtppdp0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwjfcxnhx.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwjfcxnhx.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpwjfcxnhx.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpwjfcxnhx.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpwjfcxnhx.d(24):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwjfcxnhx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2wk0yav1.d(84): Error: found `unittest` instead of statement\\\
    n/tmp/tmp2wk0yav1.d(94): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmp2wk0yav1.d(94): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2wk0yav1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoqf5ziei.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpoqf5ziei.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpoqf5ziei.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpoqf5ziei.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpoqf5ziei.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqf5ziei.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpczylz2xo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpczylz2xo.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpczylz2xo.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpczylz2xo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        switch(num)\n        {\n\
    \            case \"zero\":\n                nums_int[i] = 0;\n              \
    \  break;\n            case \"one\":\n                nums_int[i] = 1;\n     \
    \           break;\n            case \"two\":\n                nums_int[i] = 2;\n\
    \                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] =\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu88omd5w.d(85): Error: expression expected, not `unittest`\\\
    n/tmp/tmpu88omd5w.d(86): Error: found `{` when expecting `;` following statement\\\
    n/tmp/tmpu88omd5w.d(95): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpu88omd5w.d(95): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu88omd5w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplxsh6ksg.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmplxsh6ksg.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmplxsh6ksg.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmplxsh6ksg.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplxsh6ksg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = num_to_int(nums[i]);\n\
    \    }\n    nums_int.sort;\n    string[] nums_sorted = new string[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_sorted[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1b0t0z5u.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1b0t0z5u.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp1b0t0z5u.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp1b0t0z5u.d(23): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmp1b0t0z5u.d(25): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp1b0t0z5u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbc20uhwf.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpbc20uhwf.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpbc20uhwf.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbc20uhwf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split(\" \"))\n    {\n\
    \        nums ~= to!int(n);\n    }\n    sort(nums);\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3ax65ca.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpn3ax65ca.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpn3ax65ca.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpn3ax65ca.d(24): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpn3ax65ca.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8zpzmdj0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp8zpzmdj0.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp8zpzmdj0.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp8zpzmdj0.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp8zpzmdj0.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp8zpzmdj0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // TODO: implement\n    string[] nums = numbers.split(\" \"\
    );\n    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n  \
    \  {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk0s6v1ca.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpk0s6v1ca.d(18): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpk0s6v1ca.d(20): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpk0s6v1ca.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpk0s6v1ca.d(25):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk0s6v1ca.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfv3yf4hj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpfv3yf4hj.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpfv3yf4hj.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfv3yf4hj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split(\" \"))\n    {\n\
    \        nums ~= to!int(n);\n    }\n    nums.sort;\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptr8ng_3w.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmptr8ng_3w.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmptr8ng_3w.d(22):\
    \ Error: template instance `to!string` template `to` is not defined, did you mean\
    \ No?\\n/tmp/tmptr8ng_3w.d(24): Error: no property `stripRight` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptr8ng_3w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwdbqhwxm.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwdbqhwxm.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpwdbqhwxm.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpwdbqhwxm.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpwdbqhwxm.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwdbqhwxm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp513bmnqg.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp513bmnqg.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp513bmnqg.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp513bmnqg.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp513bmnqg.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp513bmnqg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(immutable word; numbers.split)\n\
    \    {\n        switch(word)\n        {\n            case \"zero\": nums ~= 0;\
    \ break;\n            case \"one\": nums ~= 1; break;\n            case \"two\"\
    : nums ~= 2; break;\n            case \"three\": nums ~= 3; break;\n         \
    \   case \"four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n\
    \            case \"six\": nums ~= 6; break;\n            case \"seven\": nums\
    \ ~= 7; break;\n            case \"eight\": nums ~= 8; break;\n            case\
    \ \"nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string result;\n\
    \    foreach(immutable num; nums)\n    {\n        switch(num)\n        {\n   \
    \         case 0: result ~= \"zero \"; break;\n            case 1: result ~= \"\
    one \"; break;\n            case 2: result ~= \"two \"; break;\n            case\
    \ 3: result ~= \"three \"; break;\n            case 4: result ~= \"four \"; break;\n\
    \            case 5: result ~= \"five \"; break;\n            case 6: result ~=\
    \ \"six \"; break;\n            case 7: result ~= \"seven \"; break;\n       \
    \     case 8: result ~= \"eight \"; break;\n            case 9: result ~= \"nine\
    \ \"; break;\n        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd54zadmv.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpd54zadmv.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmpd54zadmv.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpd54zadmv.d(48): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpd54zadmv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl33rm3f4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpl33rm3f4.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpl33rm3f4.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpl33rm3f4.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpl33rm3f4.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpl33rm3f4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] num_values = nums.map!(a\
    \ => to!int(a)).array;\n    num_values.sort;\n    return num_values.map!(a =>\
    \ to!string(a)).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoq5sc3tk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpoq5sc3tk.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmpoq5sc3tk.d(15):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpoq5sc3tk.d(16): Error:\
    \ no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpoq5sc3tk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": num_ints[i] = 0; break;\n            case\
    \ \"one\": num_ints[i] = 1; break;\n            case \"two\": num_ints[i] = 2;\
    \ break;\n            case \"three\": num_ints[i] = 3; break;\n            case\
    \ \"four\": num_ints[i] = 4; break;\n            case \"five\": num_ints[i] =\
    \ 5; break;\n            case \"six\": num_ints[i] = 6; break;\n            case\
    \ \"seven\": num_ints[i] = 7; break;\n            case \"eight\": num_ints[i]\
    \ = 8; break;\n            case \"nine\": num_ints[i] = 9; break;\n        }\n\
    \    }\n    num_ints.sort;\n    foreach(i, num; num_ints)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6kcaakya.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp6kcaakya.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp6kcaakya.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp6kcaakya.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp6kcaakya.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp6kcaakya.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprbqw23iq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprbqw23iq.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmprbqw23iq.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmprbqw23iq.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprbqw23iq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjunjcwzg.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjunjcwzg.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpjunjcwzg.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpjunjcwzg.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpjunjcwzg.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjunjcwzg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuva2o28m.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpuva2o28m.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpuva2o28m.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpuva2o28m.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpuva2o28m.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpuva2o28m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyy_17d7t.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpyy_17d7t.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpyy_17d7t.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpyy_17d7t.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpyy_17d7t.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyy_17d7t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    auto nums_sorted =\
    \ nums.sort!((a, b) => to!int(a) < to!int(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2hg5tjro.d(13): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hg5tjro.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // TODO: Implement me\n    return \"\";\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptcigw3gk.d(21): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f25]\\n??:? void tmptcigw3gk.__unittest_L16_C1()\
    \ [0x427b12]\\n??:? void tmptcigw3gk.__modtest() [0x427ca8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbcf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aab5]\\n??:? runModuleUnitTests [0x42b9a5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428374]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282fb]\\n??:? _d_run_main [0x428266]\\n??:? main [0x427cbb]\\\
    n??:? __libc_start_main [0x6fa67554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyegdbz2s.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpyegdbz2s.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpyegdbz2s.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpyegdbz2s.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyegdbz2s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": nums_int[i] = 0; break;\n            case \"one\": nums_int[i]\
    \ = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n           \
    \ case \"three\": nums_int[i] = 3; break;\n            case \"four\": nums_int[i]\
    \ = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n          \
    \  case \"six\": nums_int[i] = 6; break;\n            case \"seven\": nums_int[i]\
    \ = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n         \
    \   case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort;\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyg8ih90y.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpyg8ih90y.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpyg8ih90y.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpyg8ih90y.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpyg8ih90y.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpyg8ih90y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplav84b59.d(90): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplav84b59.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= num ~ \" \"\
    ;\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnkp6u2u5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpnkp6u2u5.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpnkp6u2u5.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpnkp6u2u5.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpnkp6u2u5.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpnkp6u2u5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsxfu87h8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpsxfu87h8.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpsxfu87h8.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpsxfu87h8.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpsxfu87h8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(string num; numbers.split(\" \"))\n\
    \    {\n        nums ~= to!int(num);\n    }\n    sort(nums);\n    string ret;\n\
    \    foreach(int num; nums)\n    {\n        ret ~= to!string(num) ~ \" \";\n \
    \   }\n    return ret.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxpfz4js9.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpxpfz4js9.d(18): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmpxpfz4js9.d(22): Error: template instance `to!string` template\
    \ `to` is not defined, did you mean No?\\n/tmp/tmpxpfz4js9.d(24): Error: no property\
    \ `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpxpfz4js9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbjzt2gxs.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmpbjzt2gxs.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmpbjzt2gxs.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmpbjzt2gxs.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbjzt2gxs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    nums = new string[nums_int.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n   \
    \ }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsst087d_.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpsst087d_.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpsst087d_.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpsst087d_.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpsst087d_.d(25): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpsst087d_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = numeralToInt(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n\
    \    foreach(i, num; nums_int)\n    {\n        result ~= intToNumeral(num);\n\
    \        if(i != nums_int.length - 1)\n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph9cc19h0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmph9cc19h0.d(17): Error: undefined identifier `numeralToInt`\\n/tmp/tmph9cc19h0.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmph9cc19h0.d(23):\
    \ Error: undefined identifier `intToNumeral`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmph9cc19h0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3gbm3kz.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpj3gbm3kz.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpj3gbm3kz.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpj3gbm3kz.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpj3gbm3kz.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpj3gbm3kz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int i, int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg02hjbuo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpg02hjbuo.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpg02hjbuo.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpg02hjbuo.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpg02hjbuo.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpg02hjbuo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] numeral = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    int[] numeral_value\
    \ = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    string[] nums = numbers.split;\n    int[]\
    \ nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n   \
    \ {\n        nums_int[i] = numeral_value[numeral.indexOf(num)];\n    }\n    nums_int.sort;\n\
    \    foreach(int i, int num; nums_int)\n    {\n        nums[i] = numeral[numeral_value.indexOf(num)];\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqilwi25u.d(15): Error: no property `split` for type `string`\\\
    n/tmp/tmpqilwi25u.d(19): Error: no property `indexOf` for type `string[]`\\n/tmp/tmpqilwi25u.d(21):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpqilwi25u.d(24): Error:\
    \ no property `indexOf` for type `int[]`\\n/tmp/tmpqilwi25u.d(26): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpqilwi25u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2\
    \ = new string[nums.length];\n    int[] nums3 = new int[nums.length];\n    int[]\
    \ nums4 = new int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n\
    \    {\n        nums2[i] = num;\n        i++;\n    }\n    i = 0;\n    foreach(string\
    \ num; nums2)\n    {\n        if(num == \"zero\")\n        {\n            nums3[i]\
    \ = 0;\n        }\n        else if(num == \"one\")\n        {\n            nums3[i]\
    \ = 1;\n        }\n        else if(num == \"two\")\n        {\n            nums3[i]\
    \ = 2;\n        }\n        else if(num == \"three\")\n        {\n            nums3[i]\
    \ = 3;\n        }\n        else if(num == \"four\")\n        {\n            nums3[i]\
    \ = 4;\n        }\n        else if(num == \"five\")\n        {\n            nums3[i]\
    \ = 5;\n        }\n        else if(num == \"six\")\n        {\n            nums3[i]\
    \ = 6;\n        }\n        else if(num == \"seven\")\n        {\n            nums3[i]\
    \ = 7;\n        }\n        else if(num == \"eight\")\n        {\n            nums3[i]\
    \ = 8;\n        }\n        else if(num == \"nine\")\n        {\n            nums3[i]\
    \ = 9;\n        }\n        i++;\n    }\n    nums4 = nums3.dup;\n    nums4.sort;\n\
    \    i = 0;\n    foreach(int num; nums4)\n    {\n        if(num == 0)\n      \
    \  {\n            nums2[i] = \"zero\";\n        }\n        else if(num == 1)\n\
    \        {\n            nums2[i] = \"one\";\n        }\n        else if(num ==\
    \ 2)\n        {\n            nums2[\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptdev_hde.d(84): Error: expression expected, not `unittest`\\\
    n/tmp/tmptdev_hde.d(85): Error: found `{` when expecting `,`\\n/tmp/tmptdev_hde.d(86):\
    \ Error: expression expected, not `alias`\\n/tmp/tmptdev_hde.d(86): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmptdev_hde.d(86): Error: expression expected,\
    \ not `=`\\n/tmp/tmptdev_hde.d(86): Error: found `sort_numbers` when expecting\
    \ `,`\\n/tmp/tmptdev_hde.d(86): Error: expression expected, not `;`\\n/tmp/tmptdev_hde.d(88):\
    \ Error: found `assert` when expecting `,`\\n/tmp/tmptdev_hde.d(88): Error: found\
    \ `;` when expecting `,`\\n/tmp/tmptdev_hde.d(89): Error: found `;` when expecting\
    \ `,`\\n/tmp/tmptdev_hde.d(90): Error: found `;` when expecting `,`\\n/tmp/tmptdev_hde.d(91):\
    \ Error: found `;` when expecting `,`\\n/tmp/tmptdev_hde.d(92): Error: found `;`\
    \ when expecting `,`\\n/tmp/tmptdev_hde.d(93): Error: expression expected, not\
    \ `}`\\n/tmp/tmptdev_hde.d(94): Error: found `void` when expecting `,`\\n/tmp/tmptdev_hde.d(94):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmptdev_hde.d(94): Error: expression\
    \ expected, not `}`\\n/tmp/tmptdev_hde.d(94): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmptdev_hde.d(94): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmptdev_hde.d(94): Error: found `End of File` when expecting `;`\
    \ following statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptdev_hde.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjhsks2oa.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjhsks2oa.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpjhsks2oa.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpjhsks2oa.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpjhsks2oa.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjhsks2oa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ix2cbl0.d(85): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmp0ix2cbl0.d(95): Error: found `void` when expecting `,`\\n/tmp/tmp0ix2cbl0.d(95):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmp0ix2cbl0.d(95): Error: expression\
    \ expected, not `}`\\n/tmp/tmp0ix2cbl0.d(95): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmp0ix2cbl0.d(95): Error: found `End of File` when expecting\
    \ `]`\\n/tmp/tmp0ix2cbl0.d(95): Error: found `End of File` when expecting `;`\
    \ following statement\\n/tmp/tmp0ix2cbl0.d(95): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmp0ix2cbl0.d(95): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmp0ix2cbl0.d(95):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ix2cbl0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp72qebpao.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp72qebpao.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp72qebpao.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp72qebpao.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp72qebpao.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp72qebpao.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable int[] nums = numbers.split(\" \").map!(a => to!int(a)).sort();\n\
    \    return nums.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1hc4meqp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1hc4meqp.d(14): Error: no property `map` for type `immutable(int[])`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1hc4meqp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split)\n    {\n      \
    \  switch(n)\n        {\n            case \"zero\": nums ~= 0; break;\n      \
    \      case \"one\": nums ~= 1; break;\n            case \"two\": nums ~= 2; break;\n\
    \            case \"three\": nums ~= 3; break;\n            case \"four\": nums\
    \ ~= 4; break;\n            case \"five\": nums ~= 5; break;\n            case\
    \ \"six\": nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n\
    \            case \"eight\": nums ~= 8; break;\n            case \"nine\": nums\
    \ ~= 9; break;\n        }\n    }\n    nums.sort;\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        switch(n)\n        {\n            case 0: result ~= \"\
    zero \"; break;\n            case 1: result ~= \"one \"; break;\n            case\
    \ 2: result ~= \"two \"; break;\n            case 3: result ~= \"three \"; break;\n\
    \            case 4: result ~= \"four \"; break;\n            case 5: result ~=\
    \ \"five \"; break;\n            case 6: result ~= \"six \"; break;\n        \
    \    case 7: result ~= \"seven \"; break;\n            case 8: result ~= \"eight\
    \ \"; break;\n            case 9: result ~= \"nine \"; break;\n        }\n   \
    \ }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkv3t9go2.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpkv3t9go2.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmpkv3t9go2.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpkv3t9go2.d(48): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpkv3t9go2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = to!int(num);\n    }\n    num_ints.sort;\n    string result = \"\";\n    foreach(num;\
    \ num_ints)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy9p7rubs.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpy9p7rubs.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpy9p7rubs.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpy9p7rubs.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpy9p7rubs.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpy9p7rubs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        switch (nums[i])\n        {\n            case \"zero\":\n           \
    \     nums_int[i] = 0;\n                break;\n            case \"one\":\n  \
    \              nums_int[i] = 1;\n                break;\n            case \"two\"\
    :\n                nums_int[i] = 2;\n                break;\n            case\
    \ \"three\":\n                nums_int[i] = 3;\n                break;\n     \
    \       case \"four\":\n                nums_int[i] = 4;\n                break;\n\
    \            case \"five\":\n                nums_int[i] = 5;\n              \
    \  break;\n            case \"six\":\n                nums_int[i] = 6;\n     \
    \           break;\n            case \"seven\":\n                nums_int[i] =\
    \ 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        switch (nums_int[i])\n   \
    \     {\n            case 0:\n                nums[i] = \"zero\";\n          \
    \      break;\n            case 1:\n                nums[i] = \"one\";\n     \
    \           break;\n            case 2:\n                nums[i] = \"two\";\n\
    \                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwa80ix2t.d(83): Error: found `unittest` instead of statement\\\
    n/tmp/tmpwa80ix2t.d(93): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpwa80ix2t.d(93): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpwa80ix2t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split;\n    int[] nums = new int[words.length];\n\
    \    foreach(i, word; words)\n    {\n        nums[i] = word_to_num(word);\n  \
    \  }\n    sort(nums);\n    string result = \"\";\n    foreach(num; nums)\n   \
    \ {\n        result ~= num_to_word(num) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw1hzc6d4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpw1hzc6d4.d(17): Error: undefined identifier `word_to_num`\\n/tmp/tmpw1hzc6d4.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpw1hzc6d4.d(23):\
    \ Error: undefined identifier `num_to_word`\\n/tmp/tmpw1hzc6d4.d(25): Error: no\
    \ property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpw1hzc6d4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpttme_l_r.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpttme_l_r.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpttme_l_r.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpttme_l_r.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmpttme_l_r.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpttme_l_r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0azbelvk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp0azbelvk.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp0azbelvk.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp0azbelvk.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp0azbelvk.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0azbelvk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9e_h08ty.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9e_h08ty.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp9e_h08ty.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp9e_h08ty.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmp9e_h08ty.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9e_h08ty.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu9ietmnf.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpu9ietmnf.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpu9ietmnf.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu9ietmnf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcd36ell0.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcd36ell0.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcd36ell0.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpcd36ell0.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpcd36ell0.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcd36ell0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp6slnxn5.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpp6slnxn5.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpp6slnxn5.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpp6slnxn5.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpp6slnxn5.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp6slnxn5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptsqerfzp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmptsqerfzp.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmptsqerfzp.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmptsqerfzp.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmptsqerfzp.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmptsqerfzp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcqq3co41.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpcqq3co41.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpcqq3co41.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpcqq3co41.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpcqq3co41.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcqq3co41.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptfk1t_59.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmptfk1t_59.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmptfk1t_59.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmptfk1t_59.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmptfk1t_59.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptfk1t_59.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp28hm56q8.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp28hm56q8.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp28hm56q8.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp28hm56q8.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp28hm56q8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsa19q57k.d(90): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsa19q57k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr6111th2.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpr6111th2.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpr6111th2.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpr6111th2.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpr6111th2.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr6111th2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Split the string into an array of strings\n    string[]\
    \ nums = numbers.split(\" \");\n    // Create a new array of ints\n    int[] nums_int\
    \ = new int[nums.length];\n    // Iterate through the array of strings\n    foreach(i,\
    \ num; nums)\n    {\n        // Convert the string to an int\n        nums_int[i]\
    \ = to!int(num);\n    }\n    // Sort the array of ints\n    sort(nums_int);\n\
    \    // Create a new array of strings\n    string[] nums_str = new string[nums.length];\n\
    \    // Iterate through the array of ints\n    foreach(i, num; nums_int)\n   \
    \ {\n        // Convert the int to a string\n        nums_str[i] = to!string(num);\n\
    \    }\n    // Join the array of strings into a single string\n    return join(nums_str,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzqqcm6t3.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpzqqcm6t3.d(21): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpzqqcm6t3.d(24): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpzqqcm6t3.d(31): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpzqqcm6t3.d(34):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzqqcm6t3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvxy9vdl1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpvxy9vdl1.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpvxy9vdl1.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpvxy9vdl1.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpvxy9vdl1.d(24): Error: no\
    \ property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvxy9vdl1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpox8uqg12.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpox8uqg12.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpox8uqg12.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpox8uqg12.d(23): Error: no property\
    \ `to` for type `int`\\n/tmp/tmpox8uqg12.d(25): Error: no property `trim` for\
    \ type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpox8uqg12.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq4ehh4wy.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpq4ehh4wy.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpq4ehh4wy.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpq4ehh4wy.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpq4ehh4wy.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpq4ehh4wy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!(a, b => numeral_to_int(a) < numeral_to_int(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkt7lskr3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpkt7lskr3.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpkt7lskr3.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkt7lskr3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    import std.array : array;\n\
    \    import std.conv : to;\n    import std.range : iota;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq33ax3n.d(65): Error: identifier expected following `import`\\\
    n/tmp/tmphq33ax3n.d(65): Error: `;` expected\\n/tmp/tmphq33ax3n.d(75): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq33ax3n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbr1x41xt.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpbr1x41xt.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpbr1x41xt.d(21):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpbr1x41xt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw5ez8py3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpw5ez8py3.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpw5ez8py3.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpw5ez8py3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpst3akets.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpst3akets.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpst3akets.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpst3akets.d(23): Error: incompatible\
    \ types for `(num) ~ (\" \")`: `int` and `string`\\n/tmp/tmpst3akets.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpst3akets.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpba42qnpo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpba42qnpo.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpba42qnpo.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpba42qnpo.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpba42qnpo.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpba42qnpo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    nums_int.sort;\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplx9cwj0r.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmplx9cwj0r.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmplx9cwj0r.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmplx9cwj0r.d(22): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmplx9cwj0r.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmplx9cwj0r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) =>\
    \ numeralToInt(a) < numeralToInt(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpel1qbgwn.d(13): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpel1qbgwn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptqolz5j1.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmptqolz5j1.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmptqolz5j1.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmptqolz5j1.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqolz5j1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7dv4rp7v.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp7dv4rp7v.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp7dv4rp7v.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp7dv4rp7v.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7dv4rp7v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw3jjpfxc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpw3jjpfxc.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpw3jjpfxc.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpw3jjpfxc.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpw3jjpfxc.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpw3jjpfxc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                num_ints[i] = 0;\n   \
    \             break;\n            case \"one\":\n                num_ints[i] =\
    \ 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort();\n    foreach(i,\
    \ num; num_ints)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n                break;\n\
    \        }\n    }\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkfv7eems.d(89): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkfv7eems.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1d_dw_m3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1d_dw_m3.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp1d_dw_m3.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp1d_dw_m3.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp1d_dw_m3.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1d_dw_m3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ba8m3k2.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp9ba8m3k2.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp9ba8m3k2.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp9ba8m3k2.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ba8m3k2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ow0zkvq.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp3ow0zkvq.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp3ow0zkvq.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp3ow0zkvq.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp3ow0zkvq.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp3ow0zkvq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_wgoyha.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpb_wgoyha.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmpb_wgoyha.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpb_wgoyha.d(22):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmpb_wgoyha.d(24): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb_wgoyha.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n \
    \       {\n            case \"zero\":\n                nums_int[i] = 0;\n    \
    \            break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi6pog_vg.d(86): Error: found `unittest` instead of statement\\\
    n/tmp/tmpi6pog_vg.d(96): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpi6pog_vg.d(96): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpi6pog_vg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] ints = nums.map!(a\
    \ => to!int(a)).array;\n    sort(ints);\n    return ints.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1jhq2x9a.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1jhq2x9a.d(14): Error: no property `map` for type `string[]`\\n/tmp/tmp1jhq2x9a.d(15):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp1jhq2x9a.d(16):\
    \ Error: no property `map` for type `int[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1jhq2x9a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = numeralToInt(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = intToNumeral(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnf48dgt9.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpnf48dgt9.d(17): Error: undefined identifier `numeralToInt`\\n/tmp/tmpnf48dgt9.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpnf48dgt9.d(22):\
    \ Error: undefined identifier `intToNumeral`\\n/tmp/tmpnf48dgt9.d(24): Error:\
    \ no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpnf48dgt9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split)\n    {\n    \
    \    nums ~= num.to!int;\n    }\n    nums.sort;\n    string result;\n    foreach(num;\
    \ nums)\n    {\n        result ~= num.to!string;\n        result ~= \" \";\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvhpkjr_p.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpvhpkjr_p.d(18): Error: no property `sort` for type `int[]`\\n/tmp/tmpvhpkjr_p.d(22):\
    \ Error: no property `to` for type `int`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpvhpkjr_p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(immutable word; numbers.split)\n\
    \    {\n        switch(word)\n        {\n            case \"zero\": nums ~= 0;\
    \ break;\n            case \"one\": nums ~= 1; break;\n            case \"two\"\
    : nums ~= 2; break;\n            case \"three\": nums ~= 3; break;\n         \
    \   case \"four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n\
    \            case \"six\": nums ~= 6; break;\n            case \"seven\": nums\
    \ ~= 7; break;\n            case \"eight\": nums ~= 8; break;\n            case\
    \ \"nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string[]\
    \ words;\n    foreach(immutable num; nums)\n    {\n        switch(num)\n     \
    \   {\n            case 0: words ~= \"zero\"; break;\n            case 1: words\
    \ ~= \"one\"; break;\n            case 2: words ~= \"two\"; break;\n         \
    \   case 3: words ~= \"three\"; break;\n            case 4: words ~= \"four\"\
    ; break;\n            case 5: words ~= \"five\"; break;\n            case 6: words\
    \ ~= \"six\"; break;\n            case 7: words ~= \"seven\"; break;\n       \
    \     case 8: words ~= \"eight\"; break;\n            case 9: words ~= \"nine\"\
    ; break;\n        }\n    }\n    return words.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm6aaifhb.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmpm6aaifhb.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmpm6aaifhb.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpm6aaifhb.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpm6aaifhb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = numeral_to_int(nums[i]);\n    }\n    nums_int.sort;\n \
    \   for (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = int_to_numeral(nums_int[i]);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2rqo81lj.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp2rqo81lj.d(17): Error: undefined identifier `numeral_to_int`\\n/tmp/tmp2rqo81lj.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp2rqo81lj.d(22): Error:\
    \ undefined identifier `int_to_numeral`\\n/tmp/tmp2rqo81lj.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp2rqo81lj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = num_to_int(nums[i]);\n    }\n    nums_int.sort();\n   \
    \ for (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprqvm2rzb.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprqvm2rzb.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmprqvm2rzb.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmprqvm2rzb.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmprqvm2rzb.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmprqvm2rzb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpubfy0nhv.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpubfy0nhv.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpubfy0nhv.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpubfy0nhv.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpubfy0nhv.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpubfy0nhv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split)\n    {\n      \
    \  switch(n)\n        {\n            case \"zero\": nums ~= 0; break;\n      \
    \      case \"one\": nums ~= 1; break;\n            case \"two\": nums ~= 2; break;\n\
    \            case \"three\": nums ~= 3; break;\n            case \"four\": nums\
    \ ~= 4; break;\n            case \"five\": nums ~= 5; break;\n            case\
    \ \"six\": nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n\
    \            case \"eight\": nums ~= 8; break;\n            case \"nine\": nums\
    \ ~= 9; break;\n        }\n    }\n    nums.sort;\n    string[] nums_str;\n   \
    \ foreach(n; nums)\n    {\n        switch(n)\n        {\n            case 0: nums_str\
    \ ~= \"zero\"; break;\n            case 1: nums_str ~= \"one\"; break;\n     \
    \       case 2: nums_str ~= \"two\"; break;\n            case 3: nums_str ~= \"\
    three\"; break;\n            case 4: nums_str ~= \"four\"; break;\n          \
    \  case 5: nums_str ~= \"five\"; break;\n            case 6: nums_str ~= \"six\"\
    ; break;\n            case 7: nums_str ~= \"seven\"; break;\n            case\
    \ 8: nums_str ~= \"eight\"; break;\n            case 9: nums_str ~= \"nine\";\
    \ break;\n        }\n    }\n    return nums_str.join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0u8lydl8.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp0u8lydl8.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmp0u8lydl8.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp0u8lydl8.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp0u8lydl8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    sort(nums);\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp23g92nzd.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp23g92nzd.d(14): Error: undefined identifier `sort`, did you mean function\
    \ `sqrt`?\\n/tmp/tmp23g92nzd.d(15): Error: undefined identifier `join`, did you\
    \ mean function `main`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp23g92nzd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(int i, string num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(int num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpobyqxtyr.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpobyqxtyr.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpobyqxtyr.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpobyqxtyr.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpobyqxtyr.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpobyqxtyr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7b3v1pl4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp7b3v1pl4.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp7b3v1pl4.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp7b3v1pl4.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp7b3v1pl4.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp7b3v1pl4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split)\n    {\n    \
    \    switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n  \
    \          case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string result;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: result ~= \"zero \"; break;\n            case 1: result ~= \"one \"; break;\n\
    \            case 2: result ~= \"two \"; break;\n            case 3: result ~=\
    \ \"three \"; break;\n            case 4: result ~= \"four \"; break;\n      \
    \      case 5: result ~= \"five \"; break;\n            case 6: result ~= \"six\
    \ \"; break;\n            case 7: result ~= \"seven \"; break;\n            case\
    \ 8: result ~= \"eight \"; break;\n            case 9: result ~= \"nine \"; break;\n\
    \        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp21n_52bh.d(14): Error: no property `split` for type `string`\\\
    n/tmp/tmp21n_52bh.d(30): Error: no property `sort` for type `int[]`\\n/tmp/tmp21n_52bh.d(34):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp21n_52bh.d(48): Error: no property\
    \ `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp21n_52bh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                num_ints[i] = 0;\n   \
    \             break;\n            case \"one\":\n                num_ints[i] =\
    \ 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    string[]\
    \ num_strings = new string[nums.length];\n    foreach(i, num; num_ints)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                num_strings[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                num_strings[i]\
    \ = \"one\";\n                break;\n            case 2:\n                num_strings[i]\
    \ = \"two\";\n                break;\n            case 3:\n                num_strings[i]\
    \ = \"three\";\n                break;\n            case 4:\n                num_strings[i]\
    \ = \"four\";\n                break;\n            case 5:\n                num_strings[i]\
    \ = \"five\";\n                break;\n            case 6:\n                num_strings[i]\
    \ = \"six\";\n                break;\n            case 7:\n                num_strings[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                num_strings[i]\
    \ = \"eight\";\n                break;\n            case\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkbj8j9z8.d(85): Error: expression expected, not `unittest`\\\
    n/tmp/tmpkbj8j9z8.d(86): Error: found `{` when expecting `:`\\n/tmp/tmpkbj8j9z8.d(95):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpkbj8j9z8.d(95): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkbj8j9z8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp72wgidbs.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmp72wgidbs.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmp72wgidbs.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmp72wgidbs.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72wgidbs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1md80jjc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp1md80jjc.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp1md80jjc.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp1md80jjc.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmp1md80jjc.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp1md80jjc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4c_ow4l1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4c_ow4l1.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4c_ow4l1.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4c_ow4l1.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4c_ow4l1.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4c_ow4l1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphyhoprs1.d(89): Error: Implicit string concatenation is deprecated,\
    \ use \"nine\\\\x0aunittest\\\\x0a{\\\\x0a    alias candidate = sort_numbers;\\\
    \\x0a\\\\x0a    assert(candidate(\" ~ \") == \" instead\\n/tmp/tmphyhoprs1.d(89):\
    \ Error: Implicit string concatenation is deprecated, use \") == \" ~ \");\\\\\
    x0a    assert(candidate(\" instead\\n/tmp/tmphyhoprs1.d(90): Error: found `three`\
    \ when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(90): Error: found\
    \ `three` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(91): Error:\
    \ found `three` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(91):\
    \ Error: found `three` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(91):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `five` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `\") == \"` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `seven` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(92):\
    \ Error: found `nine` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(93):\
    \ Error: found `six` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(93):\
    \ Error: found `four` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(93):\
    \ Error: found `two` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\n/tmp/tmphyhoprs1.d(93):\
    \ Error: found `zero` when expecting `;` following statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphyhoprs1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    sort(nums_int);\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ join(nums_str, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpopx7r8lk.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpopx7r8lk.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpopx7r8lk.d(31):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmpopx7r8lk.d(35):\
    \ Error: `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpopx7r8lk.d(49): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpopx7r8lk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgh239kir.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpgh239kir.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpgh239kir.d(19): Error: no property `sort`\
    \ for type `int[]`\\n/tmp/tmpgh239kir.d(23): Error: template instance `to!string`\
    \ template `to` is not defined, did you mean No?\\n/tmp/tmpgh239kir.d(25): Error:\
    \ no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgh239kir.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmror40hc.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmror40hc.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpmror40hc.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmror40hc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgfzyt1oh.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpgfzyt1oh.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpgfzyt1oh.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpgfzyt1oh.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpgfzyt1oh.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgfzyt1oh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split(\" \");\n    int[] nums = new\
    \ int[words.length];\n    foreach(i, word; words)\n    {\n        switch(word)\n\
    \        {\n            case \"zero\": nums[i] = 0; break;\n            case \"\
    one\": nums[i] = 1; break;\n            case \"two\": nums[i] = 2; break;\n  \
    \          case \"three\": nums[i] = 3; break;\n            case \"four\": nums[i]\
    \ = 4; break;\n            case \"five\": nums[i] = 5; break;\n            case\
    \ \"six\": nums[i] = 6; break;\n            case \"seven\": nums[i] = 7; break;\n\
    \            case \"eight\": nums[i] = 8; break;\n            case \"nine\": nums[i]\
    \ = 9; break;\n        }\n    }\n    nums.sort;\n    foreach(i, num; nums)\n \
    \   {\n        switch(num)\n        {\n            case 0: words[i] = \"zero\"\
    ; break;\n            case 1: words[i] = \"one\"; break;\n            case 2:\
    \ words[i] = \"two\"; break;\n            case 3: words[i] = \"three\"; break;\n\
    \            case 4: words[i] = \"four\"; break;\n            case 5: words[i]\
    \ = \"five\"; break;\n            case 6: words[i] = \"six\"; break;\n       \
    \     case 7: words[i] = \"seven\"; break;\n            case 8: words[i] = \"\
    eight\"; break;\n            case 9: words[i] = \"nine\"; break;\n        }\n\
    \    }\n    return words.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7anjdis7.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp7anjdis7.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp7anjdis7.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp7anjdis7.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp7anjdis7.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp7anjdis7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiyeeerg3.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpiyeeerg3.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpiyeeerg3.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpiyeeerg3.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpiyeeerg3.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyeeerg3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmgv3b_a1.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpmgv3b_a1.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpmgv3b_a1.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmgv3b_a1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzo6fbgi6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpzo6fbgi6.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpzo6fbgi6.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpzo6fbgi6.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpzo6fbgi6.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzo6fbgi6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums) {\n        switch(num) {\n\
    \            case \"zero\": nums_int[i] = 0; break;\n            case \"one\"\
    : nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2; break;\n\
    \            case \"three\": nums_int[i] = 3; break;\n            case \"four\"\
    : nums_int[i] = 4; break;\n            case \"five\": nums_int[i] = 5; break;\n\
    \            case \"six\": nums_int[i] = 6; break;\n            case \"seven\"\
    : nums_int[i] = 7; break;\n            case \"eight\": nums_int[i] = 8; break;\n\
    \            case \"nine\": nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort();\n\
    \    foreach(i, num; nums_int) {\n        switch(num) {\n            case 0: nums[i]\
    \ = \"zero\"; break;\n            case 1: nums[i] = \"one\"; break;\n        \
    \    case 2: nums[i] = \"two\"; break;\n            case 3: nums[i] = \"three\"\
    ; break;\n            case 4: nums[i] = \"four\"; break;\n            case 5:\
    \ nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"; break;\n\
    \            case 7: nums[i] = \"seven\"; break;\n            case 8: nums[i]\
    \ = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n      \
    \  }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd2fpqltp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpd2fpqltp.d(16): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmpd2fpqltp.d(29):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmpd2fpqltp.d(31): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmpd2fpqltp.d(44): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpd2fpqltp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqukt3x8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmphqukt3x8.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmphqukt3x8.d(19):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmphqukt3x8.d(22): Error:\
    \ undefined identifier `int_to_num`\\n/tmp/tmphqukt3x8.d(24): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmphqukt3x8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgjmkprqi.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpgjmkprqi.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpgjmkprqi.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgjmkprqi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwlzmc1pp.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpwlzmc1pp.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpwlzmc1pp.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpwlzmc1pp.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpwlzmc1pp.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwlzmc1pp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp93mjihg6.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp93mjihg6.d(17): Error: `switch` statement without a `default`; use `final\
    \ switch` or add `default: assert(0);` or add `default: break;`\\n/tmp/tmp93mjihg6.d(31):\
    \ Error: no property `sort` for type `int[]`\\n/tmp/tmp93mjihg6.d(34): Error:\
    \ `switch` statement without a `default`; use `final switch` or add `default:\
    \ assert(0);` or add `default: break;`\\n/tmp/tmp93mjihg6.d(48): Error: no property\
    \ `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp93mjihg6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm4r0v_8c.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpm4r0v_8c.d(14): Error: no property `sort` for type `string[]`\\n/tmp/tmpm4r0v_8c.d(15):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpm4r0v_8c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpseub176y.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpseub176y.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpseub176y.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpseub176y.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpseub176y.d(25):\
    \ Error: no property `trim` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpseub176y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprmsro8lo.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmprmsro8lo.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmprmsro8lo.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprmsro8lo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa9mzcxny.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpa9mzcxny.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpa9mzcxny.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpa9mzcxny.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpa9mzcxny.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9mzcxny.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = num_to_int(nums[i]);\n    }\n    sort(nums_int);\n    string[]\
    \ nums_str = new string[nums.length];\n    for (int i = 0; i < nums.length; i++)\n\
    \    {\n        nums_str[i] = int_to_num(nums_int[i]);\n    }\n    return join(nums_str,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9z1uo7xu.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp9z1uo7xu.d(17): Error: undefined identifier `num_to_int`\\n/tmp/tmp9z1uo7xu.d(19):\
    \ Error: undefined identifier `sort`, did you mean function `sqrt`?\\n/tmp/tmp9z1uo7xu.d(23):\
    \ Error: undefined identifier `int_to_num`\\n/tmp/tmp9z1uo7xu.d(25): Error: undefined\
    \ identifier `join`, did you mean function `main`?\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9z1uo7xu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4roe__w8.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp4roe__w8.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp4roe__w8.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp4roe__w8.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp4roe__w8.d(25):\
    \ Error: no property `trimRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4roe__w8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjl5zn4ge.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjl5zn4ge.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpjl5zn4ge.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpjl5zn4ge.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpjl5zn4ge.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjl5zn4ge.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        switch (nums[i])\n        {\n            case \"zero\":\n           \
    \     nums_int[i] = 0;\n                break;\n            case \"one\":\n  \
    \              nums_int[i] = 1;\n                break;\n            case \"two\"\
    :\n                nums_int[i] = 2;\n                break;\n            case\
    \ \"three\":\n                nums_int[i] = 3;\n                break;\n     \
    \       case \"four\":\n                nums_int[i] = 4;\n                break;\n\
    \            case \"five\":\n                nums_int[i] = 5;\n              \
    \  break;\n            case \"six\":\n                nums_int[i] = 6;\n     \
    \           break;\n            case \"seven\":\n                nums_int[i] =\
    \ 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach (int num; nums_int)\n    {\n        switch (num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz326ezl5.d(87): Error: found `unittest` instead of statement\\\
    n/tmp/tmpz326ezl5.d(97): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpz326ezl5.d(97): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpz326ezl5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjs7t13_4.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpjs7t13_4.d(15): Error: no property `sort` for type `string[]`\\n/tmp/tmpjs7t13_4.d(16):\
    \ Error: no property `join` for type `string[]`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjs7t13_4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8h75rrar.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmp8h75rrar.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmp8h75rrar.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmp8h75rrar.d(22): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmp8h75rrar.d(24):\
    \ Error: undefined identifier `join`, did you mean function `main`?\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8h75rrar.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl4zwei6k.d(13): Error: no property `split` for type `string`\\\
    n/tmp/tmpl4zwei6k.d(17): Error: template instance `to!int` template `to` is not\
    \ defined, did you mean No?\\n/tmp/tmpl4zwei6k.d(19): Error: undefined identifier\
    \ `sort`, did you mean function `sqrt`?\\n/tmp/tmpl4zwei6k.d(23): Error: template\
    \ instance `to!string` template `to` is not defined, did you mean No?\\n/tmp/tmpl4zwei6k.d(25):\
    \ Error: no property `stripRight` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl4zwei6k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_66_digitSum
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptvnd8x7z.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvnd8x7z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzmwlw6rh.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzmwlw6rh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptirlmkb_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptirlmkb_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3lycv8yy.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3lycv8yy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa_27dm4v.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_27dm4v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_7zjwnm.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_7zjwnm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbckf_uns.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbckf_uns.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvikqkrgs.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvikqkrgs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpefz9nx5i.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpefz9nx5i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb6kur5q1.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb6kur5q1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpayirthmr.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpayirthmr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpek5jm5ju.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpek5jm5ju.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb0cm9413.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0cm9413.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppfqkbljj.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppfqkbljj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptl92prne.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptl92prne.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb88a_go_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb88a_go_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprfq79b_s.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprfq79b_s.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0b_uasap.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0b_uasap.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpukerhq04.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukerhq04.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp68eq6qag.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp68eq6qag.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw20qpisf.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw20qpisf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz72p58jx.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz72p58jx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lh8fbyl.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lh8fbyl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpofjo2897.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofjo2897.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaozehqof.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaozehqof.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdnqczypv.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdnqczypv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf9hykyu0.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9hykyu0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf7ee4uqd.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf7ee4uqd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeutimkzl.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeutimkzl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy_1xpcg7.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_1xpcg7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0yvhhrlp.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0yvhhrlp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1dlfhaa7.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dlfhaa7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcntuy8n1.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcntuy8n1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpddqfwpby.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpddqfwpby.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu32oisnr.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu32oisnr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdwg75f6x.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdwg75f6x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83_6l7ky.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83_6l7ky.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphg0hddqr.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphg0hddqr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfufg36u5.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfufg36u5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc4vx4i_6.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc4vx4i_6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbmten79i.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmten79i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ecsxzqe.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ecsxzqe.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2eyup0r6.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eyup0r6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwk8lpyw_.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk8lpyw_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzt9595fy.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzt9595fy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn4w98qs3.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4w98qs3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw6d67fh1.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6d67fh1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw3i6v4wp.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw3i6v4wp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6qrpboe_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qrpboe_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjtcb_c8w.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjtcb_c8w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt402iwlh.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt402iwlh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3o_jrr2.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj3o_jrr2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwf05gnro.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwf05gnro.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0iijtq3_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0iijtq3_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy8lrn64e.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8lrn64e.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if (c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjb3hqwjz.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjb3hqwjz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9e3m0eos.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9e3m0eos.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyy0bp6z4.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyy0bp6z4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppo2uljnu.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppo2uljnu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9p5uq5jh.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9p5uq5jh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7miap08g.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7miap08g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5__za5zb.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5__za5zb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsds65xi1.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsds65xi1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ foreach(c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n        {\n        \
    \    result += c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxnbf66n.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyxnbf66n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv0u2z4ec.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0u2z4ec.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1tb7h_69.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1tb7h_69.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5bg7v7ed.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5bg7v7ed.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn40i5_e7.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn40i5_e7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfkpj5i53.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkpj5i53.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6rx0cqcq.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rx0cqcq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp81_eqxqd.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81_eqxqd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyo37e_4c.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyo37e_4c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp2by9ukl.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp2by9ukl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6je9env7.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6je9env7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp44r9xi0_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp44r9xi0_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8iliuaro.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8iliuaro.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp39rw__ud.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp39rw__ud.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1pt0_ciy.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pt0_ciy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpli2xlzim.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpli2xlzim.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxihfgesp.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxihfgesp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1n1t1d_l.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1n1t1d_l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqb2djgt9.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqb2djgt9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy8y3xyxs.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8y3xyxs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6a3j1nsx.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6a3j1nsx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6qssfyk4.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qssfyk4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkt3zi9fh.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkt3zi9fh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppta4r1te.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppta4r1te.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5_fs_r97.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_fs_r97.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp13x9ppr0.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13x9ppr0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp28olu2z1.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp28olu2z1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp91hgytgi.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp91hgytgi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbghf0bu_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbghf0bu_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp02pfoa9l.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp02pfoa9l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmt6xtwxf.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmt6xtwxf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpracmo_2w.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpracmo_2w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpys8pojsq.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpys8pojsq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7olrcgbh.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7olrcgbh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaan17ufu.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaan17ufu.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpht8urwtc.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpht8urwtc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdht97sli.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdht97sli.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpix1yavet.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpix1yavet.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0rpzuig8.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rpzuig8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz0q6j6zl.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0q6j6zl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq_l363c2.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_l363c2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvibtoiwf.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvibtoiwf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphhx9y0qb.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphhx9y0qb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ln4lm68.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ln4lm68.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmojutnc_.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmojutnc_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdhxlx2e4.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdhxlx2e4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuktbnliw.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuktbnliw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8tt62ghb.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tt62ghb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw88y02e1.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw88y02e1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp3xxti5y.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3xxti5y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbl3qopg5.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbl3qopg5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n            sum += c;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4fq0icgo.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4fq0icgo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2lq0iarr.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lq0iarr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8tj3ve8m.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tj3ve8m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5yya89b4.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5yya89b4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp60on5w54.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp60on5w54.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4pb5ddr1.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4pb5ddr1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpflysa7vz.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpflysa7vz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjso39cab.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjso39cab.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpscb038e9.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpscb038e9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmumgit4l.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmumgit4l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            sum += c;\n      \
    \  }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8t8wpqxd.d(28): Error: undefined identifier `isUpper`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8t8wpqxd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2emxxkm8.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2emxxkm8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfby88qc4.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfby88qc4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp037f0m53.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp037f0m53.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp92ctwub3.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92ctwub3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpst05yv5p.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpst05yv5p.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c.isUpper)\n            sum += c;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnrsd4t1f.d(28): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnrsd4t1f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

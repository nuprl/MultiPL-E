name: HumanEval_12_longest
language: d
results:
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptors9ty_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmptors9ty_.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmptors9ty_.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x5aaba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(str; strings)\n\
    \    {\n        if(result.isNull || str.length > result.get.length)\n        {\n\
    \            result = str;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgl5mhvaf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpgl5mhvaf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpgl5mhvaf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3daa9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest is null || s.length > longest.get.length)\n      \
    \  {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg305ctcs.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpg305ctcs.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpg305ctcs.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x3366e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpajdn3kz1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpajdn3kz1.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpajdn3kz1.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x6c6d9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpodd_4yhd.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpodd_4yhd.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpodd_4yhd.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xcaa7e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6u08u0wp.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp6u08u0wp.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp6u08u0wp.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x53105554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr4ldc3ml.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpr4ldc3ml.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpr4ldc3ml.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x923b4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgxihopb5.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpgxihopb5.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpgxihopb5.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x6e88c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpudue934v.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpudue934v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest is null || s.length > longest.get.length) \n  \
    \      {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnamidhe5.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnamidhe5.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpnamidhe5.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x42e4f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz6fwm2i4.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpz6fwm2i4.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpz6fwm2i4.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb289c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9kl9js4f.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp9kl9js4f.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp9kl9js4f.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xea9ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp22m86g__.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp22m86g__.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp22m86g__.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xae721554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpubpis41q.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpubpis41q.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpubpis41q.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x6e2a0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp49a6pmom.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp49a6pmom.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp49a6pmom.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1957b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8a4frkuf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp8a4frkuf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp8a4frkuf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x4f52a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    /*\n    Out of array of strings, return the shortest one. Return the first one\
    \ in case of multiple\n    strings of the same length. Return null in case the\
    \ input array is empty.\n    >>> shortest([])\n    None\n    >>> shortest([\"\
    a\", \"b\", \"c\"])\n    \"a\"\n    >>> shortest([\"a\", \"bb\", \"ccc\"])\n \
    \   \"a\"\n*/\nNullable!(string) shortest(string[] strings) \n{\n    if (strings.length\
    \ == 0)\n        return null;\n    Nullable!(string) shortest = strings[0];\n\
    \    foreach (string s; strings)\n    {\n        if (s.length < shortest.length)\n\
    \            shortest = s;\n    }\n    return shortest;\n}\n/*\n    Out of array\
    \ of strings, return the one with the most vowels. Return the first one in case\
    \ of multiple\n    strings with the same number of vowels. Return null in case\
    \ the input array is empty.\n    >>> mostVowels([])\n    None\n    >>> mostVowels([\"\
    a\", \"b\", \"c\"])\n    \"a\"\n    >>> mostVowels([\"a\", \"bb\", \"ccc\"])\n\
    \    \"bb\"\n*/\nNullable!(string) mostVowels(string[] strings) \n{\n    if (strings.length\
    \ == 0)\n        return null;\n    Nullable!(string) mostVowels = strings[0];\n\
    \    foreach (string s; strings)\n    {\n        if (countVowels(s) > countVowels(mostVowels))\n\
    \            mostVowels = s;\n    }\n    return mostVowels;\n}\n/*\n    Out of\
    \ array of strings, return the one with the most consonants. Return the first\
    \ one in case of multiple\n    strings with the same number of consonants. Return\
    \ null in case the input\nunittest\n{\n    alias candidate = longest;\n\n{\n \
    \       auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n\
    \        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkz0j59ls.d(70): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkz0j59ls.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (s.length > result.length) \n        {\n            result\
    \ = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3ff016s9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmp3ff016s9.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmp3ff016s9.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x605ed554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\n/*\n    Out\
    \ of array of strings, return the shortest one. Return the first one in case of\
    \ multiple\n    strings of the same length. Return null in case the input array\
    \ is empty.\n    >>> shortest([])\n    None\n    >>> shortest([\"a\", \"b\", \"\
    c\"])\n    \"a\"\n    >>> shortest([\"a\", \"bb\", \"ccc\"])\n    \"a\"\n*/\n\
    Nullable!(string) shortest(string[] strings) \n{\n    Nullable!(string) result\
    \ = null;\n    foreach(string s; strings)\n    {\n        if (result is null ||\
    \ s.length < result.get.length)\n        {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\n/*\n    Out of array of strings, return the one\
    \ with the most vowels. Return the first one in case of multiple\n    strings\
    \ with the same number of vowels. Return null in case the input array is empty.\n\
    \    >>> mostVowels([])\n    None\n    >>> mostVowels([\"a\", \"b\", \"c\"])\n\
    \    \"a\"\n    >>> mostVowels([\"a\", \"bb\", \"ccc\"])\n    \"bb\"\n*/\nNullable!(string)\
    \ mostVowels(string[] strings) \n{\n    Nullable!(string) result = null;\n   \
    \ foreach(string s; strings)\n    {\n        if (result is null || countVowels(s)\
    \ > countVowels(result.get))\n        {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\n/*\n    Out of array of strings, return the one\
    \ with the least vowels. Return the first one in case of multiple\n    strings\
    \ with the same number of vowels. Return null in case the input array is empty.\n\
    \    >>> leastVowels([])\n    None\n    >>> leastVowels([\"a\",\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf5p6b7ul.d(70): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf5p6b7ul.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpevaj7uok.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpevaj7uok.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpevaj7uok.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xf04d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(str; strings)\n\
    \    {\n        if(result.isNull || str.length > result.get.length)\n        {\n\
    \            result = str;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzjbxh667.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpzjbxh667.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpzjbxh667.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x899d1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9aylaogi.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp9aylaogi.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp9aylaogi.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xccf9a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmbccucib.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpmbccucib.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpmbccucib.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x352c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi7ukzccb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpi7ukzccb.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpi7ukzccb.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x7421f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    string\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5rvp3h4v.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp5rvp3h4v.d(24): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5rvp3h4v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || longest.get.length < s.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt5furq_d.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpt5furq_d.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpt5furq_d.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x5a934554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0e9ocm3p.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp0e9ocm3p.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp0e9ocm3p.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xc7354554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5yu03ji7.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5yu03ji7.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5yu03ji7.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xca4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplaw67i7k.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmplaw67i7k.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmplaw67i7k.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x7f7ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyryp7nvf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpyryp7nvf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpyryp7nvf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3cf35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || longest.get.length < s.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvy1vfgmg.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpvy1vfgmg.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpvy1vfgmg.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xaccc8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_7asmfp1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_7asmfp1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp_7asmfp1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xfd99c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoj46xbir.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpoj46xbir.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpoj46xbir.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xeefc1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3j81_51e.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3j81_51e.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp3j81_51e.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x6f347554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdtkgw7nw.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpdtkgw7nw.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpdtkgw7nw.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xc9575554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf45qene_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpf45qene_.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpf45qene_.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xff90b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest is null || s.length > longest.length) \n      \
    \  {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp84hhwaqd.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp84hhwaqd.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp84hhwaqd.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xafef6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\n/*\n    Return\
    \ the longest string in the array.\n    >>> longest([\"a\", \"bb\", \"ccc\"])\n\
    \    \"ccc\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\"])\n    \"dddd\"\
    \n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"])\n    \"eeeee\"\
    \n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\", \"ffffff\"])\n\
    \    \"ffffff\"\n*/\nstring longest(string[] strings) \n{\n    string longest\
    \ = \"\";\n    foreach(string s; strings)\n    {\n        if(s.length > longest.length)\n\
    \        {\n            longest = s;\n        }\n    }\n    return longest;\n\
    }\n/*\n    Return the longest string in the array.\n    >>> longest([\"a\", \"\
    bb\", \"ccc\"])\n    \"ccc\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\"\
    ])\n    \"dddd\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"\
    ])\n    \"eeeee\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"\
    , \"ffffff\"])\n    \"ffffff\"\n*/\nstring longest(string[] strings) \n{\n   \
    \ string longest = \"\";\n    foreach(string s; strings)\n    {\n        if(s.length\
    \ > longest.length)\n        {\n            longest = s;\n        }\n    }\n \
    \   return longest;\n}\n/*\n    Return the longest string in the array.\n    >>>\
    \ longest([\"a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    >>> longest([\"a\", \"bb\"\
    , \"ccc\", \"dddd\"])\n    \"dddd\"\n\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn6vf0rbx.d(72): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn6vf0rbx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnmm3ut66.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnmm3ut66.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpnmm3ut66.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3ca1c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdly6r3bo.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpdly6r3bo.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpdly6r3bo.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb99f0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp03nobm7b.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp03nobm7b.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp03nobm7b.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1601c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr5jpa_jq.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpr5jpa_jq.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpr5jpa_jq.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x2e8b1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpna8id7v7.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpna8id7v7.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpna8id7v7.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x869de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo3046z2k.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpo3046z2k.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpo3046z2k.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x70a42554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu5hq6wzy.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpu5hq6wzy.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpu5hq6wzy.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xdf975554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdjkcohs4.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpdjkcohs4.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpdjkcohs4.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x3c0a7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpirs71vyu.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpirs71vyu.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpirs71vyu.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x303a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg23xzmii.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpg23xzmii.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpg23xzmii.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb9bfe554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdl01_hdj.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdl01_hdj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string str;\
    \ strings) \n    {\n        if(longest.isNull || str.length > longest.get.length)\
    \ \n        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjthpbvsf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpjthpbvsf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpjthpbvsf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x18e07554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr5mcmzw9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpr5mcmzw9.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpr5mcmzw9.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xa6a53554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8k9049lh.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp8k9049lh.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp8k9049lh.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x57a86554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaa5c6bzi.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpaa5c6bzi.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpaa5c6bzi.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x8d434554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.get.length) \n    \
    \    {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_rrq83k1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_rrq83k1.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp_rrq83k1.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xed571554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjur4llx1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpjur4llx1.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpjur4llx1.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xdfd63554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        string longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2z2b6ac2.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp2z2b6ac2.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2z2b6ac2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\n/*\n\
    \    Return the sum of all elements in the input array.\n    >>> sum([])\n   \
    \ 0\n    >>> sum([1, 2, 3])\n    6\n    >>> sum([-1, 1])\n    0\n*/\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzmkxch70.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpzmkxch70.__unittest_L35_C1()\
    \ [0x441437]\\n??:? void tmpzmkxch70.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x87485554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.length)\n        {\n \
    \           result = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpicpchq29.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpicpchq29.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpicpchq29.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x8792f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxbkvhucn.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpxbkvhucn.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpxbkvhucn.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3080d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpssn6p7p9.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpssn6p7p9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        for (size_t i = 1; i < strings.length;\
    \ i++)\n        {\n            if (strings[i].length > longest.length)\n     \
    \           longest = strings[i];\n        }\n        return longest;\n    }\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8udzuui1.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp8udzuui1.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8udzuui1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result.isNull || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5pzw0fzu.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5pzw0fzu.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5pzw0fzu.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x882ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4jiwqmur.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp4jiwqmur.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp4jiwqmur.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xfaf22554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx6ph0p2j.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpx6ph0p2j.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpx6ph0p2j.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xa4039554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyct5h42s.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyct5h42s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfbywqfid.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpfbywqfid.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpfbywqfid.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xf93a6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest is null || s.length > longest.length) \n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_70bfyh9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_70bfyh9.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp_70bfyh9.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x59b75554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp57ak5kls.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp57ak5kls.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp57ak5kls.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x46b62554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp61l7odh1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp61l7odh1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp61l7odh1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3477b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm7qg8nof.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpm7qg8nof.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpm7qg8nof.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x859cd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\n/*\n    Return\
    \ the longest string from the input array.\n    >>> longest([\"a\", \"bb\", \"\
    ccc\"])\n    \"ccc\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\"])\n  \
    \  \"dddd\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"])\n\
    \    \"eeeee\"\n    >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\",\
    \ \"ffffff\"])\n    \"ffffff\"\n*/\nstring longest(string[] strings) \n{\n   \
    \ string result = \"\";\n    foreach(string s; strings)\n    {\n        if(s.length\
    \ > result.length)\n        {\n            result = s;\n        }\n    }\n   \
    \ return result;\n}\n/*\n    Return the longest string from the input array.\n\
    \    >>> longest([\"a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    >>> longest([\"a\"\
    , \"bb\", \"ccc\", \"dddd\"])\n    \"dddd\"\n    >>> longest([\"a\", \"bb\", \"\
    ccc\", \"dddd\", \"eeeee\"])\n    \"eeeee\"\n    >>> longest([\"a\", \"bb\", \"\
    ccc\", \"dddd\", \"eeeee\", \"ffffff\"])\n    \"ffffff\"\n*/\nstring longest(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string s; strings)\n  \
    \  {\n        if(s.length > result.length)\n        {\n            result = s;\n\
    \        }\n    }\n    return result;\n}\n/*\n    Return the longest string from\
    \ the input array.\n    >>> longest([\"a\", \"bb\", \"ccc\"])\n    \"ccc\"\n \
    \   >>> longest([\"a\", \"bb\", \"ccc\", \"dddd\"])\n    \"dddd\"\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbf17o0cg.d(72): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbf17o0cg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy5nmyvg9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpy5nmyvg9.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpy5nmyvg9.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfbbfd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzqdpiwej.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpzqdpiwej.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpzqdpiwej.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xd6357554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result.isNull || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5wgtnjtg.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5wgtnjtg.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5wgtnjtg.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xc2e15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3dmv6n9k.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3dmv6n9k.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp3dmv6n9k.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xe3bc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqhzub3p_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpqhzub3p_.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpqhzub3p_.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xa2235554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_c1bfek7.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_c1bfek7.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp_c1bfek7.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x6342d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.get.length) \n    \
    \    {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2alfx0ky.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp2alfx0ky.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp2alfx0ky.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x941d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (s; strings)\n   \
    \         if (s.length > longest.length)\n                longest = s;\n     \
    \   return longest;\n    }\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf2ts46_e.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpf2ts46_e.d(24): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2ts46_e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3wvn1f4w.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3wvn1f4w.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp3wvn1f4w.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xd6830554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm4xmqcod.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpm4xmqcod.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpm4xmqcod.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x41ee2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplrdihxev.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmplrdihxev.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmplrdihxev.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xeb3d1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3uw4y55z.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3uw4y55z.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp3uw4y55z.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xcd13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpljy6wokx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpljy6wokx.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpljy6wokx.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x20bd1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbaupcw0p.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpbaupcw0p.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpbaupcw0p.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfd1e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppolokjoq.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmppolokjoq.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmppolokjoq.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x20eaf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (s.length > result.length)\n        {\n            result =\
    \ s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4fzhg3r4.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmp4fzhg3r4.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmp4fzhg3r4.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x3d495554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        Nullable!(string) longest = strings[0];\n        foreach (string\
    \ s; strings)\n        {\n            if (s.length > longest.length)\n       \
    \         longest = s;\n        }\n        return longest;\n    }\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3ho64q6.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpj3ho64q6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfyyulqtv.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpfyyulqtv.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpfyyulqtv.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xb5ed5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7ongwsqo.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp7ongwsqo.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp7ongwsqo.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb9188554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    auto longest\
    \ = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    /*\n    Given a string, return a new string with the reversed order of characters.\n\
    \    >>> reverse(\"hello\")\n    \"olleh\"\n    >>> reverse(\"\")\n    \"\"\n\
    */\nstring reverse(string s) \n{\n    string result;\n    foreach (char c; s)\n\
    \        result = c ~ result;\n    return result;\n}\n/*\n    Given a string,\
    \ return a new string where the first and last chars have been exchanged.\n  \
    \  >>> front_back(\"code\")\n    \"eodc\"\n    >>> front_back(\"a\")\n    \"a\"\
    \n    >>> front_back(\"ab\")\n    \"ba\"\n*/\nstring front_back(string s) \n{\n\
    \    if (s.length <= 1)\n        return s;\n    return s[$-1 .. $] ~ s[1 .. $-2]\
    \ ~ s[0 .. 1];\n}\n/*\n    Given a string, return a new string where the first\
    \ and last chars have been exchanged.\n    >>> front_back(\"code\")\n    \"eodc\"\
    \n    >>> front_back(\"a\")\n    \"a\"\n    >>> front_back(\"ab\")\n    \"ba\"\
    \n*/\nstring front_back(string s) \n{\n    if (s.length <= 1)\n        return\
    \ s;\n    return s[$-1 .. $] ~ s[1 .. $-2] ~ s[0 .. 1];\n}\n/*\n    Given a string,\
    \ return a new string where the first and last chars have been exchanged.\n  \
    \  >>> front_back(\"code\")\n    \"eodc\"\n    >>> front_back(\"a\")\n    \"a\"\
    \n    >>> front_back(\"ab\")\n    \"ba\"\n*/\nstring front_back(string s) \n{\n\
    \    if (s.length <= 1)\n        return s;\n    return s[$-1 .. $] ~ s[1 .. $-\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp68q7yjog.d(84): Error: expression expected, not `unittest`\\\
    n/tmp/tmp68q7yjog.d(85): Error: found `{` when expecting `,`\\n/tmp/tmp68q7yjog.d(86):\
    \ Error: expression expected, not `alias`\\n/tmp/tmp68q7yjog.d(86): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmp68q7yjog.d(86): Error: expression expected,\
    \ not `=`\\n/tmp/tmp68q7yjog.d(86): Error: found `longest` when expecting `,`\\\
    n/tmp/tmp68q7yjog.d(86): Error: expression expected, not `;`\\n/tmp/tmp68q7yjog.d(88):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmp68q7yjog.d(89): Error: expression\
    \ expected, not `auto`\\n/tmp/tmp68q7yjog.d(89): Error: found `result` when expecting\
    \ `,`\\n/tmp/tmp68q7yjog.d(89): Error: expression expected, not `=`\\n/tmp/tmp68q7yjog.d(89):\
    \ Error: found `candidate` when expecting `,`\\n/tmp/tmp68q7yjog.d(89): Error:\
    \ found `;` when expecting `,`\\n/tmp/tmp68q7yjog.d(90): Error: found `;` when\
    \ expecting `,`\\n/tmp/tmp68q7yjog.d(91): Error: expression expected, not `}`\\\
    n/tmp/tmp68q7yjog.d(93): Error: found `{` when expecting `,`\\n/tmp/tmp68q7yjog.d(94):\
    \ Error: expression expected, not `auto`\\n/tmp/tmp68q7yjog.d(94): Error: found\
    \ `result` when expecting `,`\\n/tmp/tmp68q7yjog.d(94): Error: expression expected,\
    \ not `=`\\n/tmp/tmp68q7yjog.d(94): Error: found `candidate` when expecting `,`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp68q7yjog.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbn1mqus1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpbn1mqus1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpbn1mqus1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x7f0f2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkkgphrjd.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpkkgphrjd.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpkkgphrjd.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x81c68554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.length)\n        {\n \
    \           result = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfcmk3m48.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpfcmk3m48.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpfcmk3m48.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xa3faf554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmy3kkf6o.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpmy3kkf6o.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpmy3kkf6o.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x8a15f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6xf0z0m7.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp6xf0z0m7.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6xf0z0m7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    auto result\
    \ = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > result.length)\n            result = s;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxxo8ho0.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpdxxo8ho0.d(24): Error:\
    \ cannot implicitly convert expression `result` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxxo8ho0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4355v0mb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp4355v0mb.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp4355v0mb.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x27326554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(result is null || s.length > result.get.length) \n     \
    \   {\n            result = s;\n        }\n    }\n    return result;\n}\n/*\n\
    \    >>> longest([\"a\", \"bb\", \"ccc\", \"dd\"])\n    \"ccc\"\n*/\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgayoswsb.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpgayoswsb.__unittest_L30_C1()\
    \ [0x44143b]\\n??:? void tmpgayoswsb.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xf161e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb5czksow.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpb5czksow.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpb5czksow.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x3e393554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiymsy1qf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpiymsy1qf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpiymsy1qf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xacd4d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnoxrunfz.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnoxrunfz.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpnoxrunfz.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x7b68f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjjvnj0l1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpjjvnj0l1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpjjvnj0l1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x63cee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi_jrxoop.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpi_jrxoop.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpi_jrxoop.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x22661554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5n4s7xfm.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5n4s7xfm.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5n4s7xfm.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xac553554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp87zu0cf9.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp87zu0cf9.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp87zu0cf9.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3e718554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2v_kbv2h.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp2v_kbv2h.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp2v_kbv2h.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x563e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.get.length) \n    \
    \    {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_yyxxr4a.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_yyxxr4a.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp_yyxxr4a.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x1ab13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result.isNull || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmps0q15tnk.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmps0q15tnk.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmps0q15tnk.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x83474554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnq0yzgx1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnq0yzgx1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpnq0yzgx1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xceb20554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp91j9v3qp.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp91j9v3qp.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp91j9v3qp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqchm9om2.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpqchm9om2.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpqchm9om2.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0xbff69554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsneuq4e3.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpsneuq4e3.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsneuq4e3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvp81hsgc.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpvp81hsgc.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpvp81hsgc.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x91ea4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.get.length) \n    \
    \    {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzh6xatrg.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpzh6xatrg.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpzh6xatrg.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xa2f5d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(str; strings)\n\
    \    {\n        if (result is null || str.length > result.length)\n        {\n\
    \            result = str;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpo_l6mmdq.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpo_l6mmdq.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpo_l6mmdq.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xe765d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpar9lzs1w.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpar9lzs1w.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpar9lzs1w.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x40d07554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpioyopt1g.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpioyopt1g.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpioyopt1g.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x935cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result.isNull || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp267grma4.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp267grma4.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp267grma4.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xbad39554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi0xfvh6z.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpi0xfvh6z.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpi0xfvh6z.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x7b930554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfmaew5tz.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpfmaew5tz.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfmaew5tz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        string longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\n/*\n    Return the sum of\
    \ all elements in the input array.\n    >>> sum([1, 2, 3])\n    6\n    >>> sum([])\n\
    \    0\n*/\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result\
    \ = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull && result.get\
    \ == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\"\
    , \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get ==\
    \ \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp824tq740.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmp824tq740.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp824tq740.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5a5ch2ye.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5a5ch2ye.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5a5ch2ye.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x2e289554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto result = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > result.length)\n                result\
    \ = s;\n        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyygfq5ny.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpyygfq5ny.d(26): Error:\
    \ cannot implicitly convert expression `result` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyygfq5ny.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(s.length > result.length) \n        {\n            result\
    \ = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpulrixoqw.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpulrixoqw.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpulrixoqw.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x6f83c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest;\n    foreach(str; strings)\n  \
    \  {\n        if(longest.isNull || longest.get.length < str.length)\n        \
    \    longest = str;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp396pnjij.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp396pnjij.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp396pnjij.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xd568e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3rpsr1fe.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3rpsr1fe.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp3rpsr1fe.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xe600a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < str.length)\n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnv0ojxsk.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnv0ojxsk.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpnv0ojxsk.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x47c84554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(str; strings)\n\
    \    {\n        if(result.isNull || str.length > result.get.length)\n        {\n\
    \            result = str;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqgd7_eyu.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpqgd7_eyu.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpqgd7_eyu.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x7f0cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto max = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > max.length)\n                max = s;\n\
    \        }\n        return max;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmmquhvkn.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpmmquhvkn.d(26): Error:\
    \ cannot implicitly convert expression `max` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmmquhvkn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5i8f60nh.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5i8f60nh.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp5i8f60nh.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xaaac7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(longest.isNull || str.length > longest.get.length)\n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi3p2eiji.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpi3p2eiji.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpi3p2eiji.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xd2e02554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(str; strings)\n\
    \    {\n        if(result is null || str.length > result.length)\n        {\n\
    \            result = str;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbzkah4yi.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpbzkah4yi.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpbzkah4yi.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb37f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv6ufz3b8.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpv6ufz3b8.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpv6ufz3b8.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xbf681554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfwajt9ba.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpfwajt9ba.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpfwajt9ba.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x8205f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ longest = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > longest.length)\n            longest = s;\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvzstaeld.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvzstaeld.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(str.length > longest.length)\n        {\n            longest\
    \ = str;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw1xhpuy4.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpw1xhpuy4.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpw1xhpuy4.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x8cf81554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4ogn9xgh.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp4ogn9xgh.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp4ogn9xgh.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x887b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprjp43b9y.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmprjp43b9y.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmprjp43b9y.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x97b74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(result is null || s.length > result.get.length) \n     \
    \   {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd0v763s3.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpd0v763s3.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpd0v763s3.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x601f9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9atf5jax.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp9atf5jax.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp9atf5jax.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x24f6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd6xn7_1z.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpd6xn7_1z.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpd6xn7_1z.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xaae0a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < str.length)\n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx8wrxzrb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpx8wrxzrb.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpx8wrxzrb.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xf23c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        auto longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwbu465ry.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmpwbu465ry.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbu465ry.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpleweu28k.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpleweu28k.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpleweu28k.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xe7aba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe0b3y4b5.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpe0b3y4b5.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpe0b3y4b5.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1c42d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(longest.isNull || str.length > longest.get.length)\n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa0owaocb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpa0owaocb.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpa0owaocb.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3e0ca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest.isNull || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnd8t3ftb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnd8t3ftb.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpnd8t3ftb.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x82cca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptppu3rlf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmptppu3rlf.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmptppu3rlf.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1de0a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5qvqgqve.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp5qvqgqve.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp5qvqgqve.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x9e84a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyns9cv8n.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpyns9cv8n.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpyns9cv8n.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x4a54a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx3571_1f.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpx3571_1f.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpx3571_1f.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xf05d6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    Nullable!(string)\
    \ result = strings[0];\n    foreach (string s; strings)\n    {\n        if (s.length\
    \ > result.length)\n            result = s;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc3ywo21v.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpc3ywo21v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpce6nlqqx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpce6nlqqx.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpce6nlqqx.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xfa742554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if (longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpox348jie.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpox348jie.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpox348jie.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x29147554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest is null || s.length > longest.length) \n      \
    \  {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd0xnt8bi.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpd0xnt8bi.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpd0xnt8bi.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x54e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || longest.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl31iincp.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpl31iincp.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpl31iincp.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xea80d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3dwizng6.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3dwizng6.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp3dwizng6.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xa2cdd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvsgn__a3.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpvsgn__a3.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpvsgn__a3.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x68c00554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3bmktml2.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3bmktml2.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp3bmktml2.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xf8f6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm6vffaik.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpm6vffaik.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpm6vffaik.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x33257554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.length)\n        {\n  \
    \          result = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj0mh7cki.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpj0mh7cki.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpj0mh7cki.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x4d813554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpom2vipa7.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpom2vipa7.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpom2vipa7.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xf057e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd3q4e14m.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpd3q4e14m.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpd3q4e14m.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x5983554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest;\n    foreach(str; strings)\n  \
    \  {\n        if(longest.isNull || str.length > longest.get.length)\n        \
    \    longest = str;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl2x5jncc.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpl2x5jncc.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpl2x5jncc.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x2866c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest is null || s.length > longest.get.length) \n  \
    \      {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsa5f9odc.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpsa5f9odc.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpsa5f9odc.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x1c3b3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnws3zal0.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpnws3zal0.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpnws3zal0.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfce24554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9fn1mclh.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp9fn1mclh.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp9fn1mclh.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xd20c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp17sacv5l.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp17sacv5l.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp17sacv5l.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x3cdf8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph1sfhfl_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmph1sfhfl_.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmph1sfhfl_.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x896b9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(longest.isNull || s.length > longest.get.length) \n    \
    \    {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9lj6xwdd.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp9lj6xwdd.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp9lj6xwdd.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0xb4ea4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1jm80pqp.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp1jm80pqp.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp1jm80pqp.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x4a4d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpc7qkridb.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpc7qkridb.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpc7qkridb.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x58996554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2a5q0i50.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp2a5q0i50.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp2a5q0i50.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x32f67554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd490symp.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpd490symp.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpd490symp.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x64df9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.length) \n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptorxkhpf.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmptorxkhpf.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmptorxkhpf.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xb9680554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2hhqv65g.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp2hhqv65g.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp2hhqv65g.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xf2e73554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || longest.get.length < s.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwgrvcuw0.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpwgrvcuw0.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpwgrvcuw0.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x50e13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest;\n    foreach(str; strings) \n \
    \   {\n        if(longest.isNull || str.length > longest.get.length) \n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_pifwscx.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp_pifwscx.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp_pifwscx.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x7d988554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.length)\n        {\n \
    \           result = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvsw2h1lt.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpvsw2h1lt.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpvsw2h1lt.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x32720554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > longest.length)\n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp13_4_3i8.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmp13_4_3i8.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmp13_4_3i8.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0x8fc44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest is null || s.length > longest.get.length)\n       \
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqampbtoi.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpqampbtoi.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpqampbtoi.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfee15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (result is null || s.length > result.length) \n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkoeeti84.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpkoeeti84.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpkoeeti84.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x1f37c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if (result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2vh0xrwl.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp2vh0xrwl.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp2vh0xrwl.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x2374d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    if (strings.length == 0)\n        return null;\n    else\n\
    \    {\n        string longest = strings[0];\n        foreach (string s; strings)\n\
    \        {\n            if (s.length > longest.length)\n                longest\
    \ = s;\n        }\n        return longest;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq9rf7ni.d(17): Error: cannot implicitly convert expression `null`\
    \ of type `typeof(null)` to `Nullable!string`\\n/tmp/tmphq9rf7ni.d(26): Error:\
    \ cannot implicitly convert expression `longest` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq9rf7ni.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3jxzd249.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp3jxzd249.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp3jxzd249.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfba1d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsfh029p1.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpsfh029p1.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpsfh029p1.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x5a9e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result is null || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4wzmzll5.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp4wzmzll5.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmp4wzmzll5.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xcabb9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(s.length > longest.getOrElse(\"\").length) \n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbnfjpy6i.d(19): Error: no property `getOrElse` for type `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnfjpy6i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(str; strings)\n\
    \    {\n        if(longest.isNull || str.length > longest.get.length)\n      \
    \  {\n            longest = str;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8ntmrc1s.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmp8ntmrc1s.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmp8ntmrc1s.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x60263554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\n\
    \    {\n        if(longest.isNull || s.length > longest.get.length)\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx53ajf28.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpx53ajf28.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpx53ajf28.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1075a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(result is null || s.length > result.get.length) \n     \
    \   {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvyrnm5uk.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpvyrnm5uk.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpvyrnm5uk.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xfa3ab554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\
    \ \n    {\n        if(result is null || s.length > result.get.length) \n     \
    \   {\n            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz81ezd8c.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpz81ezd8c.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpz81ezd8c.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0xa54c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > result.length)\n        {\n            result =\
    \ s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpf6skthth.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554a1]\\n??:? void tmpf6skthth.__unittest_L26_C1()\
    \ [0x44142b]\\n??:? void tmpf6skthth.__modtest() [0x452fb0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e317]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ace]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d50]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454aa5]\\n??:? runModuleUnitTests [0x45e0ed]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45642c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563b3]\\n??:? _d_run_main [0x45631e]\\n??:? main [0x453083]\\\
    n??:? __libc_start_main [0xc1807554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(s; strings)\
    \ \n    {\n        if (longest is null || s.length > longest.length) \n      \
    \  {\n            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxfpyon17.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpxfpyon17.__unittest_L26_C1()\
    \ [0x44143b]\\n??:? void tmpxfpyon17.__modtest() [0x452fc0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x453093]\\\
    n??:? __libc_start_main [0x4f8d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) longest = null;\n    foreach(string s; strings)\
    \ \n    {\n        if (longest.isNull || s.length > longest.get.length) \n   \
    \     {\n            longest = s;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn7qd92xl.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpn7qd92xl.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpn7qd92xl.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x1a7f3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.typecons;\nimport std.math;\n/*\n Out of array of strings,\
    \ return the longest one. Return the first one in case of multiple\n    strings\
    \ of the same length. Return null in case the input array is empty.\n    >>> longest([])\n\
    \    None\n    >>> longest([\"a\", \"b\", \"c\"])\n    \"a\"\n    >>> longest([\"\
    a\", \"bb\", \"ccc\"])\n    \"ccc\"\n    \n*/\nNullable!(string) longest(string[]\
    \ strings) \n{\n    Nullable!(string) result = null;\n    foreach(string s; strings)\n\
    \    {\n        if(result.isNull || s.length > result.get.length)\n        {\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpejzerv3k.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x4554b1]\\n??:? void tmpejzerv3k.__unittest_L26_C1()\
    \ [0x441437]\\n??:? void tmpejzerv3k.__modtest() [0x452fbc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x45e327]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x454ade]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x459cd1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x459d60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x459c5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x454ab5]\\n??:? runModuleUnitTests [0x45e0fd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x45643c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4563c3]\\n??:? _d_run_main [0x45632e]\\n??:? main [0x45308f]\\\
    n??:? __libc_start_main [0x5594f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

name: HumanEval_83_starts_one_ends
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
  \ n, return the count of the numbers of n-digit\n    positive integers that start\
  \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n"
tests: "unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
  \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
  \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
  void main(){}"
completions: ["{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n \
    \   for (long i = 1; i <= n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return\
    \ result;\n}", "{\n    long count = 0;\n    long power = pow(10, n - 1);\n   \
    \ long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n   \
    \     count += start * power;\n        count += end * power;\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        result++;\n        }\n    }\n    return result;\n}", "{\n    long total\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long\
    \ ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah =\
    \ 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n\
    \    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long\
    \ aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au =\
    \ 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n\
    \    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long\
    \ bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh =\
    \ 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n\
    \    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long\
    \ bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu =\
    \ 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =", "{\n\
    \    long result = 0;\n    foreach(i; 1 .. n)\n    {\n        result += pow(10,\
    \ i - 1);\n    }\n    return result;\n}", "{\n    if (n == 1)\n        return\
    \ 2;\n    else\n        return (pow(10, n - 1) - pow(10, n - 2)) * 2 + starts_one_ends(n\
    \ - 1);\n}", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}", "{\n\
    \    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n\
    \ - 1) + (long)pow(10, n - 1);\n}", "{\n    long result = 0;\n    if (n == 1)\
    \ {\n        result = 1;\n    } else if (n == 2) {\n        result = 10;\n   \
    \ } else {\n        result = 9 * pow(10, n - 1);\n    }\n    return result;\n}",
  "{\n    long count = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10,\
    \ n);\n    foreach(i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n  \
    \  foreach(i; min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n   \
    \     {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max) {\n\
    \        if(i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 0; i < n; i++) \n    {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}", "{\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    foreach(i; 0 .. n)\n    {\n        count\
    \ += start;\n        start *= 10;\n        end += start;\n    }\n    return count;\n\
    }", "{\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 2;\n    else if (n == 3)\n        return 3;\n    else if (n == 4)\n        return\
    \ 4;\n    else if (n == 5)\n        return 5;\n    else if (n == 6)\n        return\
    \ 6;\n    else if (n == 7)\n        return 7;\n    else if (n == 8)\n        return\
    \ 8;\n    else if (n == 9)\n        return 9;\n    else if (n == 10)\n       \
    \ return 10;\n    else if (n == 11)\n        return 11;\n    else if (n == 12)\n\
    \        return 12;\n    else if (n == 13)\n        return 13;\n    else if (n\
    \ == 14)\n        return 14;\n    else if (n == 15)\n        return 15;\n    else\
    \ if (n == 16)\n        return 16;\n    else if (n == 17)\n        return 17;\n\
    \    else if (n == 18)\n        return 18;\n    else if (n == 19)\n        return\
    \ 19;\n    else if (n == 20)\n        return 20;\n    else if (n == 21)\n    \
    \    return 21;\n    else if (n == 22)\n        return 22;\n    else if (n ==\
    \ 23)\n        return 23;\n    else if (n == 24)\n        return 24;\n    else\
    \ if (n == 25)\n        return 25;\n    else if (n == 26)\n        return 26;\n\
    \    else if (n == 27)\n        return 27;\n    else if (n == 28)\n        return\
    \ 28;\n    else if (n == 29)\n        return 29;\n    else if (n == 30)\n    \
    \    return 30;\n    else if (n == 31)\n        return 31;\n    else if (n ==\
    \ 32)\n        return 32;\n    else if (n == 33)\n        return 33;\n    else\
    \ if (n == 34)\n        return 34;\n    else if (n == 35)\n        return 35;\n\
    \    else if (n == 36)\n        return 36;\n    else if (n ==", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n  \
    \  count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n\
    }", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for\
    \ (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n\
    \    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n\
    }", "{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n\
    \ - 1) + pow(10, n - 1);\n}", "{\n    if (n == 1)\n        return 2;\n    else\
    \ if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n -\
    \ 1) + starts_one_ends(n - 2);\n}", "{\n    if (n == 1) \n        return 2;\n\
    \    if (n == 2) \n        return 3;\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}", "{\n    if (n == 1) \n        return 1;\n    if (n == 2) \n     \
    \   return 10;\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}",
  "{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n -\
    \ 1);\n    foreach(i; min .. max)\n    {\n        if(i % 10 == 1 || i / 10 ==\
    \ 1)\n            count++;\n    }\n    return count;\n}", "{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx =", "{\n    long result = 0;\n    long max_num = pow(10, n);\n\
    \    for (long i = 1; i < max_num; i++) {\n        string str = to!string(i);\n\
    \        if (str[0] == '1' || str[$-1] == '1') {\n            result++;\n    \
    \    }\n    }\n    return result;\n}", "{\n    if (n == 1)\n        return 2;\n\
    \    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}", "{\n \
    \   if (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n\
    \ - 1) + pow(10, n - 1);\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 1; i <= n; i++) {\n        start *= 10;\n\
    \        end = end * 10 + 1;\n    }\n    result = end - start;\n    return result;\n\
    }", "{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if\
    \ (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}", "{\n    long\
    \ result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n    \
    \    return 10;\n    else if (n == 3)\n        return 100;\n    else if (n ==\
    \ 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n    else\
    \ if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n\
    \    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n      \
    \  return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else\
    \ if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return\
    \ 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else\
    \ if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n      \
    \  return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else", "{\n    long count\
    \ = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i;\
    \ start .. end)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end\
    \ - start + 1;\n    return result;\n}", "{\n    long result = 0;\n    long max\
    \ = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        if (i % 10\
    \ == 1) \n        {\n            result++;\n        }\n        if (i / 10 == 1)\
    \ \n        {\n            result++;\n        }\n    }\n    return result;\n}",
  "{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else\n    {\n\
    \        result = starts_one_ends(n - 1) + pow(10, n - 1);\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long max = pow(10, n);\n    long\
    \ min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        if (i % 10\
    \ == 1 || i / 10 == 1)\n            result++;\n    }\n    return result;\n}",
  "{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max;\
    \ i++) \n    {\n        if (i % 10 == 1) \n        {\n            result++;\n\
    \        }\n        if (i / 10 == 1) \n        {\n            result++;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}", "{\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    end += 1;\n    count = end - start;\n\
    \    return count;\n}", "{\n    long result = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n \
    \   long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t\
    \ = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n \
    \   long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long\
    \ ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag =\
    \ 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n\
    \    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long\
    \ ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at =\
    \ 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n\
    \    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long\
    \ bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg =\
    \ 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n\
    \    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long\
    \ bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt =\
    \ 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n\
    \    long by = 0;\n    long bz", "{\n    long count = 0;\n    long start = 1;\n\
    \    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long\
    \ ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj =\
    \ 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long nnn = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long", "{\n    long result = 0;\n    if (n == 1)\n   \
    \     return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n \
    \       result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return\
    \ result;\n    }\n}", "{\n    long count = 0;\n    long start = 1;\n    long end\
    \ = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end\
    \ *= 10;\n    }\n    count += start;\n    count += end;\n    for (long i = 1;\
    \ i < n; i++) {\n        count += start * end;\n    }\n    return count;\n}",
  "{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n\
    \    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end\
    \ += 1;\n    result = end - start;\n    return result;\n}", "{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (pow(10, n - 1) + pow(10, n - 2));\n\
    }", "{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if\
    \ (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i\
    \ < n; i++) \n    {\n        start *= 10;\n        end *= 10;\n    }\n    for\
    \ (long i = start; i < end; i++) \n    {\n        if (i % 10 == 1 || i / start\
    \ == 1) \n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 1; i <= n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n   \
    \ end /= 10;\n    for (long i = start; i < end; i++) {\n        if (i % 10 ==\
    \ 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for\
    \ (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n\
    \    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n\
    }", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end\
    \ += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 ||\
    \ i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n ==\
    \ 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}", "{\n    if\
    \ (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n - 1)\
    \ + (long)pow(10, n - 1);\n}", "{\n    long result = 0;\n    long i = 1;\n   \
    \ while (i <= n) {\n        result += pow(10, i - 1);\n        i++;\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    long min = pow(10, n - 1);\n\
    \    long max = pow(10, n);\n    foreach (i; min .. max) {\n        if (i % 10\
    \ == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    if (n == 1) \n    {\n        result\
    \ = 1;\n    }\n    else \n    {\n        result = starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    long i\
    \ = 1;\n    for (; i < n; i++)\n    {\n        result += pow(10, i);\n    }\n\
    \    result += pow(10, n) - pow(10, n - 1);\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i\
    \ < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n\
    \    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / pow(10,\
    \ n - 1) == 1) {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for\
    \ (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n\
    \    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n\
    }", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for\
    \ (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n\
    \    result += start;\n    result += end;\n    result += (start - 1) * (n - 1);\n\
    \    return result;\n}", "{\n    long count = 0;\n    long start = (long)pow(10,\
    \ n - 1);\n    long end = (long)pow(10, n) - 1;\n    for (long i = start; i <=\
    \ end; i++) {\n        string s = to!string(i);\n        if (s[0] == '1' || s[$\
    \ - 1] == '1') {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long result = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max)\n\
    \    {\n        if(i % 10 == 1 || i / 10 == 1)\n            result++;\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n \
    \   long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u\
    \ = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n \
    \   long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long\
    \ qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu =\
    \ 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n\
    \    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n \
    \   long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n \
    \   long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n \
    \   long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n    long ooo = 0;\n \
    \   long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n \
    \   long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n \
    \   long xxx = 0;\n   ", "{\n    long count = 0;\n    long max = pow(10, n);\n\
    \    for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n     \
    \   {\n            count++;\n        }\n        if (i / 10 == 1) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long i = 1;\n    long j = 1;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end /= 10;\n    for\
    \ (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else\n    {\n        result =\
    \ starts_one_ends(n - 1) + (long)pow(10, n - 1);\n    }\n    return result;\n}",
  "{\n    long res = 0;\n    long start = 1;\n    long end = 1;\n    for (long i =\
    \ 1; i < n; i++) {\n        start *= 10;\n        end = end * 10 + 1;\n    }\n\
    \    res += start;\n    res += end;\n    return res;\n}", "{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}", "{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}", "{\n    if (n == 1) return 2;\n  \
    \  if (n == 2) return 3;\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}", "{\n    long count = 0;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long\
    \ ad = 1;\n    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah =\
    \ 1;\n    long ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n\
    \    long am = 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long\
    \ aq = 1;\n    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au =\
    \ 1;\n    long av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n\
    \    long az = 1;\n    long ba = 1;\n    long bb = 1;\n    long bc = 1;\n    long\
    \ bd = 1;\n    long be = 1;\n    long bf = 1;\n    long bg = 1;\n    long bh =\
    \ 1;\n    long bi = 1;\n    long bj = 1;\n    long bk = 1;\n    long bl = 1;\n\
    \    long bm = 1;\n    long bn = 1;\n    long bo = 1;\n    long bp = 1;\n    long\
    \ bq = 1;\n    long br = 1;\n    long bs = 1;\n    long bt = 1;\n    long bu =\
    \ 1;\n    long bv = 1;\n    long bw = 1;\n    long bx = 1;\n    long by = 1;\n\
    \    long bz", "{\n    if (n == 1)\n        return 2;\n    long result = 0;\n\
    \    for (long i = 1; i < n; i++)\n    {\n        result += pow(2, i);\n    }\n\
    \    return result + 1;\n}", "{\n    long result = 0;\n    long start = 1;\n \
    \   long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    result += start;\n    result += end;\n    result\
    \ += (n - 2) * 9 * start;\n    return result;\n}", "{\n    long count = 0;\n \
    \   long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n     \
    \   if (i % 10 == 1) \n        {\n            count++;\n        }\n        if\
    \ (i / 10 == 1) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n \
    \       count += pow(10, i - 1);\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}", "{\n    long count\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    if (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n\
    \ - 1) + (n - 1) * pow(10, n - 2);\n}", "{\n    long result = 0;\n    if (n ==\
    \ 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n\
    \    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n  \
    \      return result;\n    }\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    end += 1;\n    result = end - start;\n    return\
    \ result;\n}", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    end += 1;\n    count = end - start;\n    return count;\n}", "{\n \
    \   long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll =\
    \ 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n\
    \    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long\
    \ ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa =\
    \ 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n\
    \    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n   \
    \ long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n   \
    \ long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n   \
    \ long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n   \
    \ long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n  \
    \  long b", "{\n    if (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n\
    \ - 1) + pow(10, n - 1);\n}", "{\n    long result = 0;\n    if (n == 1)\n    \
    \    return 1;\n    else\n    {\n        result = starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n    }\n    return result;\n}", "{\n    if (n == 1)\n        return\
    \ 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n \
    \   result += (n - 2) * 9 * start;\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}", "{\n    long res\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     if (i % 10 == 1) {\n            res++;\n        }\n    }\n    return res;\n\
    }", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for\
    \ (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0",
  "{\n    if (n == 1) \n        return 2;\n    else if (n == 2) \n        return 3;\n\
    \    else \n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start\
    \ /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result\
    \ += start;\n    result += end;\n    result += (start - 1) * n;\n    return result;\n\
    }", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (int\
    \ i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for\
    \ (int i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n \
    \   foreach(i; start .. end)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n\
    \            count++;\n    }\n    return count;\n}", "{\n    if (n == 1) return\
    \ 1;\n    long result = 0;\n    foreach (i; 1 .. n)\n    {\n        result +=\
    \ pow(10, i - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n \
    \   long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if (i\
    \ % 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}",
  "{\n    if (n == 1)\n        return 2;\n    else\n        return (pow(10, n - 1)\
    \ + pow(10, n - 2));\n}", "{\n    long result;\n    if (n == 1) \n    {\n    \
    \    result = 2;\n    } \n    else \n    {\n        result = starts_one_ends(n\
    \ - 1) + pow(10, n - 1);\n    }\n    return result;\n}", "{\n    long result =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n \
    \   result += (start - 1) * (n - 1);\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n\
    }", "{\n    if (n == 1) return 2;\n    long res = 0;\n    long start = pow(10,\
    \ n - 1);\n    long end = pow(10, n);\n    for (long i = start; i < end; i++)\
    \ {\n        if (i % 10 == 1) res++;\n    }\n    return res;\n}", "{\n    long\
    \ result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n  \
    \  foreach(i; min .. max)\n    {\n        string s = to!string(i);\n        if(s[0]\
    \ == '1' || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n\
    }", "{\n    long ret = 0;\n    long max = pow(10, n);\n    for (long i = 1; i\
    \ < max; i++) {\n        string s = to!string(i);\n        if (s[0] == '1' ||\
    \ s[$-1] == '1') {\n            ret++;\n        }\n    }\n    return ret;\n}",
  "{\n    if (n == 1) \n        return 2;\n    else \n        return starts_one_ends(n\
    \ - 1) + pow(10, n - 1);\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;", "{\n    if (n == 1)\n        return 2;\n    else\n\
    \        return (n - 1) * pow(10, n - 2) + starts_one_ends(n - 1);\n}", "{\n \
    \   if (n == 1)\n        return 2;\n    if (n == 2)\n        return 3;\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}", "{\n    long result =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n   \
    \ long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q =\
    \ 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n   \
    \ long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z =\
    \ 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}", "{\n    long res\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     string s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1') {\n\
    \            res++;\n        }\n    }\n    return res;\n}", "{\n    long result\
    \ = 0;\n    if (n == 1) \n    {\n        result = 2;\n    }\n    else if (n ==\
    \ 2) \n    {\n        result = 3;\n    }\n    else \n    {\n        result = starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i\
    \ < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n\
    \    end -= 1;\n    result = end - start + 1;\n    return result;\n}", "{\n  \
    \  long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n\
    \        return 10;\n    else if (n == 3)\n        return 100;\n    else if (n\
    \ == 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n \
    \   else if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return\
    \ 1000000;\n    else if (n == 8)\n        return 10000000;\n    else if (n ==\
    \ 9)\n        return 100000000;\n    else if (n == 10)\n        return 1000000000;\n\
    \    else if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n \
    \       return 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n\
    \    else if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n\
    \        return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else", "{\n    long count\
    \ = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i;\
    \ start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    if (n == 1)\n        return\
    \ 1;\n    else if (n == 2)\n        return 2;\n    else\n        return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    for (long i = start; i < end * 10; i++)\
    \ {\n        if (i % 10 == 1 || i / start == 1) {\n            result++;\n   \
    \     }\n    }\n    return result;\n}", "{\n    long count = 0;\n    long i =\
    \ 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n   \
    \ long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s =\
    \ 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n   \
    \ long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b =\
    \ 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n   \
    \ long g = 1;\n    long h = 1;\n    long ii = 1;\n    long jj = 1;\n    long kk\
    \ = 1;\n    long ll = 1;\n    long mm = 1;\n    long oo = 1;\n    long pp = 1;\n\
    \    long qq = 1;\n    long rr = 1;\n    long ss = 1;\n    long tt = 1;\n    long\
    \ uu = 1;\n    long vv = 1;\n    long ww = 1;\n    long xx = 1;\n    long yy =\
    \ 1;\n    long zz = 1;\n    long aa = 1;\n    long bb = 1;\n    long cc = 1;\n\
    \    long dd = 1;\n    long ee = 1;\n    long ff = 1;\n    long gg = 1;\n    long\
    \ hh = 1;\n    long iii = 1;\n    long jjj = 1;\n    long kkk = 1;\n    long lll\
    \ = 1;\n    long mmm = 1;\n    long ooo = 1;\n    long ppp = 1;\n    long qqq\
    \ = 1;\n    long rrr = 1;\n    long sss = 1;\n    long ttt = 1;\n    long uuu\
    \ = 1;\n    long vvv = 1;\n    long www = 1;\n    long xxx = 1;\n    long yyy\
    \ = 1;\n    long zzz = 1;\n    long", "{\n    if (n == 1) return 1;\n    if (n\
    \ == 2) return 2;\n    if (n == 3) return 3;\n    long result = 0;\n    foreach\
    \ (i; 1 .. n) \n    {\n        result += starts_one_ends(n - i) * pow(10, i -\
    \ 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    long max =\
    \ pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        string s = to!string(i);\n\
    \        if (s[0] == '1' || s[$ - 1] == '1')\n            result++;\n    }\n \
    \   return result;\n}", "{\n    long count = 0;\n    for (long i = 1; i <= n;\
    \ i++) \n    {\n        count += pow(10, i - 1);\n    }\n    return count;\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n\
    \    while (i < n) {\n        result += start + end;\n        start *= 10;\n \
    \       end *= 10;\n        ++i;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i\
    \ < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n\
    \    result = end - start;\n    return result;\n}", "{\n    long result = 0;\n\
    \    if (n == 1) {\n        result = 1;\n    } else if (n == 2) {\n        result\
    \ = 10;\n    } else {\n        result = (pow(10, n - 1) - pow(10, n - 2)) * 2;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end\
    \ - start + 1;\n    return result;\n}", "{\n    if (n == 1)\n        return 2;\n\
    \    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}", "{\n    long count = 0;\n    long max =\
    \ pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n\
    \        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    result += start;\n    result += end;\n    result\
    \ += (start - 1) * (n - 1);\n    return result;\n}", "{\n    long count = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i <\
    \ end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    long max\
    \ = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n\
    \        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    if (n == 1)\n        return 2;\n    if\
    \ (n == 2)\n        return 3;\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n}", "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i;\
    \ 0 .. n)\n    {\n        result += start * end;\n        start *= 10;\n     \
    \   end *= 9;\n    }\n    return result;\n}", "{\n    if (n == 1)\n        return\
    \ 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}", "{\n    long count = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long\
    \ jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp =\
    \ 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n\
    \    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long\
    \ yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc =\
    \ 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n\
    \    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n \
    \   long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n \
    \   long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n \
    \   long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n \
    \   long zzz = 0;\n    long aaaa = 0;\n    long b", "{\n    long result = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n    long count = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -=\
    \ 1;\n    count = end - start + 1;\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}", "{\n    long result = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}", "{\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i\
    \ < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end -\
    \ start + 1;\n    return count;\n}", "{\n    long count = 0;\n    long start =\
    \ 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i <\
    \ end; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    long max = pow(10,\
    \ n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n   \
    \     if(i % 10 == 1 || i / 10 == 1)\n            count++;\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i\
    \ % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long max_digit = pow(10, n);\n   \
    \ long min_digit = pow(10, n - 1);\n    foreach (i; min_digit .. max_digit) {\n\
    \        if (i % 10 == 1 || i / min_digit == 1) {\n            result++;\n   \
    \     }\n    }\n    return result;\n}", "{\n    long ret = 0;\n    long max =\
    \ pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n\
    \        string s = to!string(i);\n        if (s[0] == '1' || s[$ - 1] == '1')\
    \ {\n            ret++;\n        }\n    }\n    return ret;\n}", "{\n    long result\
    \ = 0;\n    long max_num = pow(10, n);\n    long min_num = pow(10, n - 1);\n \
    \   foreach (num; min_num .. max_num) {\n        if (num % 10 == 1 || num / 10\
    \ == 1) {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n -\
    \ 1);\n    foreach(i; min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i; 0 .. n)\n\
    \    {\n        result += start * end;\n        start *= 10;\n        end *= 9;\n\
    \    }\n    return result;\n}", "{\n    if (n == 1)\n        return 2;\n    else\n\
    \        return (pow(10, n - 1) + pow(10, n - 2));\n}", "{\n    long result =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long nn = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd =\
    \ 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n\
    \    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long\
    \ mm = 0;\n    long nnn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq\
    \ = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n\
    \    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long\
    \ zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd\
    \ = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh\
    \ = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll\
    \ = 0;\n    long mmm = 0;\n    long nnnn = 0;\n    long ooo = 0;\n    long ppp\
    \ = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt\
    \ = 0;\n    long uuu = 0;\n    long vvv = 0;\n", "{\n    long count = 0;\n   \
    \ long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n\
    \    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long\
    \ pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt =\
    \ 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n\
    \    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long\
    \ cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg =\
    \ 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n\
    \    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n\
    \    long zzz = 0;\n    long aaaa = 0;\n    long b", "{\n    long result = 0;\n\
    \    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n    \
    \    if (i % 10 == 1) \n        {\n            result++;\n        }\n    }\n \
    \   return result;\n}", "{\n    long res = 0;\n    long min = 1;\n    long max\
    \ = 1;\n    for (long i = 1; i < n; i++) {\n        min *= 10;\n        max *=\
    \ 10;\n    }\n    max += 1;\n    res = max - min;\n    return res;\n}", "{\n \
    \   long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n\
    \    foreach(i; min .. max) {\n        if (i % 10 == 1 || i / 10 == 1) {\n   \
    \         result++;\n        }\n    }\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / pow(10, n - 1) ==\
    \ 1) {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n\
    \    foreach(i; min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n \
    \       {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    if (n == 1) \n        return 1;\n    else \n        return pow(10, n - 1)\
    \ + 9 * starts_one_ends(n - 1);\n}", "{\n    long result = 0;\n    if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n\
    \        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return\
    \ result;\n    }\n}", "{\n    if (n == 1) return 1;\n    else return starts_one_ends(n-1)\
    \ + pow(10, n-1);\n}", "{\n    long count = 0;\n    long start = 1;\n    long\
    \ end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n       \
    \ end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n\
    \        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long start = 1;\n\
    \    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx = 0;\n    long by =", "{\n    long result = 0;\n    if (n ==\
    \ 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n\
    \    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n  \
    \      return result;\n    }\n}", "{\n    long count = 0;\n    long start = 1;\n\
    \    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long\
    \ ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai =\
    \ 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n\
    \    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long\
    \ ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av =\
    \ 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n\
    \    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long\
    \ be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi =\
    \ 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n\
    \    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long\
    \ br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv =\
    \ 0;\n    long bw = 0;\n    long bx =", "{\n    long result = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n   \
    \ long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r =\
    \ 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n   \
    \ long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw = 0;\n    long bx = 0;\n    long by =", "{\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    end += 1;\n    count = end - start;\n\
    \    return count;\n}", "{\n    if (n == 1) return 1;\n    if (n == 2) return\
    \ 2;\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}", "{\n    long\
    \ count = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n\
    \    {\n        auto s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1')\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i\
    \ = 1; i <= n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start\
    \ /= 10;\n    end /= 10;\n    for (long i = start; i < end; i++) {\n        if\
    \ (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long result = 0;\n    if (n == 1)\n        return\
    \ 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n       \
    \ return 100;\n    else if (n == 4)\n        return 1000;\n    else if (n == 5)\n\
    \        return 10000;\n    else if (n == 6)\n        return 100000;\n    else\
    \ if (n == 7)\n        return 1000000;\n    else if (n == 8)\n        return 10000000;\n\
    \    else if (n == 9)\n        return 100000000;\n    else if (n == 10)\n    \
    \    return 1000000000;\n    else if (n == 11)\n        return 10000000000;\n\
    \    else if (n == 12)\n        return 100000000000;\n    else if (n == 13)\n\
    \        return 1000000000000;\n    else if (n == 14)\n        return 10000000000000;\n\
    \    else if (n == 15)\n        return 100000000000000;\n    else if (n == 16)\n\
    \        return 1000000000000000;\n    else if (n == 17)\n        return 10000000000000000;\n\
    \    else if (n == 18)\n        return 100000000000000000;\n    else if (n ==\
    \ 19)\n        return 1000000000000000000;\n    else if (n == 20)\n        return\
    \ 10000000000000000000;\n    else if (n == 21)\n        return 100000000000000000000;\n\
    \    else if (n == 22)\n        return 1000000000000000000000;\n    else if (n\
    \ == 23)\n        return 10000000000000000000000;\n    else if (n == 24)\n   \
    \     return 100000000000000000000000;\n    else if (n == 25)\n        return\
    \ 1000000000000000000000000;\n    else if (n == 26)\n        return 10000000000000000000000000;\n\
    \    else if (n == 27)\n        return 100000000000000000000000000;\n    else\
    \ if (n == 28)\n        return 1000000000000000000000000000;\n    else if (n ==\
    \ 29)\n        return 10000000000000000000000000000;\n    else if (n == 30)\n\
    \        return 100000000000000000000000000000;\n    else if (n == 31)\n     \
    \   return 1000000000000000000000000000000;\n    else if (n == 32)\n        return\
    \ 10000000000000000000000000000000;\n    else", "{\n    long count = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start\
    \ *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n\
    \    count += (start - 1) * 9;\n    return count;\n}", "{\n    long result = 0;\n\
    \    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n\
    \    else\n    {\n        long max = pow(10, n);\n        long min = pow(10, n\
    \ - 1);\n        for (long i = min; i < max; i++)\n        {\n            string\
    \ s = to!string(i);\n            if (s[0] == '1' || s[$ - 1] == '1')\n       \
    \         result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}", "{\n    long result = 0;\n    if\
    \ (n == 1)\n        return 1;\n    if (n == 2)\n        return 10;\n    if (n\
    \ == 3)\n        return 100;\n    if (n == 4)\n        return 1000;\n    if (n\
    \ == 5)\n        return 10000;\n    if (n == 6)\n        return 100000;\n    if\
    \ (n == 7)\n        return 1000000;\n    if (n == 8)\n        return 10000000;\n\
    \    if (n == 9)\n        return 100000000;\n    if (n == 10)\n        return\
    \ 1000000000;\n    if (n == 11)\n        return 10000000000;\n    if (n == 12)\n\
    \        return 100000000000;\n    if (n == 13)\n        return 1000000000000;\n\
    \    if (n == 14)\n        return 10000000000000;\n    if (n == 15)\n        return\
    \ 100000000000000;\n    if (n == 16)\n        return 1000000000000000;\n    if\
    \ (n == 17)\n        return 10000000000000000;\n    if (n == 18)\n        return\
    \ 100000000000000000;\n    if (n == 19)\n        return 1000000000000000000;\n\
    \    return result;\n}", "{\n    long result = 0;\n    long start = 1;\n    long\
    \ end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n       \
    \ end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start\
    \ - 1) * (n - 1);\n    return result;\n}", "{\n    long result = 0;\n    long\
    \ start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k\
    \ = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n \
    \   long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t\
    \ = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n \
    \   long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long\
    \ ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag =\
    \ 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n\
    \    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long\
    \ ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at =\
    \ 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n\
    \    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long\
    \ bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg =\
    \ 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n\
    \    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long\
    \ bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt =\
    \ 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    count\
    \ = end - start;\n    return count;\n}", "{\n    long result = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n \
    \   result += (start - 1) * (n - 1);\n    return result;\n}", "{\n    return pow(10,\
    \ n - 1);\n}", "{\n    long result = 0;\n    long max = pow(10, n);\n    long\
    \ min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        if(i % 10\
    \ == 1 || i / 10 == 1)\n        {\n            result++;\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    long start = 1;\n    long\
    \ end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n       \
    \ end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n\
    \        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    long start = 1;\n\
    \    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n\
    \        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end\
    \ - start + 1;\n    return result;\n}", "{\n    long result = 0;\n    long max\
    \ = pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        if(i % 10 == 1 || i\
    \ / 10 == 1)\n            result++;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0",
  "{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 4;\n\
    \    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}",
  "{\n    long count = 0;\n    long min = pow(10, n - 1);\n    long max = pow(10,\
    \ n);\n    for (long i = min; i < max; i++) {\n        string s = to!string(i);\n\
    \        if (s[0] == '1' || s[$ - 1] == '1') {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long result = 0;\n    if (n == 1)\n\
    \        return 1;\n    if (n == 2)\n        return 10;\n    if (n == 3)\n   \
    \     return 100;\n    if (n == 4)\n        return 1000;\n    if (n == 5)\n  \
    \      return 10000;\n    if (n == 6)\n        return 100000;\n    if (n == 7)\n\
    \        return 1000000;\n    if (n == 8)\n        return 10000000;\n    if (n\
    \ == 9)\n        return 100000000;\n    if (n == 10)\n        return 1000000000;\n\
    \    if (n == 11)\n        return 10000000000;\n    if (n == 12)\n        return\
    \ 100000000000;\n    if (n == 13)\n        return 1000000000000;\n    if (n ==\
    \ 14)\n        return 10000000000000;\n    if (n == 15)\n        return 100000000000000;\n\
    \    if (n == 16)\n        return 1000000000000000;\n    if (n == 17)\n      \
    \  return 10000000000000000;\n    if (n == 18)\n        return 100000000000000000;\n\
    \    if (n == 19)\n        return 1000000000000000000;\n    if (n == 20)\n   \
    \     return 10000000000000000000;\n    if (n == 21)\n        return 100000000000000000000;\n\
    \    if (n == 22)\n        return 1000000000000000000000;\n    if (n == 23)\n\
    \        return 10000000000000000000000;\n    if (n == 24)\n        return 100000000000000000000000;\n\
    \    if (n == 25)\n        return 1000000000000000000000000;\n    if (n == 26)\n\
    \        return 10000000000000000000000000;\n    if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    if (n == 29)\n        return 10000000000000000000000000000;\n    if (n ==\
    \ 30)\n        return 100000000000000000000000000000;\n    if (n == 31)\n    \
    \    return 1000000000000000000000000000000;\n    if (n == 32)\n        return\
    \ 10000000000000000000000000000000;\n    if (n == 33)\n        return 100000000000000000000000000000000;\n\
    \    if (n == 34)\n        return 1000000000000000000000000000000000;\n   ", "{\n\
    \    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n_digits = 0;\n    long n_digits_minus_one = 0;\n    long n_digits_minus_two\
    \ = 0;\n    long n_digits_minus_three = 0;\n    long n_digits_minus_four = 0;\n\
    \    long n_digits_minus_five = 0;\n    long n_digits_minus_six = 0;\n    long\
    \ n_digits_minus_seven = 0;\n    long n_digits_minus_eight = 0;\n    long n_digits_minus_nine\
    \ = 0;\n    long n_digits_minus_ten = 0;\n    long n_digits_minus_eleven = 0;\n\
    \    long n_digits_minus_twelve = 0;\n    long n_digits_minus_thirteen = 0;\n\
    \    long n_digits_minus_fourteen = 0;\n    long n_digits_minus_fifteen = 0;\n\
    \    long n_digits_minus_sixteen = 0;\n    long n_digits_minus_seventeen = 0;\n\
    \    long n_digits_minus_eighteen = 0;\n    long n_digits_minus_nineteen = 0;\n\
    \    long n_digits_minus_twenty = 0;\n    long n_digits_minus_twenty_one = 0;\n\
    \    long n_digits_minus_twenty_two = 0;\n    long n_digits_minus_twenty_three\
    \ = 0;\n    long n_digits_minus_twenty_four = 0;\n    long n_digits_minus_twenty_five\
    \ = 0;\n    long n_digits_minus_twenty_six = 0;\n    long n_digits_minus_twenty_seven\
    \ = 0;\n    long n_digits_minus_twenty_eight = 0;\n    long n_digits_minus_twenty_nine\
    \ = 0;", "{\n    long result = 0;\n    long max = pow(10, n);\n    foreach(i;\
    \ 1..max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1' ||\
    \ s[$-1] == '1')\n            result++;\n    }\n    return result;\n}", "{\n \
    \   long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i =\
    \ 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n \
    \           count++;\n        }\n    }\n    return count;\n}", "{\n    if (n ==\
    \ 1) return 1;\n    if (n == 2) return 10;\n    long ret = 0;\n    long i = 1;\n\
    \    while (i < n) {\n        ret += pow(10, i);\n        i++;\n    }\n    ret\
    \ += pow(10, n-1);\n    return ret;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"
